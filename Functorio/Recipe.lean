-- Generated by generate-recipe.py. Do not modify.

import Functorio.Fraction

import Functorio.Direction

inductive Ingredient
  | accumulator
  | activeProviderChest
  | advancedCircuit
  | agriculturalSciencePack
  | agriculturalTower
  | ammonia
  | ammoniacalSolution
  | arithmeticCombinator
  | artificialJellynutSoil
  | artificialYumakoSoil
  | artilleryShell
  | artilleryTurret
  | artilleryWagon
  | assemblingMachine1
  | assemblingMachine2
  | assemblingMachine3
  | asteroidCollector
  | atomicBomb
  | automationSciencePack
  | barrel
  | battery
  | batteryEquipment
  | batteryMk2Equipment
  | batteryMk3Equipment
  | beacon
  | beltImmunityEquipment
  | bigElectricPole
  | bigMiningDrill
  | biochamber
  | bioflux
  | biolab
  | biterEgg
  | blueprint
  | blueprintBook
  | boiler
  | bottomlessChest
  | bufferChest
  | bulkInserter
  | burnerGenerator
  | burnerInserter
  | burnerMiningDrill
  | calcite
  | cannonShell
  | captiveBiterSpawner
  | captureRobotRocket
  | car
  | carbon
  | carbonFiber
  | carbonicAsteroidChunk
  | cargoBay
  | cargoLandingPad
  | cargoWagon
  | centrifuge
  | chemicalPlant
  | chemicalSciencePack
  | cliffExplosives
  | clusterGrenade
  | coal
  | coin
  | combatShotgun
  | concrete
  | constantCombinator
  | constructionRobot
  | copperBacteria
  | copperCable
  | copperOre
  | copperPlate
  | crudeOil
  | crudeOilBarrel
  | crusher
  | cryogenicPlant
  | cryogenicSciencePack
  | deciderCombinator
  | deconstructionPlanner
  | defenderCapsule
  | depletedUraniumFuelCell
  | destroyerCapsule
  | dischargeDefenseEquipment
  | displayPanel
  | distractorCapsule
  | efficiencyModule
  | efficiencyModule2
  | efficiencyModule3
  | electricEnergyInterface
  | electricEngineUnit
  | electricFurnace
  | electricMiningDrill
  | electrolyte
  | electromagneticPlant
  | electromagneticSciencePack
  | electronicCircuit
  | emptyModuleSlot
  | energyShieldEquipment
  | energyShieldMk2Equipment
  | engineUnit
  | exoskeletonEquipment
  | explosiveCannonShell
  | explosiveRocket
  | explosiveUraniumCannonShell
  | explosives
  | expressLoader
  | expressSplitter
  | expressTransportBelt
  | expressUndergroundBelt
  | fastInserter
  | fastLoader
  | fastSplitter
  | fastTransportBelt
  | fastUndergroundBelt
  | firearmMagazine
  | fissionReactorEquipment
  | flamethrower
  | flamethrowerAmmo
  | flamethrowerTurret
  | fluidWagon
  | fluorine
  | fluoroketoneCold
  | fluoroketoneColdBarrel
  | fluoroketoneHot
  | fluoroketoneHotBarrel
  | flyingRobotFrame
  | foundation
  | foundry
  | fusionGenerator
  | fusionPowerCell
  | fusionReactor
  | fusionReactorEquipment
  | gate
  | grenade
  | gunTurret
  | hazardConcrete
  | heatExchanger
  | heatInterface
  | heatPipe
  | heatingTower
  | heavyArmor
  | heavyOil
  | heavyOilBarrel
  | holmiumOre
  | holmiumPlate
  | holmiumSolution
  | ice
  | icePlatform
  | infinityCargoWagon
  | infinityChest
  | infinityPipe
  | inserter
  | ironBacteria
  | ironChest
  | ironGearWheel
  | ironOre
  | ironPlate
  | ironStick
  | itemUnknown
  | jelly
  | jellynut
  | jellynutSeed
  | lab
  | landMine
  | landfill
  | laneSplitter
  | laserTurret
  | lava
  | lightArmor
  | lightOil
  | lightOilBarrel
  | lightningCollector
  | lightningRod
  | linkedBelt
  | linkedChest
  | lithium
  | lithiumBrine
  | lithiumPlate
  | loader
  | locomotive
  | logisticRobot
  | logisticSciencePack
  | longHandedInserter
  | lowDensityStructure
  | lubricant
  | lubricantBarrel
  | mechArmor
  | mediumElectricPole
  | metallicAsteroidChunk
  | metallurgicSciencePack
  | militarySciencePack
  | modularArmor
  | moltenCopper
  | moltenIron
  | nightVisionEquipment
  | nuclearFuel
  | nuclearReactor
  | nutrients
  | offshorePump
  | oilRefinery
  | oneWayValve
  | overflowValve
  | overgrowthJellynutSoil
  | overgrowthYumakoSoil
  | oxideAsteroidChunk
  | passiveProviderChest
  | pentapodEgg
  | personalLaserDefenseEquipment
  | personalRoboportEquipment
  | personalRoboportMk2Equipment
  | petroleumGas
  | petroleumGasBarrel
  | piercingRoundsMagazine
  | piercingShotgunShell
  | pipe
  | pipeToGround
  | pistol
  | plasticBar
  | poisonCapsule
  | powerArmor
  | powerArmorMk2
  | powerSwitch
  | processingUnit
  | productionSciencePack
  | productivityModule
  | productivityModule2
  | productivityModule3
  | programmableSpeaker
  | promethiumAsteroidChunk
  | promethiumSciencePack
  | proxyContainer
  | pump
  | pumpjack
  | qualityModule
  | qualityModule2
  | qualityModule3
  | quantumProcessor
  | radar
  | rail
  | railChainSignal
  | railRamp
  | railSignal
  | railSupport
  | railgun
  | railgunAmmo
  | railgunTurret
  | rawFish
  | recycler
  | refinedConcrete
  | refinedHazardConcrete
  | repairPack
  | requesterChest
  | roboport
  | rocket
  | rocketFuel
  | rocketLauncher
  | rocketPart
  | rocketSilo
  | rocketTurret
  | science
  | scrap
  | selectionTool
  | selectorCombinator
  | shotgun
  | shotgunShell
  | simpleEntityWithForce
  | simpleEntityWithOwner
  | slowdownCapsule
  | smallElectricPole
  | smallLamp
  | solarPanel
  | solarPanelEquipment
  | solidFuel
  | spacePlatformFoundation
  | spacePlatformHub
  | spacePlatformStarterPack
  | spaceSciencePack
  | speedModule
  | speedModule2
  | speedModule3
  | spidertron
  | splitter
  | spoilage
  | stackInserter
  | steam
  | steamEngine
  | steamTurbine
  | steelChest
  | steelFurnace
  | steelPlate
  | stone
  | stoneBrick
  | stoneFurnace
  | stoneWall
  | storageChest
  | storageTank
  | submachineGun
  | substation
  | sulfur
  | sulfuricAcid
  | sulfuricAcidBarrel
  | supercapacitor
  | superconductor
  | tank
  | teslaAmmo
  | teslaTurret
  | teslagun
  | thruster
  | thrusterFuel
  | thrusterOxidizer
  | toolbeltEquipment
  | topUpValve
  | trainStop
  | transportBelt
  | treeSeed
  | tungstenCarbide
  | tungstenOre
  | tungstenPlate
  | turboLoader
  | turboSplitter
  | turboTransportBelt
  | turboUndergroundBelt
  | undergroundBelt
  | upgradePlanner
  | uranium235
  | uranium238
  | uraniumCannonShell
  | uraniumFuelCell
  | uraniumOre
  | uraniumRoundsMagazine
  | utilitySciencePack
  | water
  | waterBarrel
  | wood
  | woodenChest
  | yumako
  | yumakoMash
  | yumakoSeed
  deriving DecidableEq, Repr, Inhabited

inductive RecipeCategory
  | advancedCrafting
  | basicCrafting
  | captiveSpawnerProcess
  | centrifuging
  | chemistry
  | chemistryOrCryogenics
  | crafting
  | craftingWithFluid
  | craftingWithFluidOrMetallurgy
  | crushing
  | cryogenics
  | cryogenicsOrAssembling
  | electromagnetics
  | electronics
  | electronicsOrAssembling
  | electronicsWithFluid
  | metallurgy
  | metallurgyOrAssembling
  | oilProcessing
  | organic
  | organicOrAssembling
  | organicOrChemistry
  | organicOrHandCrafting
  | parameters
  | pressing
  | recycling
  | recyclingOrHandCrafting
  | rocketBuilding
  | smelting
  deriving DecidableEq, Repr, Inhabited

namespace Ingredient

def isLiquid : Ingredient -> Bool
| .ammonia => true
| .ammoniacalSolution => true
| .crudeOil => true
| .electrolyte => true
| .fluorine => true
| .fluoroketoneCold => true
| .fluoroketoneHot => true
| .heavyOil => true
| .holmiumSolution => true
| .lava => true
| .lightOil => true
| .lithiumBrine => true
| .lubricant => true
| .moltenCopper => true
| .moltenIron => true
| .petroleumGas => true
| .steam => true
| .sulfuricAcid => true
| .thrusterFuel => true
| .thrusterOxidizer => true
| .water => true
| _ => false

def spoilResult : Ingredient -> Option Ingredient
| .agriculturalSciencePack => .some spoilage
| .bioflux => .some spoilage
| .copperBacteria => .some copperOre
| .ironBacteria => .some ironOre
| .jelly => .some spoilage
| .jellynut => .some spoilage
| .nutrients => .some spoilage
| .rawFish => .some spoilage
| .yumako => .some spoilage
| .yumakoMash => .some spoilage
| _ => .none

def name : Ingredient -> String
| .accumulator => "accumulator"
| .activeProviderChest => "active-provider-chest"
| .advancedCircuit => "advanced-circuit"
| .agriculturalSciencePack => "agricultural-science-pack"
| .agriculturalTower => "agricultural-tower"
| .ammonia => "ammonia"
| .ammoniacalSolution => "ammoniacal-solution"
| .arithmeticCombinator => "arithmetic-combinator"
| .artificialJellynutSoil => "artificial-jellynut-soil"
| .artificialYumakoSoil => "artificial-yumako-soil"
| .artilleryShell => "artillery-shell"
| .artilleryTurret => "artillery-turret"
| .artilleryWagon => "artillery-wagon"
| .assemblingMachine1 => "assembling-machine-1"
| .assemblingMachine2 => "assembling-machine-2"
| .assemblingMachine3 => "assembling-machine-3"
| .asteroidCollector => "asteroid-collector"
| .atomicBomb => "atomic-bomb"
| .automationSciencePack => "automation-science-pack"
| .barrel => "barrel"
| .battery => "battery"
| .batteryEquipment => "battery-equipment"
| .batteryMk2Equipment => "battery-mk2-equipment"
| .batteryMk3Equipment => "battery-mk3-equipment"
| .beacon => "beacon"
| .beltImmunityEquipment => "belt-immunity-equipment"
| .bigElectricPole => "big-electric-pole"
| .bigMiningDrill => "big-mining-drill"
| .biochamber => "biochamber"
| .bioflux => "bioflux"
| .biolab => "biolab"
| .biterEgg => "biter-egg"
| .blueprint => "blueprint"
| .blueprintBook => "blueprint-book"
| .boiler => "boiler"
| .bottomlessChest => "bottomless-chest"
| .bufferChest => "buffer-chest"
| .bulkInserter => "bulk-inserter"
| .burnerGenerator => "burner-generator"
| .burnerInserter => "burner-inserter"
| .burnerMiningDrill => "burner-mining-drill"
| .calcite => "calcite"
| .cannonShell => "cannon-shell"
| .captiveBiterSpawner => "captive-biter-spawner"
| .captureRobotRocket => "capture-robot-rocket"
| .car => "car"
| .carbon => "carbon"
| .carbonFiber => "carbon-fiber"
| .carbonicAsteroidChunk => "carbonic-asteroid-chunk"
| .cargoBay => "cargo-bay"
| .cargoLandingPad => "cargo-landing-pad"
| .cargoWagon => "cargo-wagon"
| .centrifuge => "centrifuge"
| .chemicalPlant => "chemical-plant"
| .chemicalSciencePack => "chemical-science-pack"
| .cliffExplosives => "cliff-explosives"
| .clusterGrenade => "cluster-grenade"
| .coal => "coal"
| .coin => "coin"
| .combatShotgun => "combat-shotgun"
| .concrete => "concrete"
| .constantCombinator => "constant-combinator"
| .constructionRobot => "construction-robot"
| .copperBacteria => "copper-bacteria"
| .copperCable => "copper-cable"
| .copperOre => "copper-ore"
| .copperPlate => "copper-plate"
| .crudeOil => "crude-oil"
| .crudeOilBarrel => "crude-oil-barrel"
| .crusher => "crusher"
| .cryogenicPlant => "cryogenic-plant"
| .cryogenicSciencePack => "cryogenic-science-pack"
| .deciderCombinator => "decider-combinator"
| .deconstructionPlanner => "deconstruction-planner"
| .defenderCapsule => "defender-capsule"
| .depletedUraniumFuelCell => "depleted-uranium-fuel-cell"
| .destroyerCapsule => "destroyer-capsule"
| .dischargeDefenseEquipment => "discharge-defense-equipment"
| .displayPanel => "display-panel"
| .distractorCapsule => "distractor-capsule"
| .efficiencyModule => "efficiency-module"
| .efficiencyModule2 => "efficiency-module-2"
| .efficiencyModule3 => "efficiency-module-3"
| .electricEnergyInterface => "electric-energy-interface"
| .electricEngineUnit => "electric-engine-unit"
| .electricFurnace => "electric-furnace"
| .electricMiningDrill => "electric-mining-drill"
| .electrolyte => "electrolyte"
| .electromagneticPlant => "electromagnetic-plant"
| .electromagneticSciencePack => "electromagnetic-science-pack"
| .electronicCircuit => "electronic-circuit"
| .emptyModuleSlot => "empty-module-slot"
| .energyShieldEquipment => "energy-shield-equipment"
| .energyShieldMk2Equipment => "energy-shield-mk2-equipment"
| .engineUnit => "engine-unit"
| .exoskeletonEquipment => "exoskeleton-equipment"
| .explosiveCannonShell => "explosive-cannon-shell"
| .explosiveRocket => "explosive-rocket"
| .explosiveUraniumCannonShell => "explosive-uranium-cannon-shell"
| .explosives => "explosives"
| .expressLoader => "express-loader"
| .expressSplitter => "express-splitter"
| .expressTransportBelt => "express-transport-belt"
| .expressUndergroundBelt => "express-underground-belt"
| .fastInserter => "fast-inserter"
| .fastLoader => "fast-loader"
| .fastSplitter => "fast-splitter"
| .fastTransportBelt => "fast-transport-belt"
| .fastUndergroundBelt => "fast-underground-belt"
| .firearmMagazine => "firearm-magazine"
| .fissionReactorEquipment => "fission-reactor-equipment"
| .flamethrower => "flamethrower"
| .flamethrowerAmmo => "flamethrower-ammo"
| .flamethrowerTurret => "flamethrower-turret"
| .fluidWagon => "fluid-wagon"
| .fluorine => "fluorine"
| .fluoroketoneCold => "fluoroketone-cold"
| .fluoroketoneColdBarrel => "fluoroketone-cold-barrel"
| .fluoroketoneHot => "fluoroketone-hot"
| .fluoroketoneHotBarrel => "fluoroketone-hot-barrel"
| .flyingRobotFrame => "flying-robot-frame"
| .foundation => "foundation"
| .foundry => "foundry"
| .fusionGenerator => "fusion-generator"
| .fusionPowerCell => "fusion-power-cell"
| .fusionReactor => "fusion-reactor"
| .fusionReactorEquipment => "fusion-reactor-equipment"
| .gate => "gate"
| .grenade => "grenade"
| .gunTurret => "gun-turret"
| .hazardConcrete => "hazard-concrete"
| .heatExchanger => "heat-exchanger"
| .heatInterface => "heat-interface"
| .heatPipe => "heat-pipe"
| .heatingTower => "heating-tower"
| .heavyArmor => "heavy-armor"
| .heavyOil => "heavy-oil"
| .heavyOilBarrel => "heavy-oil-barrel"
| .holmiumOre => "holmium-ore"
| .holmiumPlate => "holmium-plate"
| .holmiumSolution => "holmium-solution"
| .ice => "ice"
| .icePlatform => "ice-platform"
| .infinityCargoWagon => "infinity-cargo-wagon"
| .infinityChest => "infinity-chest"
| .infinityPipe => "infinity-pipe"
| .inserter => "inserter"
| .ironBacteria => "iron-bacteria"
| .ironChest => "iron-chest"
| .ironGearWheel => "iron-gear-wheel"
| .ironOre => "iron-ore"
| .ironPlate => "iron-plate"
| .ironStick => "iron-stick"
| .itemUnknown => "item-unknown"
| .jelly => "jelly"
| .jellynut => "jellynut"
| .jellynutSeed => "jellynut-seed"
| .lab => "lab"
| .landMine => "land-mine"
| .landfill => "landfill"
| .laneSplitter => "lane-splitter"
| .laserTurret => "laser-turret"
| .lava => "lava"
| .lightArmor => "light-armor"
| .lightOil => "light-oil"
| .lightOilBarrel => "light-oil-barrel"
| .lightningCollector => "lightning-collector"
| .lightningRod => "lightning-rod"
| .linkedBelt => "linked-belt"
| .linkedChest => "linked-chest"
| .lithium => "lithium"
| .lithiumBrine => "lithium-brine"
| .lithiumPlate => "lithium-plate"
| .loader => "loader"
| .locomotive => "locomotive"
| .logisticRobot => "logistic-robot"
| .logisticSciencePack => "logistic-science-pack"
| .longHandedInserter => "long-handed-inserter"
| .lowDensityStructure => "low-density-structure"
| .lubricant => "lubricant"
| .lubricantBarrel => "lubricant-barrel"
| .mechArmor => "mech-armor"
| .mediumElectricPole => "medium-electric-pole"
| .metallicAsteroidChunk => "metallic-asteroid-chunk"
| .metallurgicSciencePack => "metallurgic-science-pack"
| .militarySciencePack => "military-science-pack"
| .modularArmor => "modular-armor"
| .moltenCopper => "molten-copper"
| .moltenIron => "molten-iron"
| .nightVisionEquipment => "night-vision-equipment"
| .nuclearFuel => "nuclear-fuel"
| .nuclearReactor => "nuclear-reactor"
| .nutrients => "nutrients"
| .offshorePump => "offshore-pump"
| .oilRefinery => "oil-refinery"
| .oneWayValve => "one-way-valve"
| .overflowValve => "overflow-valve"
| .overgrowthJellynutSoil => "overgrowth-jellynut-soil"
| .overgrowthYumakoSoil => "overgrowth-yumako-soil"
| .oxideAsteroidChunk => "oxide-asteroid-chunk"
| .passiveProviderChest => "passive-provider-chest"
| .pentapodEgg => "pentapod-egg"
| .personalLaserDefenseEquipment => "personal-laser-defense-equipment"
| .personalRoboportEquipment => "personal-roboport-equipment"
| .personalRoboportMk2Equipment => "personal-roboport-mk2-equipment"
| .petroleumGas => "petroleum-gas"
| .petroleumGasBarrel => "petroleum-gas-barrel"
| .piercingRoundsMagazine => "piercing-rounds-magazine"
| .piercingShotgunShell => "piercing-shotgun-shell"
| .pipe => "pipe"
| .pipeToGround => "pipe-to-ground"
| .pistol => "pistol"
| .plasticBar => "plastic-bar"
| .poisonCapsule => "poison-capsule"
| .powerArmor => "power-armor"
| .powerArmorMk2 => "power-armor-mk2"
| .powerSwitch => "power-switch"
| .processingUnit => "processing-unit"
| .productionSciencePack => "production-science-pack"
| .productivityModule => "productivity-module"
| .productivityModule2 => "productivity-module-2"
| .productivityModule3 => "productivity-module-3"
| .programmableSpeaker => "programmable-speaker"
| .promethiumAsteroidChunk => "promethium-asteroid-chunk"
| .promethiumSciencePack => "promethium-science-pack"
| .proxyContainer => "proxy-container"
| .pump => "pump"
| .pumpjack => "pumpjack"
| .qualityModule => "quality-module"
| .qualityModule2 => "quality-module-2"
| .qualityModule3 => "quality-module-3"
| .quantumProcessor => "quantum-processor"
| .radar => "radar"
| .rail => "rail"
| .railChainSignal => "rail-chain-signal"
| .railRamp => "rail-ramp"
| .railSignal => "rail-signal"
| .railSupport => "rail-support"
| .railgun => "railgun"
| .railgunAmmo => "railgun-ammo"
| .railgunTurret => "railgun-turret"
| .rawFish => "raw-fish"
| .recycler => "recycler"
| .refinedConcrete => "refined-concrete"
| .refinedHazardConcrete => "refined-hazard-concrete"
| .repairPack => "repair-pack"
| .requesterChest => "requester-chest"
| .roboport => "roboport"
| .rocket => "rocket"
| .rocketFuel => "rocket-fuel"
| .rocketLauncher => "rocket-launcher"
| .rocketPart => "rocket-part"
| .rocketSilo => "rocket-silo"
| .rocketTurret => "rocket-turret"
| .science => "science"
| .scrap => "scrap"
| .selectionTool => "selection-tool"
| .selectorCombinator => "selector-combinator"
| .shotgun => "shotgun"
| .shotgunShell => "shotgun-shell"
| .simpleEntityWithForce => "simple-entity-with-force"
| .simpleEntityWithOwner => "simple-entity-with-owner"
| .slowdownCapsule => "slowdown-capsule"
| .smallElectricPole => "small-electric-pole"
| .smallLamp => "small-lamp"
| .solarPanel => "solar-panel"
| .solarPanelEquipment => "solar-panel-equipment"
| .solidFuel => "solid-fuel"
| .spacePlatformFoundation => "space-platform-foundation"
| .spacePlatformHub => "space-platform-hub"
| .spacePlatformStarterPack => "space-platform-starter-pack"
| .spaceSciencePack => "space-science-pack"
| .speedModule => "speed-module"
| .speedModule2 => "speed-module-2"
| .speedModule3 => "speed-module-3"
| .spidertron => "spidertron"
| .splitter => "splitter"
| .spoilage => "spoilage"
| .stackInserter => "stack-inserter"
| .steam => "steam"
| .steamEngine => "steam-engine"
| .steamTurbine => "steam-turbine"
| .steelChest => "steel-chest"
| .steelFurnace => "steel-furnace"
| .steelPlate => "steel-plate"
| .stone => "stone"
| .stoneBrick => "stone-brick"
| .stoneFurnace => "stone-furnace"
| .stoneWall => "stone-wall"
| .storageChest => "storage-chest"
| .storageTank => "storage-tank"
| .submachineGun => "submachine-gun"
| .substation => "substation"
| .sulfur => "sulfur"
| .sulfuricAcid => "sulfuric-acid"
| .sulfuricAcidBarrel => "sulfuric-acid-barrel"
| .supercapacitor => "supercapacitor"
| .superconductor => "superconductor"
| .tank => "tank"
| .teslaAmmo => "tesla-ammo"
| .teslaTurret => "tesla-turret"
| .teslagun => "teslagun"
| .thruster => "thruster"
| .thrusterFuel => "thruster-fuel"
| .thrusterOxidizer => "thruster-oxidizer"
| .toolbeltEquipment => "toolbelt-equipment"
| .topUpValve => "top-up-valve"
| .trainStop => "train-stop"
| .transportBelt => "transport-belt"
| .treeSeed => "tree-seed"
| .tungstenCarbide => "tungsten-carbide"
| .tungstenOre => "tungsten-ore"
| .tungstenPlate => "tungsten-plate"
| .turboLoader => "turbo-loader"
| .turboSplitter => "turbo-splitter"
| .turboTransportBelt => "turbo-transport-belt"
| .turboUndergroundBelt => "turbo-underground-belt"
| .undergroundBelt => "underground-belt"
| .upgradePlanner => "upgrade-planner"
| .uranium235 => "uranium-235"
| .uranium238 => "uranium-238"
| .uraniumCannonShell => "uranium-cannon-shell"
| .uraniumFuelCell => "uranium-fuel-cell"
| .uraniumOre => "uranium-ore"
| .uraniumRoundsMagazine => "uranium-rounds-magazine"
| .utilitySciencePack => "utility-science-pack"
| .water => "water"
| .waterBarrel => "water-barrel"
| .wood => "wood"
| .woodenChest => "wooden-chest"
| .yumako => "yumako"
| .yumakoMash => "yumako-mash"
| .yumakoSeed => "yumako-seed"

end Ingredient

structure Recipe where
  name: String
  -- The `Fraction` indicates how many items are needed to execute the recipe.
  inputs : List (Fraction × Ingredient)
  -- The `Fraction` indicates how many output items are generated by executing the recipe.
  outputs : List (Fraction × Ingredient)
  category : RecipeCategory
  -- Number of seconds that it takes the user to execute the recipe.
  time : Fraction
  deriving DecidableEq, Repr, Inhabited

inductive FluidBoxType where
  | input
  | output
  | inputOutput
  deriving DecidableEq, Repr, Inhabited

structure FluidBox where
  side: Direction
  offset: Nat
  type: FluidBoxType
  deriving DecidableEq, Repr, Inhabited

structure FabricatorDetails where
  name : String
  width : Nat
  height : Nat
  speedup : Fraction
  productivity : Fraction
  moduleSlots : Nat
  fluidBoxes : List FluidBox
  categories : List RecipeCategory
  deriving DecidableEq, Repr, Inhabited

inductive RecipeName
  | accumulator
  | accumulatorRecycling
  | acidNeutralisation
  | activeProviderChest
  | activeProviderChestRecycling
  | advancedCarbonicAsteroidCrushing
  | advancedCircuit
  | advancedCircuitRecycling
  | advancedMetallicAsteroidCrushing
  | advancedOilProcessing
  | advancedOxideAsteroidCrushing
  | advancedThrusterFuel
  | advancedThrusterOxidizer
  | agriculturalSciencePack
  | agriculturalSciencePackRecycling
  | agriculturalTower
  | agriculturalTowerRecycling
  | ammoniaRocketFuel
  | ammoniacalSolutionSeparation
  | arithmeticCombinator
  | arithmeticCombinatorRecycling
  | artificialJellynutSoil
  | artificialJellynutSoilRecycling
  | artificialYumakoSoil
  | artificialYumakoSoilRecycling
  | artilleryShell
  | artilleryShellRecycling
  | artilleryTurret
  | artilleryTurretRecycling
  | artilleryWagon
  | artilleryWagonRecycling
  | assemblingMachine1
  | assemblingMachine1Recycling
  | assemblingMachine2
  | assemblingMachine2Recycling
  | assemblingMachine3
  | assemblingMachine3Recycling
  | asteroidCollector
  | asteroidCollectorRecycling
  | atomicBomb
  | atomicBombRecycling
  | automationSciencePack
  | automationSciencePackRecycling
  | barrel
  | barrelRecycling
  | basicOilProcessing
  | battery
  | batteryEquipment
  | batteryEquipmentRecycling
  | batteryMk2Equipment
  | batteryMk2EquipmentRecycling
  | batteryMk3Equipment
  | batteryMk3EquipmentRecycling
  | batteryRecycling
  | beacon
  | beaconRecycling
  | beltImmunityEquipment
  | beltImmunityEquipmentRecycling
  | bigElectricPole
  | bigElectricPoleRecycling
  | bigMiningDrill
  | bigMiningDrillRecycling
  | biochamber
  | biochamberRecycling
  | bioflux
  | biofluxRecycling
  | biolab
  | biolabRecycling
  | biolubricant
  | bioplastic
  | biosulfur
  | biterEgg
  | biterEggRecycling
  | blueprintBookRecycling
  | blueprintRecycling
  | boiler
  | boilerRecycling
  | bottomlessChestRecycling
  | bufferChest
  | bufferChestRecycling
  | bulkInserter
  | bulkInserterRecycling
  | burnerGeneratorRecycling
  | burnerInserter
  | burnerInserterRecycling
  | burnerMiningDrill
  | burnerMiningDrillRecycling
  | burntSpoilage
  | calciteRecycling
  | cannonShell
  | cannonShellRecycling
  | captiveBiterSpawner
  | captiveBiterSpawnerRecycling
  | captureRobotRocket
  | captureRobotRocketRecycling
  | car
  | carRecycling
  | carbon
  | carbonFiber
  | carbonFiberRecycling
  | carbonRecycling
  | carbonicAsteroidChunkRecycling
  | carbonicAsteroidCrushing
  | carbonicAsteroidReprocessing
  | cargoBay
  | cargoBayRecycling
  | cargoLandingPad
  | cargoLandingPadRecycling
  | cargoWagon
  | cargoWagonRecycling
  | castingCopper
  | castingCopperCable
  | castingIron
  | castingIronGearWheel
  | castingIronStick
  | castingLowDensityStructure
  | castingPipe
  | castingPipeToGround
  | castingSteel
  | centrifuge
  | centrifugeRecycling
  | chemicalPlant
  | chemicalPlantRecycling
  | chemicalSciencePack
  | chemicalSciencePackRecycling
  | cliffExplosives
  | cliffExplosivesRecycling
  | clusterGrenade
  | clusterGrenadeRecycling
  | coalLiquefaction
  | coalRecycling
  | coalSynthesis
  | coinRecycling
  | combatShotgun
  | combatShotgunRecycling
  | concrete
  | concreteFromMoltenIron
  | concreteRecycling
  | constantCombinator
  | constantCombinatorRecycling
  | constructionRobot
  | constructionRobotRecycling
  | copperBacteria
  | copperBacteriaCultivation
  | copperBacteriaRecycling
  | copperCable
  | copperCableRecycling
  | copperOreRecycling
  | copperPlate
  | copperPlateRecycling
  | crudeOilBarrel
  | crudeOilBarrelRecycling
  | crusher
  | crusherRecycling
  | cryogenicPlant
  | cryogenicPlantRecycling
  | cryogenicSciencePack
  | cryogenicSciencePackRecycling
  | deciderCombinator
  | deciderCombinatorRecycling
  | deconstructionPlannerRecycling
  | defenderCapsule
  | defenderCapsuleRecycling
  | depletedUraniumFuelCellRecycling
  | destroyerCapsule
  | destroyerCapsuleRecycling
  | dischargeDefenseEquipment
  | dischargeDefenseEquipmentRecycling
  | displayPanel
  | displayPanelRecycling
  | distractorCapsule
  | distractorCapsuleRecycling
  | efficiencyModule
  | efficiencyModule2
  | efficiencyModule2Recycling
  | efficiencyModule3
  | efficiencyModule3Recycling
  | efficiencyModuleRecycling
  | electricEnergyInterfaceRecycling
  | electricEngineUnit
  | electricEngineUnitRecycling
  | electricFurnace
  | electricFurnaceRecycling
  | electricMiningDrill
  | electricMiningDrillRecycling
  | electrolyte
  | electromagneticPlant
  | electromagneticPlantRecycling
  | electromagneticSciencePack
  | electromagneticSciencePackRecycling
  | electronicCircuit
  | electronicCircuitRecycling
  | emptyCrudeOilBarrel
  | emptyFluoroketoneColdBarrel
  | emptyFluoroketoneHotBarrel
  | emptyHeavyOilBarrel
  | emptyLightOilBarrel
  | emptyLubricantBarrel
  | emptyModuleSlotRecycling
  | emptyPetroleumGasBarrel
  | emptySulfuricAcidBarrel
  | emptyWaterBarrel
  | energyShieldEquipment
  | energyShieldEquipmentRecycling
  | energyShieldMk2Equipment
  | energyShieldMk2EquipmentRecycling
  | engineUnit
  | engineUnitRecycling
  | exoskeletonEquipment
  | exoskeletonEquipmentRecycling
  | explosiveCannonShell
  | explosiveCannonShellRecycling
  | explosiveRocket
  | explosiveRocketRecycling
  | explosiveUraniumCannonShell
  | explosiveUraniumCannonShellRecycling
  | explosives
  | explosivesRecycling
  | expressLoader
  | expressLoaderRecycling
  | expressSplitter
  | expressSplitterRecycling
  | expressTransportBelt
  | expressTransportBeltRecycling
  | expressUndergroundBelt
  | expressUndergroundBeltRecycling
  | fastInserter
  | fastInserterRecycling
  | fastLoader
  | fastLoaderRecycling
  | fastSplitter
  | fastSplitterRecycling
  | fastTransportBelt
  | fastTransportBeltRecycling
  | fastUndergroundBelt
  | fastUndergroundBeltRecycling
  | firearmMagazine
  | firearmMagazineRecycling
  | fishBreeding
  | fissionReactorEquipment
  | fissionReactorEquipmentRecycling
  | flamethrower
  | flamethrowerAmmo
  | flamethrowerAmmoRecycling
  | flamethrowerRecycling
  | flamethrowerTurret
  | flamethrowerTurretRecycling
  | fluidWagon
  | fluidWagonRecycling
  | fluoroketone
  | fluoroketoneColdBarrel
  | fluoroketoneColdBarrelRecycling
  | fluoroketoneCooling
  | fluoroketoneHotBarrel
  | fluoroketoneHotBarrelRecycling
  | flyingRobotFrame
  | flyingRobotFrameRecycling
  | foundation
  | foundationRecycling
  | foundry
  | foundryRecycling
  | fusionGenerator
  | fusionGeneratorRecycling
  | fusionPowerCell
  | fusionPowerCellRecycling
  | fusionReactor
  | fusionReactorEquipment
  | fusionReactorEquipmentRecycling
  | fusionReactorRecycling
  | gate
  | gateRecycling
  | grenade
  | grenadeRecycling
  | gunTurret
  | gunTurretRecycling
  | hazardConcrete
  | hazardConcreteRecycling
  | heatExchanger
  | heatExchangerRecycling
  | heatInterface
  | heatInterfaceRecycling
  | heatPipe
  | heatPipeRecycling
  | heatingTower
  | heatingTowerRecycling
  | heavyArmor
  | heavyArmorRecycling
  | heavyOilBarrel
  | heavyOilBarrelRecycling
  | heavyOilCracking
  | holmiumOreRecycling
  | holmiumPlate
  | holmiumPlateRecycling
  | holmiumSolution
  | iceMelting
  | icePlatform
  | icePlatformRecycling
  | iceRecycling
  | infinityCargoWagonRecycling
  | infinityChest
  | infinityChestRecycling
  | infinityPipe
  | infinityPipeRecycling
  | inserter
  | inserterRecycling
  | ironBacteria
  | ironBacteriaCultivation
  | ironBacteriaRecycling
  | ironChest
  | ironChestRecycling
  | ironGearWheel
  | ironGearWheelRecycling
  | ironOreRecycling
  | ironPlate
  | ironPlateRecycling
  | ironStick
  | ironStickRecycling
  | itemUnknownRecycling
  | jellyRecycling
  | jellynutProcessing
  | jellynutRecycling
  | jellynutSeedRecycling
  | kovarexEnrichmentProcess
  | lab
  | labRecycling
  | landMine
  | landMineRecycling
  | landfill
  | landfillRecycling
  | laneSplitterRecycling
  | laserTurret
  | laserTurretRecycling
  | lightArmor
  | lightArmorRecycling
  | lightOilBarrel
  | lightOilBarrelRecycling
  | lightOilCracking
  | lightningCollector
  | lightningCollectorRecycling
  | lightningRod
  | lightningRodRecycling
  | linkedBeltRecycling
  | linkedChestRecycling
  | lithium
  | lithiumPlate
  | lithiumPlateRecycling
  | lithiumRecycling
  | loader
  | loaderRecycling
  | locomotive
  | locomotiveRecycling
  | logisticRobot
  | logisticRobotRecycling
  | logisticSciencePack
  | logisticSciencePackRecycling
  | longHandedInserter
  | longHandedInserterRecycling
  | lowDensityStructure
  | lowDensityStructureRecycling
  | lubricant
  | lubricantBarrel
  | lubricantBarrelRecycling
  | mechArmor
  | mechArmorRecycling
  | mediumElectricPole
  | mediumElectricPoleRecycling
  | metallicAsteroidChunkRecycling
  | metallicAsteroidCrushing
  | metallicAsteroidReprocessing
  | metallurgicSciencePack
  | metallurgicSciencePackRecycling
  | militarySciencePack
  | militarySciencePackRecycling
  | modularArmor
  | modularArmorRecycling
  | moltenCopper
  | moltenCopperFromLava
  | moltenIron
  | moltenIronFromLava
  | nightVisionEquipment
  | nightVisionEquipmentRecycling
  | nuclearFuel
  | nuclearFuelRecycling
  | nuclearFuelReprocessing
  | nuclearReactor
  | nuclearReactorRecycling
  | nutrientsFromBioflux
  | nutrientsFromBiterEgg
  | nutrientsFromFish
  | nutrientsFromSpoilage
  | nutrientsFromYumakoMash
  | nutrientsRecycling
  | offshorePump
  | offshorePumpRecycling
  | oilRefinery
  | oilRefineryRecycling
  | oneWayValveRecycling
  | overflowValveRecycling
  | overgrowthJellynutSoil
  | overgrowthJellynutSoilRecycling
  | overgrowthYumakoSoil
  | overgrowthYumakoSoilRecycling
  | oxideAsteroidChunkRecycling
  | oxideAsteroidCrushing
  | oxideAsteroidReprocessing
  | parameter0
  | parameter1
  | parameter2
  | parameter3
  | parameter4
  | parameter5
  | parameter6
  | parameter7
  | parameter8
  | parameter9
  | passiveProviderChest
  | passiveProviderChestRecycling
  | pentapodEgg
  | pentapodEggRecycling
  | personalLaserDefenseEquipment
  | personalLaserDefenseEquipmentRecycling
  | personalRoboportEquipment
  | personalRoboportEquipmentRecycling
  | personalRoboportMk2Equipment
  | personalRoboportMk2EquipmentRecycling
  | petroleumGasBarrel
  | petroleumGasBarrelRecycling
  | piercingRoundsMagazine
  | piercingRoundsMagazineRecycling
  | piercingShotgunShell
  | piercingShotgunShellRecycling
  | pipe
  | pipeRecycling
  | pipeToGround
  | pipeToGroundRecycling
  | pistol
  | pistolRecycling
  | plasticBar
  | plasticBarRecycling
  | poisonCapsule
  | poisonCapsuleRecycling
  | powerArmor
  | powerArmorMk2
  | powerArmorMk2Recycling
  | powerArmorRecycling
  | powerSwitch
  | powerSwitchRecycling
  | processingUnit
  | processingUnitRecycling
  | productionSciencePack
  | productionSciencePackRecycling
  | productivityModule
  | productivityModule2
  | productivityModule2Recycling
  | productivityModule3
  | productivityModule3Recycling
  | productivityModuleRecycling
  | programmableSpeaker
  | programmableSpeakerRecycling
  | promethiumAsteroidChunkRecycling
  | promethiumSciencePack
  | promethiumSciencePackRecycling
  | proxyContainerRecycling
  | pump
  | pumpRecycling
  | pumpjack
  | pumpjackRecycling
  | qualityModule
  | qualityModule2
  | qualityModule2Recycling
  | qualityModule3
  | qualityModule3Recycling
  | qualityModuleRecycling
  | quantumProcessor
  | quantumProcessorRecycling
  | radar
  | radarRecycling
  | rail
  | railChainSignal
  | railChainSignalRecycling
  | railRamp
  | railRampRecycling
  | railRecycling
  | railSignal
  | railSignalRecycling
  | railSupport
  | railSupportRecycling
  | railgun
  | railgunAmmo
  | railgunAmmoRecycling
  | railgunRecycling
  | railgunTurret
  | railgunTurretRecycling
  | rawFishRecycling
  | recycler
  | recyclerRecycling
  | refinedConcrete
  | refinedConcreteRecycling
  | refinedHazardConcrete
  | refinedHazardConcreteRecycling
  | repairPack
  | repairPackRecycling
  | requesterChest
  | requesterChestRecycling
  | roboport
  | roboportRecycling
  | rocket
  | rocketFuel
  | rocketFuelFromJelly
  | rocketFuelRecycling
  | rocketLauncher
  | rocketLauncherRecycling
  | rocketPart
  | rocketRecycling
  | rocketSilo
  | rocketSiloRecycling
  | rocketTurret
  | rocketTurretRecycling
  | scienceRecycling
  | scrapRecycling
  | selectionToolRecycling
  | selectorCombinator
  | selectorCombinatorRecycling
  | shotgun
  | shotgunRecycling
  | shotgunShell
  | shotgunShellRecycling
  | simpleCoalLiquefaction
  | simpleEntityWithForceRecycling
  | simpleEntityWithOwnerRecycling
  | slowdownCapsule
  | slowdownCapsuleRecycling
  | smallElectricPole
  | smallElectricPoleRecycling
  | smallLamp
  | smallLampRecycling
  | solarPanel
  | solarPanelEquipment
  | solarPanelEquipmentRecycling
  | solarPanelRecycling
  | solidFuelFromAmmonia
  | solidFuelFromHeavyOil
  | solidFuelFromLightOil
  | solidFuelFromPetroleumGas
  | solidFuelRecycling
  | spacePlatformFoundation
  | spacePlatformFoundationRecycling
  | spacePlatformHubRecycling
  | spacePlatformStarterPack
  | spacePlatformStarterPackRecycling
  | spaceSciencePack
  | spaceSciencePackRecycling
  | speedModule
  | speedModule2
  | speedModule2Recycling
  | speedModule3
  | speedModule3Recycling
  | speedModuleRecycling
  | spidertron
  | spidertronRecycling
  | splitter
  | splitterRecycling
  | spoilageRecycling
  | stackInserter
  | stackInserterRecycling
  | steamCondensation
  | steamEngine
  | steamEngineRecycling
  | steamTurbine
  | steamTurbineRecycling
  | steelChest
  | steelChestRecycling
  | steelFurnace
  | steelFurnaceRecycling
  | steelPlate
  | steelPlateRecycling
  | stoneBrick
  | stoneBrickRecycling
  | stoneFurnace
  | stoneFurnaceRecycling
  | stoneRecycling
  | stoneWall
  | stoneWallRecycling
  | storageChest
  | storageChestRecycling
  | storageTank
  | storageTankRecycling
  | submachineGun
  | submachineGunRecycling
  | substation
  | substationRecycling
  | sulfur
  | sulfurRecycling
  | sulfuricAcid
  | sulfuricAcidBarrel
  | sulfuricAcidBarrelRecycling
  | supercapacitor
  | supercapacitorRecycling
  | superconductor
  | superconductorRecycling
  | tank
  | tankRecycling
  | teslaAmmo
  | teslaAmmoRecycling
  | teslaTurret
  | teslaTurretRecycling
  | teslagun
  | teslagunRecycling
  | thruster
  | thrusterFuel
  | thrusterOxidizer
  | thrusterRecycling
  | toolbeltEquipment
  | toolbeltEquipmentRecycling
  | topUpValveRecycling
  | trainStop
  | trainStopRecycling
  | transportBelt
  | transportBeltRecycling
  | treeSeedRecycling
  | tungstenCarbide
  | tungstenCarbideRecycling
  | tungstenOreRecycling
  | tungstenPlate
  | tungstenPlateRecycling
  | turboLoader
  | turboLoaderRecycling
  | turboSplitter
  | turboSplitterRecycling
  | turboTransportBelt
  | turboTransportBeltRecycling
  | turboUndergroundBelt
  | turboUndergroundBeltRecycling
  | undergroundBelt
  | undergroundBeltRecycling
  | upgradePlannerRecycling
  | uranium235Recycling
  | uranium238Recycling
  | uraniumCannonShell
  | uraniumCannonShellRecycling
  | uraniumFuelCell
  | uraniumFuelCellRecycling
  | uraniumOreRecycling
  | uraniumProcessing
  | uraniumRoundsMagazine
  | uraniumRoundsMagazineRecycling
  | utilitySciencePack
  | utilitySciencePackRecycling
  | waterBarrel
  | waterBarrelRecycling
  | woodProcessing
  | woodRecycling
  | woodenChest
  | woodenChestRecycling
  | yumakoMashRecycling
  | yumakoProcessing
  | yumakoRecycling
  | yumakoSeedRecycling
  deriving DecidableEq, Repr, Inhabited

namespace RecipeName

def getRecipe : RecipeName -> Recipe
| .accumulator => {
  name := "accumulator",
  inputs := [(2, .ironPlate), (5, .battery)],
  outputs := [(1, .accumulator)],
  category := .electronics
  time := 10
}
| .accumulatorRecycling => {
  name := "accumulator-recycling",
  inputs := [(1, .accumulator)],
  outputs := [(5/4, .battery), (1/2, .ironPlate)],
  category := .recycling
  time := 5/8
}
| .acidNeutralisation => {
  name := "acid-neutralisation",
  inputs := [(1000, .sulfuricAcid), (1, .calcite)],
  outputs := [(10000, .steam)],
  category := .chemistryOrCryogenics
  time := 5
}
| .activeProviderChest => {
  name := "active-provider-chest",
  inputs := [(1, .steelChest), (3, .electronicCircuit), (1, .advancedCircuit)],
  outputs := [(1, .activeProviderChest)],
  category := .crafting
  time := 1/2
}
| .activeProviderChestRecycling => {
  name := "active-provider-chest-recycling",
  inputs := [(1, .activeProviderChest)],
  outputs := [(3/4, .electronicCircuit), (1/4, .steelChest), (1/4, .advancedCircuit)],
  category := .recycling
  time := 1/32
}
| .advancedCarbonicAsteroidCrushing => {
  name := "advanced-carbonic-asteroid-crushing",
  inputs := [(1, .carbonicAsteroidChunk)],
  outputs := [(5, .carbon), (2, .sulfur), (1/20, .carbonicAsteroidChunk)],
  category := .crushing
  time := 5
}
| .advancedCircuit => {
  name := "advanced-circuit",
  inputs := [(2, .electronicCircuit), (2, .plasticBar), (4, .copperCable)],
  outputs := [(1, .advancedCircuit)],
  category := .electronics
  time := 6
}
| .advancedCircuitRecycling => {
  name := "advanced-circuit-recycling",
  inputs := [(1, .advancedCircuit)],
  outputs := [(1, .copperCable), (1/2, .electronicCircuit), (1/2, .plasticBar)],
  category := .recycling
  time := 3/8
}
| .advancedMetallicAsteroidCrushing => {
  name := "advanced-metallic-asteroid-crushing",
  inputs := [(1, .metallicAsteroidChunk)],
  outputs := [(10, .ironOre), (4, .copperOre), (1/20, .metallicAsteroidChunk)],
  category := .crushing
  time := 5
}
| .advancedOilProcessing => {
  name := "advanced-oil-processing",
  inputs := [(50, .water), (100, .crudeOil)],
  outputs := [(25, .heavyOil), (45, .lightOil), (55, .petroleumGas)],
  category := .oilProcessing
  time := 5
}
| .advancedOxideAsteroidCrushing => {
  name := "advanced-oxide-asteroid-crushing",
  inputs := [(1, .oxideAsteroidChunk)],
  outputs := [(3, .ice), (2, .calcite), (1/20, .oxideAsteroidChunk)],
  category := .crushing
  time := 5
}
| .advancedThrusterFuel => {
  name := "advanced-thruster-fuel",
  inputs := [(100, .water), (2, .carbon), (1, .calcite)],
  outputs := [(1500, .thrusterFuel)],
  category := .chemistry
  time := 10
}
| .advancedThrusterOxidizer => {
  name := "advanced-thruster-oxidizer",
  inputs := [(100, .water), (2, .ironOre), (1, .calcite)],
  outputs := [(1500, .thrusterOxidizer)],
  category := .chemistry
  time := 10
}
| .agriculturalSciencePack => {
  name := "agricultural-science-pack",
  inputs := [(1, .bioflux), (1, .pentapodEgg)],
  outputs := [(1, .agriculturalSciencePack)],
  category := .organic
  time := 4
}
| .agriculturalSciencePackRecycling => {
  name := "agricultural-science-pack-recycling",
  inputs := [(1, .agriculturalSciencePack)],
  outputs := [(1/4, .agriculturalSciencePack)],
  category := .recycling
  time := 1/4
}
| .agriculturalTower => {
  name := "agricultural-tower",
  inputs := [(10, .steelPlate), (3, .electronicCircuit), (20, .spoilage), (1, .landfill)],
  outputs := [(1, .agriculturalTower)],
  category := .crafting
  time := 10
}
| .agriculturalTowerRecycling => {
  name := "agricultural-tower-recycling",
  inputs := [(1, .agriculturalTower)],
  outputs := [(5, .spoilage), (5/2, .steelPlate), (3/4, .electronicCircuit), (1/4, .landfill)],
  category := .recycling
  time := 5/8
}
| .ammoniaRocketFuel => {
  name := "ammonia-rocket-fuel",
  inputs := [(50, .water), (500, .ammonia), (10, .solidFuel)],
  outputs := [(1, .rocketFuel)],
  category := .chemistryOrCryogenics
  time := 10
}
| .ammoniacalSolutionSeparation => {
  name := "ammoniacal-solution-separation",
  inputs := [(50, .ammoniacalSolution)],
  outputs := [(5, .ice), (50, .ammonia)],
  category := .chemistryOrCryogenics
  time := 1
}
| .arithmeticCombinator => {
  name := "arithmetic-combinator",
  inputs := [(5, .copperCable), (5, .electronicCircuit)],
  outputs := [(1, .arithmeticCombinator)],
  category := .crafting
  time := 1/2
}
| .arithmeticCombinatorRecycling => {
  name := "arithmetic-combinator-recycling",
  inputs := [(1, .arithmeticCombinator)],
  outputs := [(5/4, .copperCable), (5/4, .electronicCircuit)],
  category := .recycling
  time := 1/32
}
| .artificialJellynutSoil => {
  name := "artificial-jellynut-soil",
  inputs := [(2, .jellynutSeed), (50, .nutrients), (5, .landfill)],
  outputs := [(10, .artificialJellynutSoil)],
  category := .crafting
  time := 2
}
| .artificialJellynutSoilRecycling => {
  name := "artificial-jellynut-soil-recycling",
  inputs := [(1, .artificialJellynutSoil)],
  outputs := [(5/4, .nutrients), (1/8, .landfill), (1/20, .jellynutSeed)],
  category := .recycling
  time := 1/8
}
| .artificialYumakoSoil => {
  name := "artificial-yumako-soil",
  inputs := [(2, .yumakoSeed), (50, .nutrients), (5, .landfill)],
  outputs := [(10, .artificialYumakoSoil)],
  category := .crafting
  time := 2
}
| .artificialYumakoSoilRecycling => {
  name := "artificial-yumako-soil-recycling",
  inputs := [(1, .artificialYumakoSoil)],
  outputs := [(5/4, .nutrients), (1/8, .landfill), (1/20, .yumakoSeed)],
  category := .recycling
  time := 1/8
}
| .artilleryShell => {
  name := "artillery-shell",
  inputs := [(1, .radar), (1, .calcite), (4, .tungstenPlate), (8, .explosives)],
  outputs := [(1, .artilleryShell)],
  category := .crafting
  time := 15
}
| .artilleryShellRecycling => {
  name := "artillery-shell-recycling",
  inputs := [(1, .artilleryShell)],
  outputs := [(2, .explosives), (1, .tungstenPlate), (1/4, .radar), (1/4, .calcite)],
  category := .recycling
  time := 15/16
}
| .artilleryTurret => {
  name := "artillery-turret",
  inputs := [(60, .tungstenPlate), (60, .refinedConcrete), (40, .ironGearWheel), (10, .processingUnit)],
  outputs := [(1, .artilleryTurret)],
  category := .crafting
  time := 40
}
| .artilleryTurretRecycling => {
  name := "artillery-turret-recycling",
  inputs := [(1, .artilleryTurret)],
  outputs := [(15, .tungstenPlate), (15, .refinedConcrete), (10, .ironGearWheel), (5/2, .processingUnit)],
  category := .recycling
  time := 5/2
}
| .artilleryWagon => {
  name := "artillery-wagon",
  inputs := [(60, .engineUnit), (60, .tungstenPlate), (60, .refinedConcrete), (40, .ironGearWheel), (10, .processingUnit)],
  outputs := [(1, .artilleryWagon)],
  category := .crafting
  time := 4
}
| .artilleryWagonRecycling => {
  name := "artillery-wagon-recycling",
  inputs := [(1, .artilleryWagon)],
  outputs := [(15, .engineUnit), (15, .tungstenPlate), (15, .refinedConcrete), (10, .ironGearWheel), (5/2, .processingUnit)],
  category := .recycling
  time := 1/4
}
| .assemblingMachine1 => {
  name := "assembling-machine-1",
  inputs := [(3, .electronicCircuit), (5, .ironGearWheel), (9, .ironPlate)],
  outputs := [(1, .assemblingMachine1)],
  category := .crafting
  time := 1/2
}
| .assemblingMachine1Recycling => {
  name := "assembling-machine-1-recycling",
  inputs := [(1, .assemblingMachine1)],
  outputs := [(9/4, .ironPlate), (5/4, .ironGearWheel), (3/4, .electronicCircuit)],
  category := .recycling
  time := 1/32
}
| .assemblingMachine2 => {
  name := "assembling-machine-2",
  inputs := [(2, .steelPlate), (3, .electronicCircuit), (5, .ironGearWheel), (1, .assemblingMachine1)],
  outputs := [(1, .assemblingMachine2)],
  category := .crafting
  time := 1/2
}
| .assemblingMachine2Recycling => {
  name := "assembling-machine-2-recycling",
  inputs := [(1, .assemblingMachine2)],
  outputs := [(5/4, .ironGearWheel), (3/4, .electronicCircuit), (1/2, .steelPlate), (1/4, .assemblingMachine1)],
  category := .recycling
  time := 1/32
}
| .assemblingMachine3 => {
  name := "assembling-machine-3",
  inputs := [(2, .assemblingMachine2), (4, .speedModule)],
  outputs := [(1, .assemblingMachine3)],
  category := .crafting
  time := 1/2
}
| .assemblingMachine3Recycling => {
  name := "assembling-machine-3-recycling",
  inputs := [(1, .assemblingMachine3)],
  outputs := [(1, .speedModule), (1/2, .assemblingMachine2)],
  category := .recycling
  time := 1/32
}
| .asteroidCollector => {
  name := "asteroid-collector",
  inputs := [(20, .lowDensityStructure), (8, .electricEngineUnit), (5, .processingUnit)],
  outputs := [(1, .asteroidCollector)],
  category := .crafting
  time := 10
}
| .asteroidCollectorRecycling => {
  name := "asteroid-collector-recycling",
  inputs := [(1, .asteroidCollector)],
  outputs := [(5, .lowDensityStructure), (2, .electricEngineUnit), (5/4, .processingUnit)],
  category := .recycling
  time := 5/8
}
| .atomicBomb => {
  name := "atomic-bomb",
  inputs := [(10, .processingUnit), (10, .explosives), (100, .uranium235)],
  outputs := [(1, .atomicBomb)],
  category := .crafting
  time := 50
}
| .atomicBombRecycling => {
  name := "atomic-bomb-recycling",
  inputs := [(1, .atomicBomb)],
  outputs := [(25, .uranium235), (5/2, .processingUnit), (5/2, .explosives)],
  category := .recycling
  time := 25/8
}
| .automationSciencePack => {
  name := "automation-science-pack",
  inputs := [(1, .copperPlate), (1, .ironGearWheel)],
  outputs := [(1, .automationSciencePack)],
  category := .crafting
  time := 5
}
| .automationSciencePackRecycling => {
  name := "automation-science-pack-recycling",
  inputs := [(1, .automationSciencePack)],
  outputs := [(1/4, .automationSciencePack)],
  category := .recycling
  time := 5/16
}
| .barrel => {
  name := "barrel",
  inputs := [(1, .steelPlate)],
  outputs := [(1, .barrel)],
  category := .crafting
  time := 1
}
| .barrelRecycling => {
  name := "barrel-recycling",
  inputs := [(1, .barrel)],
  outputs := [(1/4, .steelPlate)],
  category := .recycling
  time := 1/16
}
| .basicOilProcessing => {
  name := "basic-oil-processing",
  inputs := [(100, .crudeOil)],
  outputs := [(45, .petroleumGas)],
  category := .oilProcessing
  time := 5
}
| .battery => {
  name := "battery",
  inputs := [(20, .sulfuricAcid), (1, .ironPlate), (1, .copperPlate)],
  outputs := [(1, .battery)],
  category := .chemistryOrCryogenics
  time := 4
}
| .batteryEquipment => {
  name := "battery-equipment",
  inputs := [(5, .battery), (10, .steelPlate)],
  outputs := [(1, .batteryEquipment)],
  category := .crafting
  time := 10
}
| .batteryEquipmentRecycling => {
  name := "battery-equipment-recycling",
  inputs := [(1, .batteryEquipment)],
  outputs := [(5/2, .steelPlate), (5/4, .battery)],
  category := .recycling
  time := 5/8
}
| .batteryMk2Equipment => {
  name := "battery-mk2-equipment",
  inputs := [(10, .batteryEquipment), (15, .processingUnit), (5, .lowDensityStructure)],
  outputs := [(1, .batteryMk2Equipment)],
  category := .crafting
  time := 10
}
| .batteryMk2EquipmentRecycling => {
  name := "battery-mk2-equipment-recycling",
  inputs := [(1, .batteryMk2Equipment)],
  outputs := [(15/4, .processingUnit), (5/2, .batteryEquipment), (5/4, .lowDensityStructure)],
  category := .recycling
  time := 5/8
}
| .batteryMk3Equipment => {
  name := "battery-mk3-equipment",
  inputs := [(5, .batteryMk2Equipment), (10, .supercapacitor)],
  outputs := [(1, .batteryMk3Equipment)],
  category := .crafting
  time := 10
}
| .batteryMk3EquipmentRecycling => {
  name := "battery-mk3-equipment-recycling",
  inputs := [(1, .batteryMk3Equipment)],
  outputs := [(5/2, .supercapacitor), (5/4, .batteryMk2Equipment)],
  category := .recycling
  time := 5/8
}
| .batteryRecycling => {
  name := "battery-recycling",
  inputs := [(1, .battery)],
  outputs := [(1/4, .ironPlate), (1/4, .copperPlate)],
  category := .recycling
  time := 1/4
}
| .beacon => {
  name := "beacon",
  inputs := [(20, .electronicCircuit), (20, .advancedCircuit), (10, .steelPlate), (10, .copperCable)],
  outputs := [(1, .beacon)],
  category := .electronics
  time := 15
}
| .beaconRecycling => {
  name := "beacon-recycling",
  inputs := [(1, .beacon)],
  outputs := [(5, .electronicCircuit), (5, .advancedCircuit), (5/2, .steelPlate), (5/2, .copperCable)],
  category := .recycling
  time := 15/16
}
| .beltImmunityEquipment => {
  name := "belt-immunity-equipment",
  inputs := [(5, .advancedCircuit), (10, .steelPlate)],
  outputs := [(1, .beltImmunityEquipment)],
  category := .crafting
  time := 10
}
| .beltImmunityEquipmentRecycling => {
  name := "belt-immunity-equipment-recycling",
  inputs := [(1, .beltImmunityEquipment)],
  outputs := [(5/2, .steelPlate), (5/4, .advancedCircuit)],
  category := .recycling
  time := 5/8
}
| .bigElectricPole => {
  name := "big-electric-pole",
  inputs := [(8, .ironStick), (5, .steelPlate), (4, .copperCable)],
  outputs := [(1, .bigElectricPole)],
  category := .electronics
  time := 1/2
}
| .bigElectricPoleRecycling => {
  name := "big-electric-pole-recycling",
  inputs := [(1, .bigElectricPole)],
  outputs := [(2, .ironStick), (5/4, .steelPlate), (1, .copperCable)],
  category := .recycling
  time := 1/32
}
| .bigMiningDrill => {
  name := "big-mining-drill",
  inputs := [(200, .moltenIron), (1, .electricMiningDrill), (20, .tungstenCarbide), (10, .electricEngineUnit), (10, .advancedCircuit)],
  outputs := [(1, .bigMiningDrill)],
  category := .metallurgy
  time := 30
}
| .bigMiningDrillRecycling => {
  name := "big-mining-drill-recycling",
  inputs := [(1, .bigMiningDrill)],
  outputs := [(5, .tungstenCarbide), (5/2, .electricEngineUnit), (5/2, .advancedCircuit), (1/4, .electricMiningDrill)],
  category := .recycling
  time := 15/8
}
| .biochamber => {
  name := "biochamber",
  inputs := [(5, .nutrients), (1, .pentapodEgg), (20, .ironPlate), (5, .electronicCircuit), (1, .landfill)],
  outputs := [(1, .biochamber)],
  category := .organicOrAssembling
  time := 20
}
| .biochamberRecycling => {
  name := "biochamber-recycling",
  inputs := [(1, .biochamber)],
  outputs := [(5, .ironPlate), (5/4, .nutrients), (5/4, .electronicCircuit), (1/4, .pentapodEgg), (1/4, .landfill)],
  category := .recycling
  time := 5/4
}
| .bioflux => {
  name := "bioflux",
  inputs := [(15, .yumakoMash), (12, .jelly)],
  outputs := [(4, .bioflux)],
  category := .organic
  time := 6
}
| .biofluxRecycling => {
  name := "bioflux-recycling",
  inputs := [(1, .bioflux)],
  outputs := [(1/4, .bioflux)],
  category := .recycling
  time := 3/8
}
| .biolab => {
  name := "biolab",
  inputs := [(1, .lab), (10, .biterEgg), (25, .refinedConcrete), (2, .captureRobotRocket), (3, .uranium235)],
  outputs := [(1, .biolab)],
  category := .crafting
  time := 10
}
| .biolabRecycling => {
  name := "biolab-recycling",
  inputs := [(1, .biolab)],
  outputs := [(1/4, .biolab)],
  category := .recycling
  time := 5/8
}
| .biolubricant => {
  name := "biolubricant",
  inputs := [(60, .jelly)],
  outputs := [(20, .lubricant)],
  category := .organic
  time := 3
}
| .bioplastic => {
  name := "bioplastic",
  inputs := [(1, .bioflux), (4, .yumakoMash)],
  outputs := [(3, .plasticBar)],
  category := .organic
  time := 2
}
| .biosulfur => {
  name := "biosulfur",
  inputs := [(5, .spoilage), (1, .bioflux)],
  outputs := [(2, .sulfur)],
  category := .organic
  time := 2
}
| .biterEgg => {
  name := "biter-egg",
  inputs := [],
  outputs := [(5, .biterEgg)],
  category := .captiveSpawnerProcess
  time := 10
}
| .biterEggRecycling => {
  name := "biter-egg-recycling",
  inputs := [(1, .biterEgg)],
  outputs := [(1/4, .biterEgg)],
  category := .recycling
  time := 5/8
}
| .blueprintBookRecycling => {
  name := "blueprint-book-recycling",
  inputs := [(1, .blueprintBook)],
  outputs := [(1/4, .blueprintBook)],
  category := .recycling
  time := 1/32
}
| .blueprintRecycling => {
  name := "blueprint-recycling",
  inputs := [(1, .blueprint)],
  outputs := [(1/4, .blueprint)],
  category := .recycling
  time := 1/32
}
| .boiler => {
  name := "boiler",
  inputs := [(1, .stoneFurnace), (4, .pipe)],
  outputs := [(1, .boiler)],
  category := .crafting
  time := 1/2
}
| .boilerRecycling => {
  name := "boiler-recycling",
  inputs := [(1, .boiler)],
  outputs := [(1, .pipe), (1/4, .stoneFurnace)],
  category := .recycling
  time := 1/32
}
| .bottomlessChestRecycling => {
  name := "bottomless-chest-recycling",
  inputs := [(1, .bottomlessChest)],
  outputs := [(1/4, .bottomlessChest)],
  category := .recycling
  time := 1/32
}
| .bufferChest => {
  name := "buffer-chest",
  inputs := [(1, .steelChest), (3, .electronicCircuit), (1, .advancedCircuit)],
  outputs := [(1, .bufferChest)],
  category := .crafting
  time := 1/2
}
| .bufferChestRecycling => {
  name := "buffer-chest-recycling",
  inputs := [(1, .bufferChest)],
  outputs := [(3/4, .electronicCircuit), (1/4, .steelChest), (1/4, .advancedCircuit)],
  category := .recycling
  time := 1/32
}
| .bulkInserter => {
  name := "bulk-inserter",
  inputs := [(15, .ironGearWheel), (15, .electronicCircuit), (1, .advancedCircuit), (1, .fastInserter)],
  outputs := [(1, .bulkInserter)],
  category := .crafting
  time := 1/2
}
| .bulkInserterRecycling => {
  name := "bulk-inserter-recycling",
  inputs := [(1, .bulkInserter)],
  outputs := [(15/4, .ironGearWheel), (15/4, .electronicCircuit), (1/4, .advancedCircuit), (1/4, .fastInserter)],
  category := .recycling
  time := 1/32
}
| .burnerGeneratorRecycling => {
  name := "burner-generator-recycling",
  inputs := [(1, .burnerGenerator)],
  outputs := [(1/4, .burnerGenerator)],
  category := .recycling
  time := 1/32
}
| .burnerInserter => {
  name := "burner-inserter",
  inputs := [(1, .ironPlate), (1, .ironGearWheel)],
  outputs := [(1, .burnerInserter)],
  category := .crafting
  time := 1/2
}
| .burnerInserterRecycling => {
  name := "burner-inserter-recycling",
  inputs := [(1, .burnerInserter)],
  outputs := [(1/4, .ironPlate), (1/4, .ironGearWheel)],
  category := .recycling
  time := 1/32
}
| .burnerMiningDrill => {
  name := "burner-mining-drill",
  inputs := [(3, .ironGearWheel), (1, .stoneFurnace), (3, .ironPlate)],
  outputs := [(1, .burnerMiningDrill)],
  category := .crafting
  time := 2
}
| .burnerMiningDrillRecycling => {
  name := "burner-mining-drill-recycling",
  inputs := [(1, .burnerMiningDrill)],
  outputs := [(3/4, .ironGearWheel), (3/4, .ironPlate), (1/4, .stoneFurnace)],
  category := .recycling
  time := 1/8
}
| .burntSpoilage => {
  name := "burnt-spoilage",
  inputs := [(6, .spoilage)],
  outputs := [(1, .carbon)],
  category := .organic
  time := 12
}
| .calciteRecycling => {
  name := "calcite-recycling",
  inputs := [(1, .calcite)],
  outputs := [(1/4, .calcite)],
  category := .recycling
  time := 1/32
}
| .cannonShell => {
  name := "cannon-shell",
  inputs := [(2, .steelPlate), (2, .plasticBar), (1, .explosives)],
  outputs := [(1, .cannonShell)],
  category := .crafting
  time := 8
}
| .cannonShellRecycling => {
  name := "cannon-shell-recycling",
  inputs := [(1, .cannonShell)],
  outputs := [(1/2, .steelPlate), (1/2, .plasticBar), (1/4, .explosives)],
  category := .recycling
  time := 1/2
}
| .captiveBiterSpawner => {
  name := "captive-biter-spawner",
  inputs := [(100, .fluoroketoneCold), (10, .biterEgg), (1, .captureRobotRocket), (15, .uranium235)],
  outputs := [(1, .captiveBiterSpawner)],
  category := .cryogenics
  time := 10
}
| .captiveBiterSpawnerRecycling => {
  name := "captive-biter-spawner-recycling",
  inputs := [(1, .captiveBiterSpawner)],
  outputs := [(1/4, .captiveBiterSpawner)],
  category := .recycling
  time := 5/8
}
| .captureRobotRocket => {
  name := "capture-robot-rocket",
  inputs := [(1, .flyingRobotFrame), (2, .steelPlate), (20, .bioflux), (2, .processingUnit)],
  outputs := [(1, .captureRobotRocket)],
  category := .crafting
  time := 10
}
| .captureRobotRocketRecycling => {
  name := "capture-robot-rocket-recycling",
  inputs := [(1, .captureRobotRocket)],
  outputs := [(5, .bioflux), (1/2, .steelPlate), (1/2, .processingUnit), (1/4, .flyingRobotFrame)],
  category := .recycling
  time := 5/8
}
| .car => {
  name := "car",
  inputs := [(8, .engineUnit), (20, .ironPlate), (5, .steelPlate)],
  outputs := [(1, .car)],
  category := .crafting
  time := 2
}
| .carRecycling => {
  name := "car-recycling",
  inputs := [(1, .car)],
  outputs := [(5, .ironPlate), (2, .engineUnit), (5/4, .steelPlate)],
  category := .recycling
  time := 1/8
}
| .carbon => {
  name := "carbon",
  inputs := [(20, .sulfuricAcid), (2, .coal)],
  outputs := [(1, .carbon)],
  category := .chemistryOrCryogenics
  time := 1
}
| .carbonFiber => {
  name := "carbon-fiber",
  inputs := [(10, .yumakoMash), (1, .carbon)],
  outputs := [(1, .carbonFiber)],
  category := .organic
  time := 5
}
| .carbonFiberRecycling => {
  name := "carbon-fiber-recycling",
  inputs := [(1, .carbonFiber)],
  outputs := [(1/4, .carbonFiber)],
  category := .recycling
  time := 5/16
}
| .carbonRecycling => {
  name := "carbon-recycling",
  inputs := [(1, .carbon)],
  outputs := [(1/4, .carbon)],
  category := .recycling
  time := 1/16
}
| .carbonicAsteroidChunkRecycling => {
  name := "carbonic-asteroid-chunk-recycling",
  inputs := [(1, .carbonicAsteroidChunk)],
  outputs := [(1/4, .carbonicAsteroidChunk)],
  category := .recycling
  time := 1/32
}
| .carbonicAsteroidCrushing => {
  name := "carbonic-asteroid-crushing",
  inputs := [(1, .carbonicAsteroidChunk)],
  outputs := [(10, .carbon), (1/5, .carbonicAsteroidChunk)],
  category := .crushing
  time := 2
}
| .carbonicAsteroidReprocessing => {
  name := "carbonic-asteroid-reprocessing",
  inputs := [(1, .carbonicAsteroidChunk)],
  outputs := [(2/5, .carbonicAsteroidChunk), (1/5, .metallicAsteroidChunk), (1/5, .oxideAsteroidChunk)],
  category := .crushing
  time := 2
}
| .cargoBay => {
  name := "cargo-bay",
  inputs := [(20, .steelPlate), (20, .lowDensityStructure), (5, .processingUnit)],
  outputs := [(1, .cargoBay)],
  category := .crafting
  time := 10
}
| .cargoBayRecycling => {
  name := "cargo-bay-recycling",
  inputs := [(1, .cargoBay)],
  outputs := [(5, .steelPlate), (5, .lowDensityStructure), (5/4, .processingUnit)],
  category := .recycling
  time := 5/8
}
| .cargoLandingPad => {
  name := "cargo-landing-pad",
  inputs := [(200, .concrete), (25, .steelPlate), (10, .processingUnit)],
  outputs := [(1, .cargoLandingPad)],
  category := .crafting
  time := 30
}
| .cargoLandingPadRecycling => {
  name := "cargo-landing-pad-recycling",
  inputs := [(1, .cargoLandingPad)],
  outputs := [(50, .concrete), (25/4, .steelPlate), (5/2, .processingUnit)],
  category := .recycling
  time := 15/8
}
| .cargoWagon => {
  name := "cargo-wagon",
  inputs := [(10, .ironGearWheel), (20, .ironPlate), (20, .steelPlate)],
  outputs := [(1, .cargoWagon)],
  category := .crafting
  time := 1
}
| .cargoWagonRecycling => {
  name := "cargo-wagon-recycling",
  inputs := [(1, .cargoWagon)],
  outputs := [(5, .ironPlate), (5, .steelPlate), (5/2, .ironGearWheel)],
  category := .recycling
  time := 1/16
}
| .castingCopper => {
  name := "casting-copper",
  inputs := [(20, .moltenCopper)],
  outputs := [(2, .copperPlate)],
  category := .metallurgy
  time := 16/5
}
| .castingCopperCable => {
  name := "casting-copper-cable",
  inputs := [(5, .moltenCopper)],
  outputs := [(2, .copperCable)],
  category := .metallurgy
  time := 1
}
| .castingIron => {
  name := "casting-iron",
  inputs := [(20, .moltenIron)],
  outputs := [(2, .ironPlate)],
  category := .metallurgy
  time := 16/5
}
| .castingIronGearWheel => {
  name := "casting-iron-gear-wheel",
  inputs := [(10, .moltenIron)],
  outputs := [(1, .ironGearWheel)],
  category := .metallurgy
  time := 1
}
| .castingIronStick => {
  name := "casting-iron-stick",
  inputs := [(20, .moltenIron)],
  outputs := [(4, .ironStick)],
  category := .metallurgy
  time := 1
}
| .castingLowDensityStructure => {
  name := "casting-low-density-structure",
  inputs := [(80, .moltenIron), (250, .moltenCopper), (5, .plasticBar)],
  outputs := [(1, .lowDensityStructure)],
  category := .metallurgy
  time := 15
}
| .castingPipe => {
  name := "casting-pipe",
  inputs := [(10, .moltenIron)],
  outputs := [(1, .pipe)],
  category := .metallurgy
  time := 1
}
| .castingPipeToGround => {
  name := "casting-pipe-to-ground",
  inputs := [(50, .moltenIron), (10, .pipe)],
  outputs := [(2, .pipeToGround)],
  category := .metallurgy
  time := 1
}
| .castingSteel => {
  name := "casting-steel",
  inputs := [(30, .moltenIron)],
  outputs := [(1, .steelPlate)],
  category := .metallurgy
  time := 16/5
}
| .centrifuge => {
  name := "centrifuge",
  inputs := [(100, .concrete), (50, .steelPlate), (100, .advancedCircuit), (100, .ironGearWheel)],
  outputs := [(1, .centrifuge)],
  category := .crafting
  time := 4
}
| .centrifugeRecycling => {
  name := "centrifuge-recycling",
  inputs := [(1, .centrifuge)],
  outputs := [(25, .concrete), (25, .advancedCircuit), (25, .ironGearWheel), (25/2, .steelPlate)],
  category := .recycling
  time := 1/4
}
| .chemicalPlant => {
  name := "chemical-plant",
  inputs := [(5, .steelPlate), (5, .ironGearWheel), (5, .electronicCircuit), (5, .pipe)],
  outputs := [(1, .chemicalPlant)],
  category := .crafting
  time := 5
}
| .chemicalPlantRecycling => {
  name := "chemical-plant-recycling",
  inputs := [(1, .chemicalPlant)],
  outputs := [(5/4, .steelPlate), (5/4, .ironGearWheel), (5/4, .electronicCircuit), (5/4, .pipe)],
  category := .recycling
  time := 5/16
}
| .chemicalSciencePack => {
  name := "chemical-science-pack",
  inputs := [(2, .engineUnit), (3, .advancedCircuit), (1, .sulfur)],
  outputs := [(2, .chemicalSciencePack)],
  category := .crafting
  time := 24
}
| .chemicalSciencePackRecycling => {
  name := "chemical-science-pack-recycling",
  inputs := [(1, .chemicalSciencePack)],
  outputs := [(1/4, .chemicalSciencePack)],
  category := .recycling
  time := 3/2
}
| .cliffExplosives => {
  name := "cliff-explosives",
  inputs := [(10, .explosives), (10, .calcite), (1, .grenade), (1, .barrel)],
  outputs := [(1, .cliffExplosives)],
  category := .crafting
  time := 8
}
| .cliffExplosivesRecycling => {
  name := "cliff-explosives-recycling",
  inputs := [(1, .cliffExplosives)],
  outputs := [(5/2, .explosives), (5/2, .calcite), (1/4, .grenade), (1/4, .barrel)],
  category := .recycling
  time := 1/2
}
| .clusterGrenade => {
  name := "cluster-grenade",
  inputs := [(7, .grenade), (5, .explosives), (5, .steelPlate)],
  outputs := [(1, .clusterGrenade)],
  category := .crafting
  time := 8
}
| .clusterGrenadeRecycling => {
  name := "cluster-grenade-recycling",
  inputs := [(1, .clusterGrenade)],
  outputs := [(7/4, .grenade), (5/4, .explosives), (5/4, .steelPlate)],
  category := .recycling
  time := 1/2
}
| .coalLiquefaction => {
  name := "coal-liquefaction",
  inputs := [(25, .heavyOil), (50, .steam), (10, .coal)],
  outputs := [(90, .heavyOil), (20, .lightOil), (10, .petroleumGas)],
  category := .oilProcessing
  time := 5
}
| .coalRecycling => {
  name := "coal-recycling",
  inputs := [(1, .coal)],
  outputs := [(1/4, .coal)],
  category := .recycling
  time := 1/32
}
| .coalSynthesis => {
  name := "coal-synthesis",
  inputs := [(10, .water), (5, .carbon), (1, .sulfur)],
  outputs := [(1, .coal)],
  category := .chemistry
  time := 2
}
| .coinRecycling => {
  name := "coin-recycling",
  inputs := [(1, .coin)],
  outputs := [(1/4, .coin)],
  category := .recycling
  time := 1/32
}
| .combatShotgun => {
  name := "combat-shotgun",
  inputs := [(15, .steelPlate), (5, .ironGearWheel), (10, .copperPlate), (10, .wood)],
  outputs := [(1, .combatShotgun)],
  category := .crafting
  time := 10
}
| .combatShotgunRecycling => {
  name := "combat-shotgun-recycling",
  inputs := [(1, .combatShotgun)],
  outputs := [(15/4, .steelPlate), (5/2, .copperPlate), (5/2, .wood), (5/4, .ironGearWheel)],
  category := .recycling
  time := 5/8
}
| .concrete => {
  name := "concrete",
  inputs := [(100, .water), (5, .stoneBrick), (1, .ironOre)],
  outputs := [(10, .concrete)],
  category := .craftingWithFluid
  time := 10
}
| .concreteFromMoltenIron => {
  name := "concrete-from-molten-iron",
  inputs := [(20, .moltenIron), (100, .water), (5, .stoneBrick)],
  outputs := [(10, .concrete)],
  category := .metallurgy
  time := 10
}
| .concreteRecycling => {
  name := "concrete-recycling",
  inputs := [(1, .concrete)],
  outputs := [(1/8, .stoneBrick), (1/40, .ironOre)],
  category := .recycling
  time := 5/8
}
| .constantCombinator => {
  name := "constant-combinator",
  inputs := [(5, .copperCable), (2, .electronicCircuit)],
  outputs := [(1, .constantCombinator)],
  category := .crafting
  time := 1/2
}
| .constantCombinatorRecycling => {
  name := "constant-combinator-recycling",
  inputs := [(1, .constantCombinator)],
  outputs := [(5/4, .copperCable), (1/2, .electronicCircuit)],
  category := .recycling
  time := 1/32
}
| .constructionRobot => {
  name := "construction-robot",
  inputs := [(1, .flyingRobotFrame), (2, .electronicCircuit)],
  outputs := [(1, .constructionRobot)],
  category := .crafting
  time := 1/2
}
| .constructionRobotRecycling => {
  name := "construction-robot-recycling",
  inputs := [(1, .constructionRobot)],
  outputs := [(1/2, .electronicCircuit), (1/4, .flyingRobotFrame)],
  category := .recycling
  time := 1/32
}
| .copperBacteria => {
  name := "copper-bacteria",
  inputs := [(3, .yumakoMash)],
  outputs := [(1/10, .copperBacteria), (1, .spoilage)],
  category := .organicOrHandCrafting
  time := 1
}
| .copperBacteriaCultivation => {
  name := "copper-bacteria-cultivation",
  inputs := [(1, .copperBacteria), (1, .bioflux)],
  outputs := [(4, .copperBacteria)],
  category := .organic
  time := 4
}
| .copperBacteriaRecycling => {
  name := "copper-bacteria-recycling",
  inputs := [(1, .copperBacteria)],
  outputs := [(1/4, .copperBacteria)],
  category := .recycling
  time := 1/16
}
| .copperCable => {
  name := "copper-cable",
  inputs := [(1, .copperPlate)],
  outputs := [(2, .copperCable)],
  category := .electronics
  time := 1/2
}
| .copperCableRecycling => {
  name := "copper-cable-recycling",
  inputs := [(1, .copperCable)],
  outputs := [(1/8, .copperPlate)],
  category := .recycling
  time := 1/32
}
| .copperOreRecycling => {
  name := "copper-ore-recycling",
  inputs := [(1, .copperOre)],
  outputs := [(1/4, .copperOre)],
  category := .recycling
  time := 1/32
}
| .copperPlate => {
  name := "copper-plate",
  inputs := [(1, .copperOre)],
  outputs := [(1, .copperPlate)],
  category := .smelting
  time := 16/5
}
| .copperPlateRecycling => {
  name := "copper-plate-recycling",
  inputs := [(1, .copperPlate)],
  outputs := [(1/4, .copperPlate)],
  category := .recycling
  time := 1/5
}
| .crudeOilBarrel => {
  name := "crude-oil-barrel",
  inputs := [(50, .crudeOil), (1, .barrel)],
  outputs := [(1, .crudeOilBarrel)],
  category := .craftingWithFluid
  time := 1/5
}
| .crudeOilBarrelRecycling => {
  name := "crude-oil-barrel-recycling",
  inputs := [(1, .crudeOilBarrel)],
  outputs := [(1/4, .barrel)],
  category := .recycling
  time := 1/80
}
| .crusher => {
  name := "crusher",
  inputs := [(20, .lowDensityStructure), (10, .steelPlate), (10, .electricEngineUnit)],
  outputs := [(1, .crusher)],
  category := .crafting
  time := 10
}
| .crusherRecycling => {
  name := "crusher-recycling",
  inputs := [(1, .crusher)],
  outputs := [(5, .lowDensityStructure), (5/2, .steelPlate), (5/2, .electricEngineUnit)],
  category := .recycling
  time := 5/8
}
| .cryogenicPlant => {
  name := "cryogenic-plant",
  inputs := [(40, .refinedConcrete), (20, .superconductor), (20, .processingUnit), (20, .lithiumPlate)],
  outputs := [(1, .cryogenicPlant)],
  category := .cryogenicsOrAssembling
  time := 10
}
| .cryogenicPlantRecycling => {
  name := "cryogenic-plant-recycling",
  inputs := [(1, .cryogenicPlant)],
  outputs := [(10, .refinedConcrete), (5, .superconductor), (5, .processingUnit), (5, .lithiumPlate)],
  category := .recycling
  time := 5/8
}
| .cryogenicSciencePack => {
  name := "cryogenic-science-pack",
  inputs := [(6, .fluoroketoneCold), (3, .ice), (1, .lithiumPlate)],
  outputs := [(1, .cryogenicSciencePack), (3, .fluoroketoneHot)],
  category := .cryogenics
  time := 20
}
| .cryogenicSciencePackRecycling => {
  name := "cryogenic-science-pack-recycling",
  inputs := [(1, .cryogenicSciencePack)],
  outputs := [(1/4, .cryogenicSciencePack)],
  category := .recycling
  time := 5/4
}
| .deciderCombinator => {
  name := "decider-combinator",
  inputs := [(5, .copperCable), (5, .electronicCircuit)],
  outputs := [(1, .deciderCombinator)],
  category := .crafting
  time := 1/2
}
| .deciderCombinatorRecycling => {
  name := "decider-combinator-recycling",
  inputs := [(1, .deciderCombinator)],
  outputs := [(5/4, .copperCable), (5/4, .electronicCircuit)],
  category := .recycling
  time := 1/32
}
| .deconstructionPlannerRecycling => {
  name := "deconstruction-planner-recycling",
  inputs := [(1, .deconstructionPlanner)],
  outputs := [(1/4, .deconstructionPlanner)],
  category := .recycling
  time := 1/32
}
| .defenderCapsule => {
  name := "defender-capsule",
  inputs := [(3, .piercingRoundsMagazine), (3, .electronicCircuit), (3, .ironGearWheel)],
  outputs := [(1, .defenderCapsule)],
  category := .crafting
  time := 8
}
| .defenderCapsuleRecycling => {
  name := "defender-capsule-recycling",
  inputs := [(1, .defenderCapsule)],
  outputs := [(3/4, .piercingRoundsMagazine), (3/4, .electronicCircuit), (3/4, .ironGearWheel)],
  category := .recycling
  time := 1/2
}
| .depletedUraniumFuelCellRecycling => {
  name := "depleted-uranium-fuel-cell-recycling",
  inputs := [(1, .depletedUraniumFuelCell)],
  outputs := [(1/4, .depletedUraniumFuelCell)],
  category := .recycling
  time := 1/32
}
| .destroyerCapsule => {
  name := "destroyer-capsule",
  inputs := [(4, .distractorCapsule), (4, .steelPlate), (1, .processingUnit)],
  outputs := [(1, .destroyerCapsule)],
  category := .crafting
  time := 15
}
| .destroyerCapsuleRecycling => {
  name := "destroyer-capsule-recycling",
  inputs := [(1, .destroyerCapsule)],
  outputs := [(1, .distractorCapsule), (1, .steelPlate), (1/4, .processingUnit)],
  category := .recycling
  time := 15/16
}
| .dischargeDefenseEquipment => {
  name := "discharge-defense-equipment",
  inputs := [(5, .processingUnit), (20, .steelPlate), (10, .laserTurret)],
  outputs := [(1, .dischargeDefenseEquipment)],
  category := .electronics
  time := 10
}
| .dischargeDefenseEquipmentRecycling => {
  name := "discharge-defense-equipment-recycling",
  inputs := [(1, .dischargeDefenseEquipment)],
  outputs := [(5, .steelPlate), (5/2, .laserTurret), (5/4, .processingUnit)],
  category := .recycling
  time := 5/8
}
| .displayPanel => {
  name := "display-panel",
  inputs := [(1, .ironPlate), (1, .electronicCircuit)],
  outputs := [(1, .displayPanel)],
  category := .crafting
  time := 1/2
}
| .displayPanelRecycling => {
  name := "display-panel-recycling",
  inputs := [(1, .displayPanel)],
  outputs := [(1/4, .ironPlate), (1/4, .electronicCircuit)],
  category := .recycling
  time := 1/32
}
| .distractorCapsule => {
  name := "distractor-capsule",
  inputs := [(4, .defenderCapsule), (3, .advancedCircuit)],
  outputs := [(1, .distractorCapsule)],
  category := .crafting
  time := 15
}
| .distractorCapsuleRecycling => {
  name := "distractor-capsule-recycling",
  inputs := [(1, .distractorCapsule)],
  outputs := [(1, .defenderCapsule), (3/4, .advancedCircuit)],
  category := .recycling
  time := 15/16
}
| .efficiencyModule => {
  name := "efficiency-module",
  inputs := [(5, .advancedCircuit), (5, .electronicCircuit)],
  outputs := [(1, .efficiencyModule)],
  category := .electronics
  time := 15
}
| .efficiencyModule2 => {
  name := "efficiency-module-2",
  inputs := [(4, .efficiencyModule), (5, .advancedCircuit), (5, .processingUnit)],
  outputs := [(1, .efficiencyModule2)],
  category := .electronics
  time := 30
}
| .efficiencyModule2Recycling => {
  name := "efficiency-module-2-recycling",
  inputs := [(1, .efficiencyModule2)],
  outputs := [(5/4, .advancedCircuit), (5/4, .processingUnit), (1, .efficiencyModule)],
  category := .recycling
  time := 15/8
}
| .efficiencyModule3 => {
  name := "efficiency-module-3",
  inputs := [(4, .efficiencyModule2), (5, .advancedCircuit), (5, .processingUnit), (5, .spoilage)],
  outputs := [(1, .efficiencyModule3)],
  category := .electronics
  time := 60
}
| .efficiencyModule3Recycling => {
  name := "efficiency-module-3-recycling",
  inputs := [(1, .efficiencyModule3)],
  outputs := [(5/4, .advancedCircuit), (5/4, .processingUnit), (5/4, .spoilage), (1, .efficiencyModule2)],
  category := .recycling
  time := 15/4
}
| .efficiencyModuleRecycling => {
  name := "efficiency-module-recycling",
  inputs := [(1, .efficiencyModule)],
  outputs := [(5/4, .advancedCircuit), (5/4, .electronicCircuit)],
  category := .recycling
  time := 15/16
}
| .electricEnergyInterfaceRecycling => {
  name := "electric-energy-interface-recycling",
  inputs := [(1, .electricEnergyInterface)],
  outputs := [(1/4, .electricEnergyInterface)],
  category := .recycling
  time := 1/32
}
| .electricEngineUnit => {
  name := "electric-engine-unit",
  inputs := [(15, .lubricant), (1, .engineUnit), (2, .electronicCircuit)],
  outputs := [(1, .electricEngineUnit)],
  category := .craftingWithFluid
  time := 10
}
| .electricEngineUnitRecycling => {
  name := "electric-engine-unit-recycling",
  inputs := [(1, .electricEngineUnit)],
  outputs := [(1/2, .electronicCircuit), (1/4, .engineUnit)],
  category := .recycling
  time := 5/8
}
| .electricFurnace => {
  name := "electric-furnace",
  inputs := [(10, .steelPlate), (5, .advancedCircuit), (10, .stoneBrick)],
  outputs := [(1, .electricFurnace)],
  category := .crafting
  time := 5
}
| .electricFurnaceRecycling => {
  name := "electric-furnace-recycling",
  inputs := [(1, .electricFurnace)],
  outputs := [(5/2, .steelPlate), (5/2, .stoneBrick), (5/4, .advancedCircuit)],
  category := .recycling
  time := 5/16
}
| .electricMiningDrill => {
  name := "electric-mining-drill",
  inputs := [(3, .electronicCircuit), (5, .ironGearWheel), (10, .ironPlate)],
  outputs := [(1, .electricMiningDrill)],
  category := .crafting
  time := 2
}
| .electricMiningDrillRecycling => {
  name := "electric-mining-drill-recycling",
  inputs := [(1, .electricMiningDrill)],
  outputs := [(5/2, .ironPlate), (5/4, .ironGearWheel), (3/4, .electronicCircuit)],
  category := .recycling
  time := 1/8
}
| .electrolyte => {
  name := "electrolyte",
  inputs := [(10, .heavyOil), (10, .holmiumSolution), (1, .stone)],
  outputs := [(10, .electrolyte)],
  category := .electromagnetics
  time := 5
}
| .electromagneticPlant => {
  name := "electromagnetic-plant",
  inputs := [(150, .holmiumPlate), (50, .steelPlate), (50, .processingUnit), (50, .refinedConcrete)],
  outputs := [(1, .electromagneticPlant)],
  category := .electronicsOrAssembling
  time := 10
}
| .electromagneticPlantRecycling => {
  name := "electromagnetic-plant-recycling",
  inputs := [(1, .electromagneticPlant)],
  outputs := [(75/2, .holmiumPlate), (25/2, .steelPlate), (25/2, .processingUnit), (25/2, .refinedConcrete)],
  category := .recycling
  time := 5/8
}
| .electromagneticSciencePack => {
  name := "electromagnetic-science-pack",
  inputs := [(25, .electrolyte), (25, .holmiumSolution), (1, .supercapacitor), (1, .accumulator)],
  outputs := [(1, .electromagneticSciencePack)],
  category := .electromagnetics
  time := 10
}
| .electromagneticSciencePackRecycling => {
  name := "electromagnetic-science-pack-recycling",
  inputs := [(1, .electromagneticSciencePack)],
  outputs := [(1/4, .electromagneticSciencePack)],
  category := .recycling
  time := 5/8
}
| .electronicCircuit => {
  name := "electronic-circuit",
  inputs := [(1, .ironPlate), (3, .copperCable)],
  outputs := [(1, .electronicCircuit)],
  category := .electronics
  time := 1/2
}
| .electronicCircuitRecycling => {
  name := "electronic-circuit-recycling",
  inputs := [(1, .electronicCircuit)],
  outputs := [(3/4, .copperCable), (1/4, .ironPlate)],
  category := .recycling
  time := 1/32
}
| .emptyCrudeOilBarrel => {
  name := "empty-crude-oil-barrel",
  inputs := [(1, .crudeOilBarrel)],
  outputs := [(1, .barrel), (50, .crudeOil)],
  category := .craftingWithFluid
  time := 1/5
}
| .emptyFluoroketoneColdBarrel => {
  name := "empty-fluoroketone-cold-barrel",
  inputs := [(1, .fluoroketoneColdBarrel)],
  outputs := [(1, .barrel), (50, .fluoroketoneCold)],
  category := .craftingWithFluid
  time := 1/5
}
| .emptyFluoroketoneHotBarrel => {
  name := "empty-fluoroketone-hot-barrel",
  inputs := [(1, .fluoroketoneHotBarrel)],
  outputs := [(1, .barrel), (50, .fluoroketoneHot)],
  category := .craftingWithFluid
  time := 1/5
}
| .emptyHeavyOilBarrel => {
  name := "empty-heavy-oil-barrel",
  inputs := [(1, .heavyOilBarrel)],
  outputs := [(1, .barrel), (50, .heavyOil)],
  category := .craftingWithFluid
  time := 1/5
}
| .emptyLightOilBarrel => {
  name := "empty-light-oil-barrel",
  inputs := [(1, .lightOilBarrel)],
  outputs := [(1, .barrel), (50, .lightOil)],
  category := .craftingWithFluid
  time := 1/5
}
| .emptyLubricantBarrel => {
  name := "empty-lubricant-barrel",
  inputs := [(1, .lubricantBarrel)],
  outputs := [(1, .barrel), (50, .lubricant)],
  category := .craftingWithFluid
  time := 1/5
}
| .emptyModuleSlotRecycling => {
  name := "empty-module-slot-recycling",
  inputs := [(1, .emptyModuleSlot)],
  outputs := [(1/4, .emptyModuleSlot)],
  category := .recycling
  time := 1/32
}
| .emptyPetroleumGasBarrel => {
  name := "empty-petroleum-gas-barrel",
  inputs := [(1, .petroleumGasBarrel)],
  outputs := [(1, .barrel), (50, .petroleumGas)],
  category := .craftingWithFluid
  time := 1/5
}
| .emptySulfuricAcidBarrel => {
  name := "empty-sulfuric-acid-barrel",
  inputs := [(1, .sulfuricAcidBarrel)],
  outputs := [(1, .barrel), (50, .sulfuricAcid)],
  category := .craftingWithFluid
  time := 1/5
}
| .emptyWaterBarrel => {
  name := "empty-water-barrel",
  inputs := [(1, .waterBarrel)],
  outputs := [(1, .barrel), (50, .water)],
  category := .craftingWithFluid
  time := 1/5
}
| .energyShieldEquipment => {
  name := "energy-shield-equipment",
  inputs := [(5, .advancedCircuit), (10, .steelPlate)],
  outputs := [(1, .energyShieldEquipment)],
  category := .crafting
  time := 10
}
| .energyShieldEquipmentRecycling => {
  name := "energy-shield-equipment-recycling",
  inputs := [(1, .energyShieldEquipment)],
  outputs := [(5/2, .steelPlate), (5/4, .advancedCircuit)],
  category := .recycling
  time := 5/8
}
| .energyShieldMk2Equipment => {
  name := "energy-shield-mk2-equipment",
  inputs := [(10, .energyShieldEquipment), (5, .processingUnit), (5, .lowDensityStructure)],
  outputs := [(1, .energyShieldMk2Equipment)],
  category := .crafting
  time := 10
}
| .energyShieldMk2EquipmentRecycling => {
  name := "energy-shield-mk2-equipment-recycling",
  inputs := [(1, .energyShieldMk2Equipment)],
  outputs := [(5/2, .energyShieldEquipment), (5/4, .processingUnit), (5/4, .lowDensityStructure)],
  category := .recycling
  time := 5/8
}
| .engineUnit => {
  name := "engine-unit",
  inputs := [(1, .steelPlate), (1, .ironGearWheel), (2, .pipe)],
  outputs := [(1, .engineUnit)],
  category := .advancedCrafting
  time := 10
}
| .engineUnitRecycling => {
  name := "engine-unit-recycling",
  inputs := [(1, .engineUnit)],
  outputs := [(1/2, .pipe), (1/4, .steelPlate), (1/4, .ironGearWheel)],
  category := .recycling
  time := 5/8
}
| .exoskeletonEquipment => {
  name := "exoskeleton-equipment",
  inputs := [(10, .processingUnit), (30, .electricEngineUnit), (20, .steelPlate)],
  outputs := [(1, .exoskeletonEquipment)],
  category := .crafting
  time := 10
}
| .exoskeletonEquipmentRecycling => {
  name := "exoskeleton-equipment-recycling",
  inputs := [(1, .exoskeletonEquipment)],
  outputs := [(15/2, .electricEngineUnit), (5, .steelPlate), (5/2, .processingUnit)],
  category := .recycling
  time := 5/8
}
| .explosiveCannonShell => {
  name := "explosive-cannon-shell",
  inputs := [(2, .steelPlate), (2, .plasticBar), (2, .explosives)],
  outputs := [(1, .explosiveCannonShell)],
  category := .crafting
  time := 8
}
| .explosiveCannonShellRecycling => {
  name := "explosive-cannon-shell-recycling",
  inputs := [(1, .explosiveCannonShell)],
  outputs := [(1/2, .steelPlate), (1/2, .plasticBar), (1/2, .explosives)],
  category := .recycling
  time := 1/2
}
| .explosiveRocket => {
  name := "explosive-rocket",
  inputs := [(1, .rocket), (2, .explosives)],
  outputs := [(1, .explosiveRocket)],
  category := .crafting
  time := 8
}
| .explosiveRocketRecycling => {
  name := "explosive-rocket-recycling",
  inputs := [(1, .explosiveRocket)],
  outputs := [(1/2, .explosives), (1/4, .rocket)],
  category := .recycling
  time := 1/2
}
| .explosiveUraniumCannonShell => {
  name := "explosive-uranium-cannon-shell",
  inputs := [(1, .explosiveCannonShell), (1, .uranium238)],
  outputs := [(1, .explosiveUraniumCannonShell)],
  category := .crafting
  time := 12
}
| .explosiveUraniumCannonShellRecycling => {
  name := "explosive-uranium-cannon-shell-recycling",
  inputs := [(1, .explosiveUraniumCannonShell)],
  outputs := [(1/4, .explosiveCannonShell), (1/4, .uranium238)],
  category := .recycling
  time := 3/4
}
| .explosives => {
  name := "explosives",
  inputs := [(10, .water), (1, .sulfur), (1, .coal)],
  outputs := [(2, .explosives)],
  category := .chemistryOrCryogenics
  time := 4
}
| .explosivesRecycling => {
  name := "explosives-recycling",
  inputs := [(1, .explosives)],
  outputs := [(1/4, .explosives)],
  category := .recycling
  time := 1/4
}
| .expressLoader => {
  name := "express-loader",
  inputs := [(5, .expressTransportBelt), (1, .fastLoader)],
  outputs := [(1, .expressLoader)],
  category := .crafting
  time := 10
}
| .expressLoaderRecycling => {
  name := "express-loader-recycling",
  inputs := [(1, .expressLoader)],
  outputs := [(5/4, .expressTransportBelt), (1/4, .fastLoader)],
  category := .recycling
  time := 5/8
}
| .expressSplitter => {
  name := "express-splitter",
  inputs := [(80, .lubricant), (1, .fastSplitter), (10, .ironGearWheel), (10, .advancedCircuit)],
  outputs := [(1, .expressSplitter)],
  category := .craftingWithFluidOrMetallurgy
  time := 2
}
| .expressSplitterRecycling => {
  name := "express-splitter-recycling",
  inputs := [(1, .expressSplitter)],
  outputs := [(5/2, .ironGearWheel), (5/2, .advancedCircuit), (1/4, .fastSplitter)],
  category := .recycling
  time := 1/8
}
| .expressTransportBelt => {
  name := "express-transport-belt",
  inputs := [(20, .lubricant), (10, .ironGearWheel), (1, .fastTransportBelt)],
  outputs := [(1, .expressTransportBelt)],
  category := .craftingWithFluidOrMetallurgy
  time := 1/2
}
| .expressTransportBeltRecycling => {
  name := "express-transport-belt-recycling",
  inputs := [(1, .expressTransportBelt)],
  outputs := [(5/2, .ironGearWheel), (1/4, .fastTransportBelt)],
  category := .recycling
  time := 1/32
}
| .expressUndergroundBelt => {
  name := "express-underground-belt",
  inputs := [(40, .lubricant), (80, .ironGearWheel), (2, .fastUndergroundBelt)],
  outputs := [(2, .expressUndergroundBelt)],
  category := .craftingWithFluidOrMetallurgy
  time := 2
}
| .expressUndergroundBeltRecycling => {
  name := "express-underground-belt-recycling",
  inputs := [(1, .expressUndergroundBelt)],
  outputs := [(10, .ironGearWheel), (1/4, .fastUndergroundBelt)],
  category := .recycling
  time := 1/8
}
| .fastInserter => {
  name := "fast-inserter",
  inputs := [(2, .electronicCircuit), (2, .ironPlate), (1, .inserter)],
  outputs := [(1, .fastInserter)],
  category := .crafting
  time := 1/2
}
| .fastInserterRecycling => {
  name := "fast-inserter-recycling",
  inputs := [(1, .fastInserter)],
  outputs := [(1/2, .electronicCircuit), (1/2, .ironPlate), (1/4, .inserter)],
  category := .recycling
  time := 1/32
}
| .fastLoader => {
  name := "fast-loader",
  inputs := [(5, .fastTransportBelt), (1, .loader)],
  outputs := [(1, .fastLoader)],
  category := .crafting
  time := 3
}
| .fastLoaderRecycling => {
  name := "fast-loader-recycling",
  inputs := [(1, .fastLoader)],
  outputs := [(5/4, .fastTransportBelt), (1/4, .loader)],
  category := .recycling
  time := 3/16
}
| .fastSplitter => {
  name := "fast-splitter",
  inputs := [(1, .splitter), (10, .ironGearWheel), (10, .electronicCircuit)],
  outputs := [(1, .fastSplitter)],
  category := .pressing
  time := 2
}
| .fastSplitterRecycling => {
  name := "fast-splitter-recycling",
  inputs := [(1, .fastSplitter)],
  outputs := [(5/2, .ironGearWheel), (5/2, .electronicCircuit), (1/4, .splitter)],
  category := .recycling
  time := 1/8
}
| .fastTransportBelt => {
  name := "fast-transport-belt",
  inputs := [(5, .ironGearWheel), (1, .transportBelt)],
  outputs := [(1, .fastTransportBelt)],
  category := .pressing
  time := 1/2
}
| .fastTransportBeltRecycling => {
  name := "fast-transport-belt-recycling",
  inputs := [(1, .fastTransportBelt)],
  outputs := [(5/4, .ironGearWheel), (1/4, .transportBelt)],
  category := .recycling
  time := 1/32
}
| .fastUndergroundBelt => {
  name := "fast-underground-belt",
  inputs := [(40, .ironGearWheel), (2, .undergroundBelt)],
  outputs := [(2, .fastUndergroundBelt)],
  category := .pressing
  time := 2
}
| .fastUndergroundBeltRecycling => {
  name := "fast-underground-belt-recycling",
  inputs := [(1, .fastUndergroundBelt)],
  outputs := [(5, .ironGearWheel), (1/4, .undergroundBelt)],
  category := .recycling
  time := 1/8
}
| .firearmMagazine => {
  name := "firearm-magazine",
  inputs := [(4, .ironPlate)],
  outputs := [(1, .firearmMagazine)],
  category := .crafting
  time := 1
}
| .firearmMagazineRecycling => {
  name := "firearm-magazine-recycling",
  inputs := [(1, .firearmMagazine)],
  outputs := [(1, .ironPlate)],
  category := .recycling
  time := 1/16
}
| .fishBreeding => {
  name := "fish-breeding",
  inputs := [(100, .water), (2, .rawFish), (100, .nutrients)],
  outputs := [(3, .rawFish)],
  category := .organicOrChemistry
  time := 6
}
| .fissionReactorEquipment => {
  name := "fission-reactor-equipment",
  inputs := [(200, .processingUnit), (50, .lowDensityStructure), (4, .uraniumFuelCell)],
  outputs := [(1, .fissionReactorEquipment)],
  category := .crafting
  time := 10
}
| .fissionReactorEquipmentRecycling => {
  name := "fission-reactor-equipment-recycling",
  inputs := [(1, .fissionReactorEquipment)],
  outputs := [(50, .processingUnit), (25/2, .lowDensityStructure), (1, .uraniumFuelCell)],
  category := .recycling
  time := 5/8
}
| .flamethrower => {
  name := "flamethrower",
  inputs := [(5, .steelPlate), (10, .ironGearWheel)],
  outputs := [(1, .flamethrower)],
  category := .crafting
  time := 10
}
| .flamethrowerAmmo => {
  name := "flamethrower-ammo",
  inputs := [(100, .crudeOil), (5, .steelPlate)],
  outputs := [(1, .flamethrowerAmmo)],
  category := .chemistry
  time := 6
}
| .flamethrowerAmmoRecycling => {
  name := "flamethrower-ammo-recycling",
  inputs := [(1, .flamethrowerAmmo)],
  outputs := [(1/4, .flamethrowerAmmo)],
  category := .recycling
  time := 3/8
}
| .flamethrowerRecycling => {
  name := "flamethrower-recycling",
  inputs := [(1, .flamethrower)],
  outputs := [(5/2, .ironGearWheel), (5/4, .steelPlate)],
  category := .recycling
  time := 5/8
}
| .flamethrowerTurret => {
  name := "flamethrower-turret",
  inputs := [(30, .steelPlate), (15, .ironGearWheel), (10, .pipe), (5, .engineUnit)],
  outputs := [(1, .flamethrowerTurret)],
  category := .crafting
  time := 20
}
| .flamethrowerTurretRecycling => {
  name := "flamethrower-turret-recycling",
  inputs := [(1, .flamethrowerTurret)],
  outputs := [(15/2, .steelPlate), (15/4, .ironGearWheel), (5/2, .pipe), (5/4, .engineUnit)],
  category := .recycling
  time := 5/4
}
| .fluidWagon => {
  name := "fluid-wagon",
  inputs := [(10, .ironGearWheel), (16, .steelPlate), (8, .pipe), (1, .storageTank)],
  outputs := [(1, .fluidWagon)],
  category := .crafting
  time := 3/2
}
| .fluidWagonRecycling => {
  name := "fluid-wagon-recycling",
  inputs := [(1, .fluidWagon)],
  outputs := [(4, .steelPlate), (5/2, .ironGearWheel), (2, .pipe), (1/4, .storageTank)],
  category := .recycling
  time := 3/32
}
| .fluoroketone => {
  name := "fluoroketone",
  inputs := [(50, .fluorine), (50, .ammonia), (1, .solidFuel), (1, .lithium)],
  outputs := [(50, .fluoroketoneHot)],
  category := .cryogenics
  time := 10
}
| .fluoroketoneColdBarrel => {
  name := "fluoroketone-cold-barrel",
  inputs := [(50, .fluoroketoneCold), (1, .barrel)],
  outputs := [(1, .fluoroketoneColdBarrel)],
  category := .craftingWithFluid
  time := 1/5
}
| .fluoroketoneColdBarrelRecycling => {
  name := "fluoroketone-cold-barrel-recycling",
  inputs := [(1, .fluoroketoneColdBarrel)],
  outputs := [(1/4, .barrel)],
  category := .recycling
  time := 1/80
}
| .fluoroketoneCooling => {
  name := "fluoroketone-cooling",
  inputs := [(10, .fluoroketoneHot)],
  outputs := [(10, .fluoroketoneCold)],
  category := .cryogenics
  time := 5
}
| .fluoroketoneHotBarrel => {
  name := "fluoroketone-hot-barrel",
  inputs := [(50, .fluoroketoneHot), (1, .barrel)],
  outputs := [(1, .fluoroketoneHotBarrel)],
  category := .craftingWithFluid
  time := 1/5
}
| .fluoroketoneHotBarrelRecycling => {
  name := "fluoroketone-hot-barrel-recycling",
  inputs := [(1, .fluoroketoneHotBarrel)],
  outputs := [(1/4, .barrel)],
  category := .recycling
  time := 1/80
}
| .flyingRobotFrame => {
  name := "flying-robot-frame",
  inputs := [(1, .electricEngineUnit), (2, .battery), (1, .steelPlate), (3, .electronicCircuit)],
  outputs := [(1, .flyingRobotFrame)],
  category := .crafting
  time := 20
}
| .flyingRobotFrameRecycling => {
  name := "flying-robot-frame-recycling",
  inputs := [(1, .flyingRobotFrame)],
  outputs := [(3/4, .electronicCircuit), (1/2, .battery), (1/4, .electricEngineUnit), (1/4, .steelPlate)],
  category := .recycling
  time := 5/4
}
| .foundation => {
  name := "foundation",
  inputs := [(20, .fluoroketoneCold), (4, .tungstenPlate), (4, .lithiumPlate), (4, .carbonFiber), (20, .stone)],
  outputs := [(1, .foundation)],
  category := .craftingWithFluid
  time := 30
}
| .foundationRecycling => {
  name := "foundation-recycling",
  inputs := [(1, .foundation)],
  outputs := [(5, .stone), (1, .tungstenPlate), (1, .lithiumPlate), (1, .carbonFiber)],
  category := .recycling
  time := 15/8
}
| .foundry => {
  name := "foundry",
  inputs := [(20, .lubricant), (50, .tungstenCarbide), (50, .steelPlate), (30, .electronicCircuit), (20, .refinedConcrete)],
  outputs := [(1, .foundry)],
  category := .metallurgyOrAssembling
  time := 10
}
| .foundryRecycling => {
  name := "foundry-recycling",
  inputs := [(1, .foundry)],
  outputs := [(25/2, .tungstenCarbide), (25/2, .steelPlate), (15/2, .electronicCircuit), (5, .refinedConcrete)],
  category := .recycling
  time := 5/8
}
| .fusionGenerator => {
  name := "fusion-generator",
  inputs := [(100, .tungstenPlate), (100, .superconductor), (50, .quantumProcessor)],
  outputs := [(1, .fusionGenerator)],
  category := .cryogenics
  time := 30
}
| .fusionGeneratorRecycling => {
  name := "fusion-generator-recycling",
  inputs := [(1, .fusionGenerator)],
  outputs := [(25, .tungstenPlate), (25, .superconductor), (25/2, .quantumProcessor)],
  category := .recycling
  time := 15/8
}
| .fusionPowerCell => {
  name := "fusion-power-cell",
  inputs := [(100, .ammonia), (5, .lithiumPlate), (1, .holmiumPlate)],
  outputs := [(1, .fusionPowerCell)],
  category := .cryogenics
  time := 10
}
| .fusionPowerCellRecycling => {
  name := "fusion-power-cell-recycling",
  inputs := [(1, .fusionPowerCell)],
  outputs := [(1/4, .fusionPowerCell)],
  category := .recycling
  time := 5/8
}
| .fusionReactor => {
  name := "fusion-reactor",
  inputs := [(200, .tungstenPlate), (200, .superconductor), (250, .quantumProcessor)],
  outputs := [(1, .fusionReactor)],
  category := .cryogenics
  time := 60
}
| .fusionReactorEquipment => {
  name := "fusion-reactor-equipment",
  inputs := [(1, .fissionReactorEquipment), (10, .fusionPowerCell), (250, .tungstenPlate), (100, .carbonFiber), (25, .supercapacitor), (250, .quantumProcessor)],
  outputs := [(1, .fusionReactorEquipment)],
  category := .crafting
  time := 30
}
| .fusionReactorEquipmentRecycling => {
  name := "fusion-reactor-equipment-recycling",
  inputs := [(1, .fusionReactorEquipment)],
  outputs := [(125/2, .tungstenPlate), (125/2, .quantumProcessor), (25, .carbonFiber), (25/4, .supercapacitor), (5/2, .fusionPowerCell), (1/4, .fissionReactorEquipment)],
  category := .recycling
  time := 15/8
}
| .fusionReactorRecycling => {
  name := "fusion-reactor-recycling",
  inputs := [(1, .fusionReactor)],
  outputs := [(125/2, .quantumProcessor), (50, .tungstenPlate), (50, .superconductor)],
  category := .recycling
  time := 15/4
}
| .gate => {
  name := "gate",
  inputs := [(1, .stoneWall), (2, .steelPlate), (2, .electronicCircuit)],
  outputs := [(1, .gate)],
  category := .crafting
  time := 1/2
}
| .gateRecycling => {
  name := "gate-recycling",
  inputs := [(1, .gate)],
  outputs := [(1/2, .steelPlate), (1/2, .electronicCircuit), (1/4, .stoneWall)],
  category := .recycling
  time := 1/32
}
| .grenade => {
  name := "grenade",
  inputs := [(5, .ironPlate), (10, .coal)],
  outputs := [(1, .grenade)],
  category := .crafting
  time := 8
}
| .grenadeRecycling => {
  name := "grenade-recycling",
  inputs := [(1, .grenade)],
  outputs := [(5/2, .coal), (5/4, .ironPlate)],
  category := .recycling
  time := 1/2
}
| .gunTurret => {
  name := "gun-turret",
  inputs := [(10, .ironGearWheel), (10, .copperPlate), (20, .ironPlate)],
  outputs := [(1, .gunTurret)],
  category := .crafting
  time := 8
}
| .gunTurretRecycling => {
  name := "gun-turret-recycling",
  inputs := [(1, .gunTurret)],
  outputs := [(5, .ironPlate), (5/2, .ironGearWheel), (5/2, .copperPlate)],
  category := .recycling
  time := 1/2
}
| .hazardConcrete => {
  name := "hazard-concrete",
  inputs := [(10, .concrete)],
  outputs := [(10, .hazardConcrete)],
  category := .crafting
  time := 1/4
}
| .hazardConcreteRecycling => {
  name := "hazard-concrete-recycling",
  inputs := [(1, .hazardConcrete)],
  outputs := [(1/4, .concrete)],
  category := .recycling
  time := 1/64
}
| .heatExchanger => {
  name := "heat-exchanger",
  inputs := [(10, .steelPlate), (100, .copperPlate), (10, .pipe)],
  outputs := [(1, .heatExchanger)],
  category := .crafting
  time := 3
}
| .heatExchangerRecycling => {
  name := "heat-exchanger-recycling",
  inputs := [(1, .heatExchanger)],
  outputs := [(25, .copperPlate), (5/2, .steelPlate), (5/2, .pipe)],
  category := .recycling
  time := 3/16
}
| .heatInterface => {
  name := "heat-interface",
  inputs := [(1, .heatPipe), (5, .electronicCircuit)],
  outputs := [(1, .heatInterface)],
  category := .crafting
  time := 1/2
}
| .heatInterfaceRecycling => {
  name := "heat-interface-recycling",
  inputs := [(1, .heatInterface)],
  outputs := [(5/4, .electronicCircuit), (1/4, .heatPipe)],
  category := .recycling
  time := 1/32
}
| .heatPipe => {
  name := "heat-pipe",
  inputs := [(10, .steelPlate), (20, .copperPlate)],
  outputs := [(1, .heatPipe)],
  category := .crafting
  time := 1
}
| .heatPipeRecycling => {
  name := "heat-pipe-recycling",
  inputs := [(1, .heatPipe)],
  outputs := [(5, .copperPlate), (5/2, .steelPlate)],
  category := .recycling
  time := 1/16
}
| .heatingTower => {
  name := "heating-tower",
  inputs := [(2, .boiler), (5, .heatPipe), (20, .concrete)],
  outputs := [(1, .heatingTower)],
  category := .crafting
  time := 10
}
| .heatingTowerRecycling => {
  name := "heating-tower-recycling",
  inputs := [(1, .heatingTower)],
  outputs := [(5, .concrete), (5/4, .heatPipe), (1/2, .boiler)],
  category := .recycling
  time := 5/8
}
| .heavyArmor => {
  name := "heavy-armor",
  inputs := [(100, .copperPlate), (50, .steelPlate)],
  outputs := [(1, .heavyArmor)],
  category := .crafting
  time := 8
}
| .heavyArmorRecycling => {
  name := "heavy-armor-recycling",
  inputs := [(1, .heavyArmor)],
  outputs := [(25, .copperPlate), (25/2, .steelPlate)],
  category := .recycling
  time := 1/2
}
| .heavyOilBarrel => {
  name := "heavy-oil-barrel",
  inputs := [(50, .heavyOil), (1, .barrel)],
  outputs := [(1, .heavyOilBarrel)],
  category := .craftingWithFluid
  time := 1/5
}
| .heavyOilBarrelRecycling => {
  name := "heavy-oil-barrel-recycling",
  inputs := [(1, .heavyOilBarrel)],
  outputs := [(1/4, .barrel)],
  category := .recycling
  time := 1/80
}
| .heavyOilCracking => {
  name := "heavy-oil-cracking",
  inputs := [(30, .water), (40, .heavyOil)],
  outputs := [(30, .lightOil)],
  category := .organicOrChemistry
  time := 2
}
| .holmiumOreRecycling => {
  name := "holmium-ore-recycling",
  inputs := [(1, .holmiumOre)],
  outputs := [(1/4, .holmiumOre)],
  category := .recycling
  time := 1/32
}
| .holmiumPlate => {
  name := "holmium-plate",
  inputs := [(20, .holmiumSolution)],
  outputs := [(1, .holmiumPlate)],
  category := .craftingWithFluidOrMetallurgy
  time := 1
}
| .holmiumPlateRecycling => {
  name := "holmium-plate-recycling",
  inputs := [(1, .holmiumPlate)],
  outputs := [(1/4, .holmiumPlate)],
  category := .recycling
  time := 1/16
}
| .holmiumSolution => {
  name := "holmium-solution",
  inputs := [(10, .water), (2, .holmiumOre), (1, .stone)],
  outputs := [(100, .holmiumSolution)],
  category := .chemistry
  time := 10
}
| .iceMelting => {
  name := "ice-melting",
  inputs := [(1, .ice)],
  outputs := [(20, .water)],
  category := .chemistry
  time := 1
}
| .icePlatform => {
  name := "ice-platform",
  inputs := [(400, .ammonia), (50, .ice)],
  outputs := [(1, .icePlatform)],
  category := .craftingWithFluid
  time := 30
}
| .icePlatformRecycling => {
  name := "ice-platform-recycling",
  inputs := [(1, .icePlatform)],
  outputs := [(25/2, .ice)],
  category := .recycling
  time := 15/8
}
| .iceRecycling => {
  name := "ice-recycling",
  inputs := [(1, .ice)],
  outputs := [(1/4, .ice)],
  category := .recycling
  time := 1/32
}
| .infinityCargoWagonRecycling => {
  name := "infinity-cargo-wagon-recycling",
  inputs := [(1, .infinityCargoWagon)],
  outputs := [(1/4, .infinityCargoWagon)],
  category := .recycling
  time := 1/32
}
| .infinityChest => {
  name := "infinity-chest",
  inputs := [(1, .steelChest), (5, .electronicCircuit)],
  outputs := [(1, .infinityChest)],
  category := .crafting
  time := 1/2
}
| .infinityChestRecycling => {
  name := "infinity-chest-recycling",
  inputs := [(1, .infinityChest)],
  outputs := [(5/4, .electronicCircuit), (1/4, .steelChest)],
  category := .recycling
  time := 1/32
}
| .infinityPipe => {
  name := "infinity-pipe",
  inputs := [(1, .pipe), (5, .electronicCircuit)],
  outputs := [(1, .infinityPipe)],
  category := .crafting
  time := 1/2
}
| .infinityPipeRecycling => {
  name := "infinity-pipe-recycling",
  inputs := [(1, .infinityPipe)],
  outputs := [(5/4, .electronicCircuit), (1/4, .pipe)],
  category := .recycling
  time := 1/32
}
| .inserter => {
  name := "inserter",
  inputs := [(1, .electronicCircuit), (1, .ironGearWheel), (1, .ironPlate)],
  outputs := [(1, .inserter)],
  category := .crafting
  time := 1/2
}
| .inserterRecycling => {
  name := "inserter-recycling",
  inputs := [(1, .inserter)],
  outputs := [(1/4, .electronicCircuit), (1/4, .ironGearWheel), (1/4, .ironPlate)],
  category := .recycling
  time := 1/32
}
| .ironBacteria => {
  name := "iron-bacteria",
  inputs := [(6, .jelly)],
  outputs := [(4, .spoilage), (1/10, .ironBacteria)],
  category := .organicOrHandCrafting
  time := 1
}
| .ironBacteriaCultivation => {
  name := "iron-bacteria-cultivation",
  inputs := [(1, .ironBacteria), (1, .bioflux)],
  outputs := [(4, .ironBacteria)],
  category := .organic
  time := 4
}
| .ironBacteriaRecycling => {
  name := "iron-bacteria-recycling",
  inputs := [(1, .ironBacteria)],
  outputs := [(1/4, .ironBacteria)],
  category := .recycling
  time := 1/16
}
| .ironChest => {
  name := "iron-chest",
  inputs := [(8, .ironPlate)],
  outputs := [(1, .ironChest)],
  category := .crafting
  time := 1/2
}
| .ironChestRecycling => {
  name := "iron-chest-recycling",
  inputs := [(1, .ironChest)],
  outputs := [(2, .ironPlate)],
  category := .recycling
  time := 1/32
}
| .ironGearWheel => {
  name := "iron-gear-wheel",
  inputs := [(2, .ironPlate)],
  outputs := [(1, .ironGearWheel)],
  category := .crafting
  time := 1/2
}
| .ironGearWheelRecycling => {
  name := "iron-gear-wheel-recycling",
  inputs := [(1, .ironGearWheel)],
  outputs := [(1/2, .ironPlate)],
  category := .recycling
  time := 1/32
}
| .ironOreRecycling => {
  name := "iron-ore-recycling",
  inputs := [(1, .ironOre)],
  outputs := [(1/4, .ironOre)],
  category := .recycling
  time := 1/32
}
| .ironPlate => {
  name := "iron-plate",
  inputs := [(1, .ironOre)],
  outputs := [(1, .ironPlate)],
  category := .smelting
  time := 16/5
}
| .ironPlateRecycling => {
  name := "iron-plate-recycling",
  inputs := [(1, .ironPlate)],
  outputs := [(1/4, .ironPlate)],
  category := .recycling
  time := 1/5
}
| .ironStick => {
  name := "iron-stick",
  inputs := [(1, .ironPlate)],
  outputs := [(2, .ironStick)],
  category := .crafting
  time := 1/2
}
| .ironStickRecycling => {
  name := "iron-stick-recycling",
  inputs := [(1, .ironStick)],
  outputs := [(1/8, .ironPlate)],
  category := .recycling
  time := 1/32
}
| .itemUnknownRecycling => {
  name := "item-unknown-recycling",
  inputs := [(1, .itemUnknown)],
  outputs := [(1/4, .itemUnknown)],
  category := .recycling
  time := 1/32
}
| .jellyRecycling => {
  name := "jelly-recycling",
  inputs := [(1, .jelly)],
  outputs := [(1/4, .jelly)],
  category := .recycling
  time := 1/32
}
| .jellynutProcessing => {
  name := "jellynut-processing",
  inputs := [(1, .jellynut)],
  outputs := [(4, .jelly), (1/50, .jellynutSeed)],
  category := .organicOrHandCrafting
  time := 1
}
| .jellynutRecycling => {
  name := "jellynut-recycling",
  inputs := [(1, .jellynut)],
  outputs := [(1/4, .jellynut)],
  category := .recycling
  time := 1/32
}
| .jellynutSeedRecycling => {
  name := "jellynut-seed-recycling",
  inputs := [(1, .jellynutSeed)],
  outputs := [(1/4, .jellynutSeed)],
  category := .recycling
  time := 1/32
}
| .kovarexEnrichmentProcess => {
  name := "kovarex-enrichment-process",
  inputs := [(40, .uranium235), (5, .uranium238)],
  outputs := [(41, .uranium235), (2, .uranium238)],
  category := .centrifuging
  time := 60
}
| .lab => {
  name := "lab",
  inputs := [(10, .electronicCircuit), (10, .ironGearWheel), (4, .transportBelt)],
  outputs := [(1, .lab)],
  category := .crafting
  time := 2
}
| .labRecycling => {
  name := "lab-recycling",
  inputs := [(1, .lab)],
  outputs := [(5/2, .electronicCircuit), (5/2, .ironGearWheel), (1, .transportBelt)],
  category := .recycling
  time := 1/8
}
| .landMine => {
  name := "land-mine",
  inputs := [(1, .steelPlate), (2, .explosives)],
  outputs := [(4, .landMine)],
  category := .crafting
  time := 5
}
| .landMineRecycling => {
  name := "land-mine-recycling",
  inputs := [(1, .landMine)],
  outputs := [(1/8, .explosives), (1/16, .steelPlate)],
  category := .recycling
  time := 5/16
}
| .landfill => {
  name := "landfill",
  inputs := [(50, .stone)],
  outputs := [(1, .landfill)],
  category := .crafting
  time := 1/2
}
| .landfillRecycling => {
  name := "landfill-recycling",
  inputs := [(1, .landfill)],
  outputs := [(1/4, .landfill)],
  category := .recycling
  time := 1/32
}
| .laneSplitterRecycling => {
  name := "lane-splitter-recycling",
  inputs := [(1, .laneSplitter)],
  outputs := [(1/4, .laneSplitter)],
  category := .recycling
  time := 1/32
}
| .laserTurret => {
  name := "laser-turret",
  inputs := [(20, .steelPlate), (20, .electronicCircuit), (12, .battery)],
  outputs := [(1, .laserTurret)],
  category := .crafting
  time := 20
}
| .laserTurretRecycling => {
  name := "laser-turret-recycling",
  inputs := [(1, .laserTurret)],
  outputs := [(5, .steelPlate), (5, .electronicCircuit), (3, .battery)],
  category := .recycling
  time := 5/4
}
| .lightArmor => {
  name := "light-armor",
  inputs := [(40, .ironPlate)],
  outputs := [(1, .lightArmor)],
  category := .crafting
  time := 3
}
| .lightArmorRecycling => {
  name := "light-armor-recycling",
  inputs := [(1, .lightArmor)],
  outputs := [(10, .ironPlate)],
  category := .recycling
  time := 3/16
}
| .lightOilBarrel => {
  name := "light-oil-barrel",
  inputs := [(50, .lightOil), (1, .barrel)],
  outputs := [(1, .lightOilBarrel)],
  category := .craftingWithFluid
  time := 1/5
}
| .lightOilBarrelRecycling => {
  name := "light-oil-barrel-recycling",
  inputs := [(1, .lightOilBarrel)],
  outputs := [(1/4, .barrel)],
  category := .recycling
  time := 1/80
}
| .lightOilCracking => {
  name := "light-oil-cracking",
  inputs := [(30, .water), (30, .lightOil)],
  outputs := [(20, .petroleumGas)],
  category := .organicOrChemistry
  time := 2
}
| .lightningCollector => {
  name := "lightning-collector",
  inputs := [(80, .electrolyte), (1, .lightningRod), (8, .supercapacitor), (1, .accumulator)],
  outputs := [(1, .lightningCollector)],
  category := .electromagnetics
  time := 5
}
| .lightningCollectorRecycling => {
  name := "lightning-collector-recycling",
  inputs := [(1, .lightningCollector)],
  outputs := [(2, .supercapacitor), (1/4, .lightningRod), (1/4, .accumulator)],
  category := .recycling
  time := 5/16
}
| .lightningRod => {
  name := "lightning-rod",
  inputs := [(12, .copperCable), (8, .steelPlate), (4, .stoneBrick)],
  outputs := [(1, .lightningRod)],
  category := .electronics
  time := 5
}
| .lightningRodRecycling => {
  name := "lightning-rod-recycling",
  inputs := [(1, .lightningRod)],
  outputs := [(3, .copperCable), (2, .steelPlate), (1, .stoneBrick)],
  category := .recycling
  time := 5/16
}
| .linkedBeltRecycling => {
  name := "linked-belt-recycling",
  inputs := [(1, .linkedBelt)],
  outputs := [(1/4, .linkedBelt)],
  category := .recycling
  time := 1/32
}
| .linkedChestRecycling => {
  name := "linked-chest-recycling",
  inputs := [(1, .linkedChest)],
  outputs := [(1/4, .linkedChest)],
  category := .recycling
  time := 1/32
}
| .lithium => {
  name := "lithium",
  inputs := [(50, .lithiumBrine), (50, .ammonia), (1, .holmiumPlate)],
  outputs := [(5, .lithium)],
  category := .chemistryOrCryogenics
  time := 20
}
| .lithiumPlate => {
  name := "lithium-plate",
  inputs := [(1, .lithium)],
  outputs := [(1, .lithiumPlate)],
  category := .smelting
  time := 32/5
}
| .lithiumPlateRecycling => {
  name := "lithium-plate-recycling",
  inputs := [(1, .lithiumPlate)],
  outputs := [(1/4, .lithiumPlate)],
  category := .recycling
  time := 2/5
}
| .lithiumRecycling => {
  name := "lithium-recycling",
  inputs := [(1, .lithium)],
  outputs := [(1/4, .lithium)],
  category := .recycling
  time := 5/4
}
| .loader => {
  name := "loader",
  inputs := [(5, .inserter), (5, .electronicCircuit), (5, .ironGearWheel), (5, .ironPlate), (5, .transportBelt)],
  outputs := [(1, .loader)],
  category := .crafting
  time := 1
}
| .loaderRecycling => {
  name := "loader-recycling",
  inputs := [(1, .loader)],
  outputs := [(5/4, .inserter), (5/4, .electronicCircuit), (5/4, .ironGearWheel), (5/4, .ironPlate), (5/4, .transportBelt)],
  category := .recycling
  time := 1/16
}
| .locomotive => {
  name := "locomotive",
  inputs := [(20, .engineUnit), (10, .electronicCircuit), (30, .steelPlate)],
  outputs := [(1, .locomotive)],
  category := .crafting
  time := 4
}
| .locomotiveRecycling => {
  name := "locomotive-recycling",
  inputs := [(1, .locomotive)],
  outputs := [(15/2, .steelPlate), (5, .engineUnit), (5/2, .electronicCircuit)],
  category := .recycling
  time := 1/4
}
| .logisticRobot => {
  name := "logistic-robot",
  inputs := [(1, .flyingRobotFrame), (2, .advancedCircuit)],
  outputs := [(1, .logisticRobot)],
  category := .crafting
  time := 1/2
}
| .logisticRobotRecycling => {
  name := "logistic-robot-recycling",
  inputs := [(1, .logisticRobot)],
  outputs := [(1/2, .advancedCircuit), (1/4, .flyingRobotFrame)],
  category := .recycling
  time := 1/32
}
| .logisticSciencePack => {
  name := "logistic-science-pack",
  inputs := [(1, .inserter), (1, .transportBelt)],
  outputs := [(1, .logisticSciencePack)],
  category := .crafting
  time := 6
}
| .logisticSciencePackRecycling => {
  name := "logistic-science-pack-recycling",
  inputs := [(1, .logisticSciencePack)],
  outputs := [(1/4, .logisticSciencePack)],
  category := .recycling
  time := 3/8
}
| .longHandedInserter => {
  name := "long-handed-inserter",
  inputs := [(1, .ironGearWheel), (1, .ironPlate), (1, .inserter)],
  outputs := [(1, .longHandedInserter)],
  category := .crafting
  time := 1/2
}
| .longHandedInserterRecycling => {
  name := "long-handed-inserter-recycling",
  inputs := [(1, .longHandedInserter)],
  outputs := [(1/4, .ironGearWheel), (1/4, .ironPlate), (1/4, .inserter)],
  category := .recycling
  time := 1/32
}
| .lowDensityStructure => {
  name := "low-density-structure",
  inputs := [(2, .steelPlate), (20, .copperPlate), (5, .plasticBar)],
  outputs := [(1, .lowDensityStructure)],
  category := .crafting
  time := 15
}
| .lowDensityStructureRecycling => {
  name := "low-density-structure-recycling",
  inputs := [(1, .lowDensityStructure)],
  outputs := [(5, .copperPlate), (5/4, .plasticBar), (1/2, .steelPlate)],
  category := .recycling
  time := 15/16
}
| .lubricant => {
  name := "lubricant",
  inputs := [(10, .heavyOil)],
  outputs := [(10, .lubricant)],
  category := .chemistry
  time := 1
}
| .lubricantBarrel => {
  name := "lubricant-barrel",
  inputs := [(50, .lubricant), (1, .barrel)],
  outputs := [(1, .lubricantBarrel)],
  category := .craftingWithFluid
  time := 1/5
}
| .lubricantBarrelRecycling => {
  name := "lubricant-barrel-recycling",
  inputs := [(1, .lubricantBarrel)],
  outputs := [(1/4, .barrel)],
  category := .recycling
  time := 1/80
}
| .mechArmor => {
  name := "mech-armor",
  inputs := [(1, .powerArmorMk2), (200, .holmiumPlate), (100, .processingUnit), (50, .superconductor), (50, .supercapacitor)],
  outputs := [(1, .mechArmor)],
  category := .crafting
  time := 60
}
| .mechArmorRecycling => {
  name := "mech-armor-recycling",
  inputs := [(1, .mechArmor)],
  outputs := [(50, .holmiumPlate), (25, .processingUnit), (25/2, .superconductor), (25/2, .supercapacitor), (1/4, .powerArmorMk2)],
  category := .recycling
  time := 15/4
}
| .mediumElectricPole => {
  name := "medium-electric-pole",
  inputs := [(4, .ironStick), (2, .steelPlate), (2, .copperCable)],
  outputs := [(1, .mediumElectricPole)],
  category := .electronics
  time := 1/2
}
| .mediumElectricPoleRecycling => {
  name := "medium-electric-pole-recycling",
  inputs := [(1, .mediumElectricPole)],
  outputs := [(1, .ironStick), (1/2, .steelPlate), (1/2, .copperCable)],
  category := .recycling
  time := 1/32
}
| .metallicAsteroidChunkRecycling => {
  name := "metallic-asteroid-chunk-recycling",
  inputs := [(1, .metallicAsteroidChunk)],
  outputs := [(1/4, .metallicAsteroidChunk)],
  category := .recycling
  time := 1/32
}
| .metallicAsteroidCrushing => {
  name := "metallic-asteroid-crushing",
  inputs := [(1, .metallicAsteroidChunk)],
  outputs := [(20, .ironOre), (1/5, .metallicAsteroidChunk)],
  category := .crushing
  time := 2
}
| .metallicAsteroidReprocessing => {
  name := "metallic-asteroid-reprocessing",
  inputs := [(1, .metallicAsteroidChunk)],
  outputs := [(2/5, .metallicAsteroidChunk), (1/5, .carbonicAsteroidChunk), (1/5, .oxideAsteroidChunk)],
  category := .crushing
  time := 2
}
| .metallurgicSciencePack => {
  name := "metallurgic-science-pack",
  inputs := [(200, .moltenCopper), (3, .tungstenCarbide), (2, .tungstenPlate)],
  outputs := [(1, .metallurgicSciencePack)],
  category := .metallurgy
  time := 10
}
| .metallurgicSciencePackRecycling => {
  name := "metallurgic-science-pack-recycling",
  inputs := [(1, .metallurgicSciencePack)],
  outputs := [(1/4, .metallurgicSciencePack)],
  category := .recycling
  time := 5/8
}
| .militarySciencePack => {
  name := "military-science-pack",
  inputs := [(1, .piercingRoundsMagazine), (1, .grenade), (2, .stoneWall)],
  outputs := [(2, .militarySciencePack)],
  category := .crafting
  time := 10
}
| .militarySciencePackRecycling => {
  name := "military-science-pack-recycling",
  inputs := [(1, .militarySciencePack)],
  outputs := [(1/4, .militarySciencePack)],
  category := .recycling
  time := 5/8
}
| .modularArmor => {
  name := "modular-armor",
  inputs := [(30, .advancedCircuit), (50, .steelPlate)],
  outputs := [(1, .modularArmor)],
  category := .crafting
  time := 15
}
| .modularArmorRecycling => {
  name := "modular-armor-recycling",
  inputs := [(1, .modularArmor)],
  outputs := [(25/2, .steelPlate), (15/2, .advancedCircuit)],
  category := .recycling
  time := 15/16
}
| .moltenCopper => {
  name := "molten-copper",
  inputs := [(50, .copperOre), (1, .calcite)],
  outputs := [(500, .moltenCopper)],
  category := .metallurgy
  time := 32
}
| .moltenCopperFromLava => {
  name := "molten-copper-from-lava",
  inputs := [(500, .lava), (1, .calcite)],
  outputs := [(15, .stone), (250, .moltenCopper)],
  category := .metallurgy
  time := 16
}
| .moltenIron => {
  name := "molten-iron",
  inputs := [(50, .ironOre), (1, .calcite)],
  outputs := [(500, .moltenIron)],
  category := .metallurgy
  time := 32
}
| .moltenIronFromLava => {
  name := "molten-iron-from-lava",
  inputs := [(500, .lava), (1, .calcite)],
  outputs := [(10, .stone), (250, .moltenIron)],
  category := .metallurgy
  time := 16
}
| .nightVisionEquipment => {
  name := "night-vision-equipment",
  inputs := [(5, .advancedCircuit), (10, .steelPlate)],
  outputs := [(1, .nightVisionEquipment)],
  category := .crafting
  time := 10
}
| .nightVisionEquipmentRecycling => {
  name := "night-vision-equipment-recycling",
  inputs := [(1, .nightVisionEquipment)],
  outputs := [(5/2, .steelPlate), (5/4, .advancedCircuit)],
  category := .recycling
  time := 5/8
}
| .nuclearFuel => {
  name := "nuclear-fuel",
  inputs := [(1, .uranium235), (1, .rocketFuel)],
  outputs := [(1, .nuclearFuel)],
  category := .centrifuging
  time := 90
}
| .nuclearFuelRecycling => {
  name := "nuclear-fuel-recycling",
  inputs := [(1, .nuclearFuel)],
  outputs := [(1/4, .uranium235), (1/4, .rocketFuel)],
  category := .recycling
  time := 45/8
}
| .nuclearFuelReprocessing => {
  name := "nuclear-fuel-reprocessing",
  inputs := [(5, .depletedUraniumFuelCell)],
  outputs := [(3, .uranium238)],
  category := .centrifuging
  time := 60
}
| .nuclearReactor => {
  name := "nuclear-reactor",
  inputs := [(500, .concrete), (500, .steelPlate), (500, .advancedCircuit), (500, .copperPlate)],
  outputs := [(1, .nuclearReactor)],
  category := .crafting
  time := 8
}
| .nuclearReactorRecycling => {
  name := "nuclear-reactor-recycling",
  inputs := [(1, .nuclearReactor)],
  outputs := [(125, .concrete), (125, .steelPlate), (125, .advancedCircuit), (125, .copperPlate)],
  category := .recycling
  time := 1/2
}
| .nutrientsFromBioflux => {
  name := "nutrients-from-bioflux",
  inputs := [(5, .bioflux)],
  outputs := [(40, .nutrients)],
  category := .organic
  time := 2
}
| .nutrientsFromBiterEgg => {
  name := "nutrients-from-biter-egg",
  inputs := [(1, .biterEgg)],
  outputs := [(20, .nutrients)],
  category := .organicOrAssembling
  time := 2
}
| .nutrientsFromFish => {
  name := "nutrients-from-fish",
  inputs := [(1, .rawFish)],
  outputs := [(20, .nutrients)],
  category := .organicOrAssembling
  time := 2
}
| .nutrientsFromSpoilage => {
  name := "nutrients-from-spoilage",
  inputs := [(10, .spoilage)],
  outputs := [(1, .nutrients)],
  category := .organicOrAssembling
  time := 2
}
| .nutrientsFromYumakoMash => {
  name := "nutrients-from-yumako-mash",
  inputs := [(4, .yumakoMash)],
  outputs := [(6, .nutrients)],
  category := .organic
  time := 4
}
| .nutrientsRecycling => {
  name := "nutrients-recycling",
  inputs := [(1, .nutrients)],
  outputs := [(5/2, .spoilage)],
  category := .recycling
  time := 1/8
}
| .offshorePump => {
  name := "offshore-pump",
  inputs := [(3, .pipe), (2, .ironGearWheel)],
  outputs := [(1, .offshorePump)],
  category := .crafting
  time := 1/2
}
| .offshorePumpRecycling => {
  name := "offshore-pump-recycling",
  inputs := [(1, .offshorePump)],
  outputs := [(3/4, .pipe), (1/2, .ironGearWheel)],
  category := .recycling
  time := 1/32
}
| .oilRefinery => {
  name := "oil-refinery",
  inputs := [(15, .steelPlate), (10, .ironGearWheel), (10, .stoneBrick), (10, .electronicCircuit), (10, .pipe)],
  outputs := [(1, .oilRefinery)],
  category := .crafting
  time := 8
}
| .oilRefineryRecycling => {
  name := "oil-refinery-recycling",
  inputs := [(1, .oilRefinery)],
  outputs := [(15/4, .steelPlate), (5/2, .ironGearWheel), (5/2, .stoneBrick), (5/2, .electronicCircuit), (5/2, .pipe)],
  category := .recycling
  time := 1/2
}
| .oneWayValveRecycling => {
  name := "one-way-valve-recycling",
  inputs := [(1, .oneWayValve)],
  outputs := [(1/4, .oneWayValve)],
  category := .recycling
  time := 1/32
}
| .overflowValveRecycling => {
  name := "overflow-valve-recycling",
  inputs := [(1, .overflowValve)],
  outputs := [(1/4, .overflowValve)],
  category := .recycling
  time := 1/32
}
| .overgrowthJellynutSoil => {
  name := "overgrowth-jellynut-soil",
  inputs := [(100, .water), (2, .artificialJellynutSoil), (5, .jellynutSeed), (10, .biterEgg), (50, .spoilage)],
  outputs := [(1, .overgrowthJellynutSoil)],
  category := .craftingWithFluid
  time := 10
}
| .overgrowthJellynutSoilRecycling => {
  name := "overgrowth-jellynut-soil-recycling",
  inputs := [(1, .overgrowthJellynutSoil)],
  outputs := [(25/2, .spoilage), (5/2, .biterEgg), (5/4, .jellynutSeed), (1/2, .artificialJellynutSoil)],
  category := .recycling
  time := 5/8
}
| .overgrowthYumakoSoil => {
  name := "overgrowth-yumako-soil",
  inputs := [(100, .water), (2, .artificialYumakoSoil), (5, .yumakoSeed), (10, .biterEgg), (50, .spoilage)],
  outputs := [(1, .overgrowthYumakoSoil)],
  category := .craftingWithFluid
  time := 10
}
| .overgrowthYumakoSoilRecycling => {
  name := "overgrowth-yumako-soil-recycling",
  inputs := [(1, .overgrowthYumakoSoil)],
  outputs := [(25/2, .spoilage), (5/2, .biterEgg), (5/4, .yumakoSeed), (1/2, .artificialYumakoSoil)],
  category := .recycling
  time := 5/8
}
| .oxideAsteroidChunkRecycling => {
  name := "oxide-asteroid-chunk-recycling",
  inputs := [(1, .oxideAsteroidChunk)],
  outputs := [(1/4, .oxideAsteroidChunk)],
  category := .recycling
  time := 1/32
}
| .oxideAsteroidCrushing => {
  name := "oxide-asteroid-crushing",
  inputs := [(1, .oxideAsteroidChunk)],
  outputs := [(5, .ice), (1/5, .oxideAsteroidChunk)],
  category := .crushing
  time := 2
}
| .oxideAsteroidReprocessing => {
  name := "oxide-asteroid-reprocessing",
  inputs := [(1, .oxideAsteroidChunk)],
  outputs := [(2/5, .oxideAsteroidChunk), (1/5, .metallicAsteroidChunk), (1/5, .carbonicAsteroidChunk)],
  category := .crushing
  time := 1
}
| .parameter0 => {
  name := "parameter-0",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .parameter1 => {
  name := "parameter-1",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .parameter2 => {
  name := "parameter-2",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .parameter3 => {
  name := "parameter-3",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .parameter4 => {
  name := "parameter-4",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .parameter5 => {
  name := "parameter-5",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .parameter6 => {
  name := "parameter-6",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .parameter7 => {
  name := "parameter-7",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .parameter8 => {
  name := "parameter-8",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .parameter9 => {
  name := "parameter-9",
  inputs := [],
  outputs := [],
  category := .parameters
  time := 1/2
}
| .passiveProviderChest => {
  name := "passive-provider-chest",
  inputs := [(1, .steelChest), (3, .electronicCircuit), (1, .advancedCircuit)],
  outputs := [(1, .passiveProviderChest)],
  category := .crafting
  time := 1/2
}
| .passiveProviderChestRecycling => {
  name := "passive-provider-chest-recycling",
  inputs := [(1, .passiveProviderChest)],
  outputs := [(3/4, .electronicCircuit), (1/4, .steelChest), (1/4, .advancedCircuit)],
  category := .recycling
  time := 1/32
}
| .pentapodEgg => {
  name := "pentapod-egg",
  inputs := [(60, .water), (1, .pentapodEgg), (30, .nutrients)],
  outputs := [(2, .pentapodEgg)],
  category := .organic
  time := 15
}
| .pentapodEggRecycling => {
  name := "pentapod-egg-recycling",
  inputs := [(1, .pentapodEgg)],
  outputs := [(1/4, .pentapodEgg)],
  category := .recycling
  time := 15/16
}
| .personalLaserDefenseEquipment => {
  name := "personal-laser-defense-equipment",
  inputs := [(20, .processingUnit), (5, .lowDensityStructure), (5, .laserTurret)],
  outputs := [(1, .personalLaserDefenseEquipment)],
  category := .crafting
  time := 10
}
| .personalLaserDefenseEquipmentRecycling => {
  name := "personal-laser-defense-equipment-recycling",
  inputs := [(1, .personalLaserDefenseEquipment)],
  outputs := [(5, .processingUnit), (5/4, .lowDensityStructure), (5/4, .laserTurret)],
  category := .recycling
  time := 5/8
}
| .personalRoboportEquipment => {
  name := "personal-roboport-equipment",
  inputs := [(10, .advancedCircuit), (40, .ironGearWheel), (20, .steelPlate), (45, .battery)],
  outputs := [(1, .personalRoboportEquipment)],
  category := .crafting
  time := 10
}
| .personalRoboportEquipmentRecycling => {
  name := "personal-roboport-equipment-recycling",
  inputs := [(1, .personalRoboportEquipment)],
  outputs := [(45/4, .battery), (10, .ironGearWheel), (5, .steelPlate), (5/2, .advancedCircuit)],
  category := .recycling
  time := 5/8
}
| .personalRoboportMk2Equipment => {
  name := "personal-roboport-mk2-equipment",
  inputs := [(5, .personalRoboportEquipment), (50, .processingUnit), (50, .superconductor)],
  outputs := [(1, .personalRoboportMk2Equipment)],
  category := .crafting
  time := 20
}
| .personalRoboportMk2EquipmentRecycling => {
  name := "personal-roboport-mk2-equipment-recycling",
  inputs := [(1, .personalRoboportMk2Equipment)],
  outputs := [(25/2, .processingUnit), (25/2, .superconductor), (5/4, .personalRoboportEquipment)],
  category := .recycling
  time := 5/4
}
| .petroleumGasBarrel => {
  name := "petroleum-gas-barrel",
  inputs := [(50, .petroleumGas), (1, .barrel)],
  outputs := [(1, .petroleumGasBarrel)],
  category := .craftingWithFluid
  time := 1/5
}
| .petroleumGasBarrelRecycling => {
  name := "petroleum-gas-barrel-recycling",
  inputs := [(1, .petroleumGasBarrel)],
  outputs := [(1/4, .barrel)],
  category := .recycling
  time := 1/80
}
| .piercingRoundsMagazine => {
  name := "piercing-rounds-magazine",
  inputs := [(2, .firearmMagazine), (1, .steelPlate), (2, .copperPlate)],
  outputs := [(2, .piercingRoundsMagazine)],
  category := .crafting
  time := 6
}
| .piercingRoundsMagazineRecycling => {
  name := "piercing-rounds-magazine-recycling",
  inputs := [(1, .piercingRoundsMagazine)],
  outputs := [(1/4, .firearmMagazine), (1/4, .copperPlate), (1/8, .steelPlate)],
  category := .recycling
  time := 3/8
}
| .piercingShotgunShell => {
  name := "piercing-shotgun-shell",
  inputs := [(2, .shotgunShell), (5, .copperPlate), (2, .steelPlate)],
  outputs := [(1, .piercingShotgunShell)],
  category := .crafting
  time := 8
}
| .piercingShotgunShellRecycling => {
  name := "piercing-shotgun-shell-recycling",
  inputs := [(1, .piercingShotgunShell)],
  outputs := [(5/4, .copperPlate), (1/2, .shotgunShell), (1/2, .steelPlate)],
  category := .recycling
  time := 1/2
}
| .pipe => {
  name := "pipe",
  inputs := [(1, .ironPlate)],
  outputs := [(1, .pipe)],
  category := .crafting
  time := 1/2
}
| .pipeRecycling => {
  name := "pipe-recycling",
  inputs := [(1, .pipe)],
  outputs := [(1/4, .ironPlate)],
  category := .recycling
  time := 1/32
}
| .pipeToGround => {
  name := "pipe-to-ground",
  inputs := [(10, .pipe), (5, .ironPlate)],
  outputs := [(2, .pipeToGround)],
  category := .crafting
  time := 1/2
}
| .pipeToGroundRecycling => {
  name := "pipe-to-ground-recycling",
  inputs := [(1, .pipeToGround)],
  outputs := [(5/4, .pipe), (5/8, .ironPlate)],
  category := .recycling
  time := 1/32
}
| .pistol => {
  name := "pistol",
  inputs := [(5, .copperPlate), (5, .ironPlate)],
  outputs := [(1, .pistol)],
  category := .crafting
  time := 5
}
| .pistolRecycling => {
  name := "pistol-recycling",
  inputs := [(1, .pistol)],
  outputs := [(5/4, .copperPlate), (5/4, .ironPlate)],
  category := .recycling
  time := 5/16
}
| .plasticBar => {
  name := "plastic-bar",
  inputs := [(20, .petroleumGas), (1, .coal)],
  outputs := [(2, .plasticBar)],
  category := .chemistryOrCryogenics
  time := 1
}
| .plasticBarRecycling => {
  name := "plastic-bar-recycling",
  inputs := [(1, .plasticBar)],
  outputs := [(1/4, .plasticBar)],
  category := .recycling
  time := 1/16
}
| .poisonCapsule => {
  name := "poison-capsule",
  inputs := [(3, .steelPlate), (3, .electronicCircuit), (10, .coal)],
  outputs := [(1, .poisonCapsule)],
  category := .crafting
  time := 8
}
| .poisonCapsuleRecycling => {
  name := "poison-capsule-recycling",
  inputs := [(1, .poisonCapsule)],
  outputs := [(5/2, .coal), (3/4, .steelPlate), (3/4, .electronicCircuit)],
  category := .recycling
  time := 1/2
}
| .powerArmor => {
  name := "power-armor",
  inputs := [(40, .processingUnit), (20, .electricEngineUnit), (40, .steelPlate)],
  outputs := [(1, .powerArmor)],
  category := .crafting
  time := 20
}
| .powerArmorMk2 => {
  name := "power-armor-mk2",
  inputs := [(100, .efficiencyModule), (100, .speedModule), (60, .processingUnit), (40, .electricEngineUnit), (30, .lowDensityStructure)],
  outputs := [(1, .powerArmorMk2)],
  category := .crafting
  time := 25
}
| .powerArmorMk2Recycling => {
  name := "power-armor-mk2-recycling",
  inputs := [(1, .powerArmorMk2)],
  outputs := [(25, .efficiencyModule), (25, .speedModule), (15, .processingUnit), (10, .electricEngineUnit), (15/2, .lowDensityStructure)],
  category := .recycling
  time := 25/16
}
| .powerArmorRecycling => {
  name := "power-armor-recycling",
  inputs := [(1, .powerArmor)],
  outputs := [(10, .processingUnit), (10, .steelPlate), (5, .electricEngineUnit)],
  category := .recycling
  time := 5/4
}
| .powerSwitch => {
  name := "power-switch",
  inputs := [(5, .ironPlate), (5, .copperCable), (2, .electronicCircuit)],
  outputs := [(1, .powerSwitch)],
  category := .crafting
  time := 2
}
| .powerSwitchRecycling => {
  name := "power-switch-recycling",
  inputs := [(1, .powerSwitch)],
  outputs := [(5/4, .ironPlate), (5/4, .copperCable), (1/2, .electronicCircuit)],
  category := .recycling
  time := 1/8
}
| .processingUnit => {
  name := "processing-unit",
  inputs := [(5, .sulfuricAcid), (20, .electronicCircuit), (2, .advancedCircuit)],
  outputs := [(1, .processingUnit)],
  category := .electronicsWithFluid
  time := 10
}
| .processingUnitRecycling => {
  name := "processing-unit-recycling",
  inputs := [(1, .processingUnit)],
  outputs := [(5, .electronicCircuit), (1/2, .advancedCircuit)],
  category := .recycling
  time := 5/8
}
| .productionSciencePack => {
  name := "production-science-pack",
  inputs := [(1, .electricFurnace), (1, .productivityModule), (30, .rail)],
  outputs := [(3, .productionSciencePack)],
  category := .crafting
  time := 21
}
| .productionSciencePackRecycling => {
  name := "production-science-pack-recycling",
  inputs := [(1, .productionSciencePack)],
  outputs := [(1/4, .productionSciencePack)],
  category := .recycling
  time := 21/16
}
| .productivityModule => {
  name := "productivity-module",
  inputs := [(5, .advancedCircuit), (5, .electronicCircuit)],
  outputs := [(1, .productivityModule)],
  category := .electronics
  time := 15
}
| .productivityModule2 => {
  name := "productivity-module-2",
  inputs := [(4, .productivityModule), (5, .advancedCircuit), (5, .processingUnit)],
  outputs := [(1, .productivityModule2)],
  category := .electronics
  time := 30
}
| .productivityModule2Recycling => {
  name := "productivity-module-2-recycling",
  inputs := [(1, .productivityModule2)],
  outputs := [(5/4, .advancedCircuit), (5/4, .processingUnit), (1, .productivityModule)],
  category := .recycling
  time := 15/8
}
| .productivityModule3 => {
  name := "productivity-module-3",
  inputs := [(4, .productivityModule2), (5, .advancedCircuit), (5, .processingUnit), (1, .biterEgg)],
  outputs := [(1, .productivityModule3)],
  category := .electronics
  time := 60
}
| .productivityModule3Recycling => {
  name := "productivity-module-3-recycling",
  inputs := [(1, .productivityModule3)],
  outputs := [(5/4, .advancedCircuit), (5/4, .processingUnit), (1, .productivityModule2), (1/4, .biterEgg)],
  category := .recycling
  time := 15/4
}
| .productivityModuleRecycling => {
  name := "productivity-module-recycling",
  inputs := [(1, .productivityModule)],
  outputs := [(5/4, .advancedCircuit), (5/4, .electronicCircuit)],
  category := .recycling
  time := 15/16
}
| .programmableSpeaker => {
  name := "programmable-speaker",
  inputs := [(3, .ironPlate), (4, .ironStick), (5, .copperCable), (4, .electronicCircuit)],
  outputs := [(1, .programmableSpeaker)],
  category := .crafting
  time := 2
}
| .programmableSpeakerRecycling => {
  name := "programmable-speaker-recycling",
  inputs := [(1, .programmableSpeaker)],
  outputs := [(5/4, .copperCable), (1, .ironStick), (1, .electronicCircuit), (3/4, .ironPlate)],
  category := .recycling
  time := 1/8
}
| .promethiumAsteroidChunkRecycling => {
  name := "promethium-asteroid-chunk-recycling",
  inputs := [(1, .promethiumAsteroidChunk)],
  outputs := [(1/4, .promethiumAsteroidChunk)],
  category := .recycling
  time := 1/32
}
| .promethiumSciencePack => {
  name := "promethium-science-pack",
  inputs := [(25, .promethiumAsteroidChunk), (1, .quantumProcessor), (10, .biterEgg)],
  outputs := [(10, .promethiumSciencePack)],
  category := .cryogenics
  time := 5
}
| .promethiumSciencePackRecycling => {
  name := "promethium-science-pack-recycling",
  inputs := [(1, .promethiumSciencePack)],
  outputs := [(1/4, .promethiumSciencePack)],
  category := .recycling
  time := 5/16
}
| .proxyContainerRecycling => {
  name := "proxy-container-recycling",
  inputs := [(1, .proxyContainer)],
  outputs := [(1/4, .proxyContainer)],
  category := .recycling
  time := 1/32
}
| .pump => {
  name := "pump",
  inputs := [(1, .engineUnit), (1, .steelPlate), (1, .pipe)],
  outputs := [(1, .pump)],
  category := .crafting
  time := 2
}
| .pumpRecycling => {
  name := "pump-recycling",
  inputs := [(1, .pump)],
  outputs := [(1/4, .engineUnit), (1/4, .steelPlate), (1/4, .pipe)],
  category := .recycling
  time := 1/8
}
| .pumpjack => {
  name := "pumpjack",
  inputs := [(5, .steelPlate), (10, .ironGearWheel), (5, .electronicCircuit), (10, .pipe)],
  outputs := [(1, .pumpjack)],
  category := .crafting
  time := 5
}
| .pumpjackRecycling => {
  name := "pumpjack-recycling",
  inputs := [(1, .pumpjack)],
  outputs := [(5/2, .ironGearWheel), (5/2, .pipe), (5/4, .steelPlate), (5/4, .electronicCircuit)],
  category := .recycling
  time := 5/16
}
| .qualityModule => {
  name := "quality-module",
  inputs := [(5, .electronicCircuit), (5, .advancedCircuit)],
  outputs := [(1, .qualityModule)],
  category := .electronics
  time := 15
}
| .qualityModule2 => {
  name := "quality-module-2",
  inputs := [(4, .qualityModule), (5, .advancedCircuit), (5, .processingUnit)],
  outputs := [(1, .qualityModule2)],
  category := .electronics
  time := 30
}
| .qualityModule2Recycling => {
  name := "quality-module-2-recycling",
  inputs := [(1, .qualityModule2)],
  outputs := [(5/4, .advancedCircuit), (5/4, .processingUnit), (1, .qualityModule)],
  category := .recycling
  time := 15/8
}
| .qualityModule3 => {
  name := "quality-module-3",
  inputs := [(4, .qualityModule2), (5, .advancedCircuit), (5, .processingUnit), (1, .superconductor)],
  outputs := [(1, .qualityModule3)],
  category := .electronics
  time := 60
}
| .qualityModule3Recycling => {
  name := "quality-module-3-recycling",
  inputs := [(1, .qualityModule3)],
  outputs := [(5/4, .advancedCircuit), (5/4, .processingUnit), (1, .qualityModule2), (1/4, .superconductor)],
  category := .recycling
  time := 15/4
}
| .qualityModuleRecycling => {
  name := "quality-module-recycling",
  inputs := [(1, .qualityModule)],
  outputs := [(5/4, .electronicCircuit), (5/4, .advancedCircuit)],
  category := .recycling
  time := 15/16
}
| .quantumProcessor => {
  name := "quantum-processor",
  inputs := [(10, .fluoroketoneCold), (1, .tungstenCarbide), (1, .processingUnit), (1, .superconductor), (1, .carbonFiber), (2, .lithiumPlate)],
  outputs := [(1, .quantumProcessor), (5, .fluoroketoneHot)],
  category := .electromagnetics
  time := 30
}
| .quantumProcessorRecycling => {
  name := "quantum-processor-recycling",
  inputs := [(1, .quantumProcessor)],
  outputs := [(1/2, .lithiumPlate), (1/4, .tungstenCarbide), (1/4, .processingUnit), (1/4, .superconductor), (1/4, .carbonFiber)],
  category := .recycling
  time := 15/8
}
| .radar => {
  name := "radar",
  inputs := [(5, .electronicCircuit), (5, .ironGearWheel), (10, .ironPlate)],
  outputs := [(1, .radar)],
  category := .crafting
  time := 1/2
}
| .radarRecycling => {
  name := "radar-recycling",
  inputs := [(1, .radar)],
  outputs := [(5/2, .ironPlate), (5/4, .electronicCircuit), (5/4, .ironGearWheel)],
  category := .recycling
  time := 1/32
}
| .rail => {
  name := "rail",
  inputs := [(1, .stone), (1, .ironStick), (1, .steelPlate)],
  outputs := [(2, .rail)],
  category := .crafting
  time := 1/2
}
| .railChainSignal => {
  name := "rail-chain-signal",
  inputs := [(1, .electronicCircuit), (5, .ironPlate)],
  outputs := [(1, .railChainSignal)],
  category := .crafting
  time := 1/2
}
| .railChainSignalRecycling => {
  name := "rail-chain-signal-recycling",
  inputs := [(1, .railChainSignal)],
  outputs := [(5/4, .ironPlate), (1/4, .electronicCircuit)],
  category := .recycling
  time := 1/32
}
| .railRamp => {
  name := "rail-ramp",
  inputs := [(100, .refinedConcrete), (8, .rail), (10, .steelPlate)],
  outputs := [(1, .railRamp)],
  category := .crafting
  time := 1/2
}
| .railRampRecycling => {
  name := "rail-ramp-recycling",
  inputs := [(1, .railRamp)],
  outputs := [(25, .refinedConcrete), (5/2, .steelPlate), (2, .rail)],
  category := .recycling
  time := 1/32
}
| .railRecycling => {
  name := "rail-recycling",
  inputs := [(1, .rail)],
  outputs := [(1/8, .stone), (1/8, .ironStick), (1/8, .steelPlate)],
  category := .recycling
  time := 1/32
}
| .railSignal => {
  name := "rail-signal",
  inputs := [(1, .electronicCircuit), (5, .ironPlate)],
  outputs := [(1, .railSignal)],
  category := .crafting
  time := 1/2
}
| .railSignalRecycling => {
  name := "rail-signal-recycling",
  inputs := [(1, .railSignal)],
  outputs := [(5/4, .ironPlate), (1/4, .electronicCircuit)],
  category := .recycling
  time := 1/32
}
| .railSupport => {
  name := "rail-support",
  inputs := [(20, .refinedConcrete), (10, .steelPlate)],
  outputs := [(1, .railSupport)],
  category := .crafting
  time := 1/2
}
| .railSupportRecycling => {
  name := "rail-support-recycling",
  inputs := [(1, .railSupport)],
  outputs := [(5, .refinedConcrete), (5/2, .steelPlate)],
  category := .recycling
  time := 1/32
}
| .railgun => {
  name := "railgun",
  inputs := [(10, .fluoroketoneCold), (10, .tungstenPlate), (10, .superconductor), (20, .quantumProcessor)],
  outputs := [(1, .railgun)],
  category := .cryogenics
  time := 10
}
| .railgunAmmo => {
  name := "railgun-ammo",
  inputs := [(5, .steelPlate), (10, .copperCable), (2, .explosives)],
  outputs := [(1, .railgunAmmo)],
  category := .crafting
  time := 25
}
| .railgunAmmoRecycling => {
  name := "railgun-ammo-recycling",
  inputs := [(1, .railgunAmmo)],
  outputs := [(5/2, .copperCable), (5/4, .steelPlate), (1/2, .explosives)],
  category := .recycling
  time := 25/16
}
| .railgunRecycling => {
  name := "railgun-recycling",
  inputs := [(1, .railgun)],
  outputs := [(5, .quantumProcessor), (5/2, .tungstenPlate), (5/2, .superconductor)],
  category := .recycling
  time := 5/8
}
| .railgunTurret => {
  name := "railgun-turret",
  inputs := [(100, .fluoroketoneCold), (100, .quantumProcessor), (30, .tungstenPlate), (50, .superconductor), (20, .carbonFiber)],
  outputs := [(1, .railgunTurret)],
  category := .cryogenics
  time := 10
}
| .railgunTurretRecycling => {
  name := "railgun-turret-recycling",
  inputs := [(1, .railgunTurret)],
  outputs := [(25, .quantumProcessor), (25/2, .superconductor), (15/2, .tungstenPlate), (5, .carbonFiber)],
  category := .recycling
  time := 5/8
}
| .rawFishRecycling => {
  name := "raw-fish-recycling",
  inputs := [(1, .rawFish)],
  outputs := [(1/4, .rawFish)],
  category := .recycling
  time := 1/32
}
| .recycler => {
  name := "recycler",
  inputs := [(6, .processingUnit), (20, .steelPlate), (40, .ironGearWheel), (20, .concrete)],
  outputs := [(1, .recycler)],
  category := .crafting
  time := 3
}
| .recyclerRecycling => {
  name := "recycler-recycling",
  inputs := [(1, .recycler)],
  outputs := [(10, .ironGearWheel), (5, .steelPlate), (5, .concrete), (3/2, .processingUnit)],
  category := .recycling
  time := 3/16
}
| .refinedConcrete => {
  name := "refined-concrete",
  inputs := [(100, .water), (20, .concrete), (8, .ironStick), (1, .steelPlate)],
  outputs := [(10, .refinedConcrete)],
  category := .craftingWithFluid
  time := 15
}
| .refinedConcreteRecycling => {
  name := "refined-concrete-recycling",
  inputs := [(1, .refinedConcrete)],
  outputs := [(1/2, .concrete), (1/5, .ironStick), (1/40, .steelPlate)],
  category := .recycling
  time := 15/16
}
| .refinedHazardConcrete => {
  name := "refined-hazard-concrete",
  inputs := [(10, .refinedConcrete)],
  outputs := [(10, .refinedHazardConcrete)],
  category := .crafting
  time := 1/4
}
| .refinedHazardConcreteRecycling => {
  name := "refined-hazard-concrete-recycling",
  inputs := [(1, .refinedHazardConcrete)],
  outputs := [(1/4, .refinedConcrete)],
  category := .recycling
  time := 1/64
}
| .repairPack => {
  name := "repair-pack",
  inputs := [(2, .electronicCircuit), (2, .ironGearWheel)],
  outputs := [(1, .repairPack)],
  category := .crafting
  time := 1/2
}
| .repairPackRecycling => {
  name := "repair-pack-recycling",
  inputs := [(1, .repairPack)],
  outputs := [(1/2, .electronicCircuit), (1/2, .ironGearWheel)],
  category := .recycling
  time := 1/32
}
| .requesterChest => {
  name := "requester-chest",
  inputs := [(1, .steelChest), (3, .electronicCircuit), (1, .advancedCircuit)],
  outputs := [(1, .requesterChest)],
  category := .crafting
  time := 1/2
}
| .requesterChestRecycling => {
  name := "requester-chest-recycling",
  inputs := [(1, .requesterChest)],
  outputs := [(3/4, .electronicCircuit), (1/4, .steelChest), (1/4, .advancedCircuit)],
  category := .recycling
  time := 1/32
}
| .roboport => {
  name := "roboport",
  inputs := [(45, .steelPlate), (45, .ironGearWheel), (45, .advancedCircuit)],
  outputs := [(1, .roboport)],
  category := .crafting
  time := 5
}
| .roboportRecycling => {
  name := "roboport-recycling",
  inputs := [(1, .roboport)],
  outputs := [(45/4, .steelPlate), (45/4, .ironGearWheel), (45/4, .advancedCircuit)],
  category := .recycling
  time := 5/16
}
| .rocket => {
  name := "rocket",
  inputs := [(1, .explosives), (2, .ironPlate)],
  outputs := [(1, .rocket)],
  category := .crafting
  time := 4
}
| .rocketFuel => {
  name := "rocket-fuel",
  inputs := [(10, .lightOil), (10, .solidFuel)],
  outputs := [(1, .rocketFuel)],
  category := .organicOrAssembling
  time := 15
}
| .rocketFuelFromJelly => {
  name := "rocket-fuel-from-jelly",
  inputs := [(30, .water), (30, .jelly), (2, .bioflux)],
  outputs := [(1, .rocketFuel)],
  category := .organic
  time := 10
}
| .rocketFuelRecycling => {
  name := "rocket-fuel-recycling",
  inputs := [(1, .rocketFuel)],
  outputs := [(5/2, .solidFuel)],
  category := .recycling
  time := 15/16
}
| .rocketLauncher => {
  name := "rocket-launcher",
  inputs := [(5, .ironPlate), (5, .ironGearWheel), (5, .electronicCircuit)],
  outputs := [(1, .rocketLauncher)],
  category := .crafting
  time := 10
}
| .rocketLauncherRecycling => {
  name := "rocket-launcher-recycling",
  inputs := [(1, .rocketLauncher)],
  outputs := [(5/4, .ironPlate), (5/4, .ironGearWheel), (5/4, .electronicCircuit)],
  category := .recycling
  time := 5/8
}
| .rocketPart => {
  name := "rocket-part",
  inputs := [(1, .processingUnit), (1, .lowDensityStructure), (1, .rocketFuel)],
  outputs := [],
  category := .rocketBuilding
  time := 3
}
| .rocketRecycling => {
  name := "rocket-recycling",
  inputs := [(1, .rocket)],
  outputs := [(1/2, .ironPlate), (1/4, .explosives)],
  category := .recycling
  time := 1/4
}
| .rocketSilo => {
  name := "rocket-silo",
  inputs := [(1000, .steelPlate), (1000, .concrete), (100, .pipe), (200, .processingUnit), (200, .electricEngineUnit)],
  outputs := [(1, .rocketSilo)],
  category := .crafting
  time := 30
}
| .rocketSiloRecycling => {
  name := "rocket-silo-recycling",
  inputs := [(1, .rocketSilo)],
  outputs := [(250, .steelPlate), (250, .concrete), (50, .processingUnit), (50, .electricEngineUnit), (25, .pipe)],
  category := .recycling
  time := 15/8
}
| .rocketTurret => {
  name := "rocket-turret",
  inputs := [(4, .rocketLauncher), (4, .processingUnit), (20, .carbonFiber), (20, .steelPlate), (20, .ironGearWheel)],
  outputs := [(1, .rocketTurret)],
  category := .crafting
  time := 10
}
| .rocketTurretRecycling => {
  name := "rocket-turret-recycling",
  inputs := [(1, .rocketTurret)],
  outputs := [(5, .carbonFiber), (5, .steelPlate), (5, .ironGearWheel), (1, .rocketLauncher), (1, .processingUnit)],
  category := .recycling
  time := 5/8
}
| .scienceRecycling => {
  name := "science-recycling",
  inputs := [(1, .science)],
  outputs := [(1/4, .science)],
  category := .recycling
  time := 1/32
}
| .scrapRecycling => {
  name := "scrap-recycling",
  inputs := [(1, .scrap)],
  outputs := [(1/5, .ironGearWheel), (7/100, .solidFuel), (3/50, .concrete), (1/20, .ice), (1/25, .steelPlate), (1/25, .battery), (1/25, .stone), (3/100, .advancedCircuit), (3/100, .copperCable), (1/50, .processingUnit), (1/100, .lowDensityStructure), (1/100, .holmiumOre)],
  category := .recyclingOrHandCrafting
  time := 1/5
}
| .selectionToolRecycling => {
  name := "selection-tool-recycling",
  inputs := [(1, .selectionTool)],
  outputs := [(1/4, .selectionTool)],
  category := .recycling
  time := 1/32
}
| .selectorCombinator => {
  name := "selector-combinator",
  inputs := [(2, .advancedCircuit), (5, .deciderCombinator)],
  outputs := [(1, .selectorCombinator)],
  category := .crafting
  time := 1/2
}
| .selectorCombinatorRecycling => {
  name := "selector-combinator-recycling",
  inputs := [(1, .selectorCombinator)],
  outputs := [(5/4, .deciderCombinator), (1/2, .advancedCircuit)],
  category := .recycling
  time := 1/32
}
| .shotgun => {
  name := "shotgun",
  inputs := [(15, .ironPlate), (5, .ironGearWheel), (10, .copperPlate), (5, .wood)],
  outputs := [(1, .shotgun)],
  category := .crafting
  time := 10
}
| .shotgunRecycling => {
  name := "shotgun-recycling",
  inputs := [(1, .shotgun)],
  outputs := [(15/4, .ironPlate), (5/2, .copperPlate), (5/4, .ironGearWheel), (5/4, .wood)],
  category := .recycling
  time := 5/8
}
| .shotgunShell => {
  name := "shotgun-shell",
  inputs := [(2, .copperPlate), (2, .ironPlate)],
  outputs := [(1, .shotgunShell)],
  category := .crafting
  time := 3
}
| .shotgunShellRecycling => {
  name := "shotgun-shell-recycling",
  inputs := [(1, .shotgunShell)],
  outputs := [(1/2, .copperPlate), (1/2, .ironPlate)],
  category := .recycling
  time := 3/16
}
| .simpleCoalLiquefaction => {
  name := "simple-coal-liquefaction",
  inputs := [(25, .sulfuricAcid), (10, .coal), (2, .calcite)],
  outputs := [(50, .heavyOil)],
  category := .oilProcessing
  time := 5
}
| .simpleEntityWithForceRecycling => {
  name := "simple-entity-with-force-recycling",
  inputs := [(1, .simpleEntityWithForce)],
  outputs := [(1/4, .simpleEntityWithForce)],
  category := .recycling
  time := 1/32
}
| .simpleEntityWithOwnerRecycling => {
  name := "simple-entity-with-owner-recycling",
  inputs := [(1, .simpleEntityWithOwner)],
  outputs := [(1/4, .simpleEntityWithOwner)],
  category := .recycling
  time := 1/32
}
| .slowdownCapsule => {
  name := "slowdown-capsule",
  inputs := [(2, .steelPlate), (2, .electronicCircuit), (5, .coal)],
  outputs := [(1, .slowdownCapsule)],
  category := .crafting
  time := 8
}
| .slowdownCapsuleRecycling => {
  name := "slowdown-capsule-recycling",
  inputs := [(1, .slowdownCapsule)],
  outputs := [(5/4, .coal), (1/2, .steelPlate), (1/2, .electronicCircuit)],
  category := .recycling
  time := 1/2
}
| .smallElectricPole => {
  name := "small-electric-pole",
  inputs := [(1, .wood), (2, .copperCable)],
  outputs := [(2, .smallElectricPole)],
  category := .electronics
  time := 1/2
}
| .smallElectricPoleRecycling => {
  name := "small-electric-pole-recycling",
  inputs := [(1, .smallElectricPole)],
  outputs := [(1/4, .copperCable), (1/8, .wood)],
  category := .recycling
  time := 1/32
}
| .smallLamp => {
  name := "small-lamp",
  inputs := [(1, .electronicCircuit), (3, .copperCable), (1, .ironPlate)],
  outputs := [(1, .smallLamp)],
  category := .crafting
  time := 1/2
}
| .smallLampRecycling => {
  name := "small-lamp-recycling",
  inputs := [(1, .smallLamp)],
  outputs := [(3/4, .copperCable), (1/4, .electronicCircuit), (1/4, .ironPlate)],
  category := .recycling
  time := 1/32
}
| .solarPanel => {
  name := "solar-panel",
  inputs := [(5, .steelPlate), (15, .electronicCircuit), (5, .copperPlate)],
  outputs := [(1, .solarPanel)],
  category := .electronics
  time := 10
}
| .solarPanelEquipment => {
  name := "solar-panel-equipment",
  inputs := [(1, .solarPanel), (2, .advancedCircuit), (5, .steelPlate)],
  outputs := [(1, .solarPanelEquipment)],
  category := .crafting
  time := 10
}
| .solarPanelEquipmentRecycling => {
  name := "solar-panel-equipment-recycling",
  inputs := [(1, .solarPanelEquipment)],
  outputs := [(5/4, .steelPlate), (1/2, .advancedCircuit), (1/4, .solarPanel)],
  category := .recycling
  time := 5/8
}
| .solarPanelRecycling => {
  name := "solar-panel-recycling",
  inputs := [(1, .solarPanel)],
  outputs := [(15/4, .electronicCircuit), (5/4, .steelPlate), (5/4, .copperPlate)],
  category := .recycling
  time := 5/8
}
| .solidFuelFromAmmonia => {
  name := "solid-fuel-from-ammonia",
  inputs := [(15, .ammonia), (6, .crudeOil)],
  outputs := [(1, .solidFuel)],
  category := .chemistryOrCryogenics
  time := 1/2
}
| .solidFuelFromHeavyOil => {
  name := "solid-fuel-from-heavy-oil",
  inputs := [(20, .heavyOil)],
  outputs := [(1, .solidFuel)],
  category := .chemistry
  time := 1
}
| .solidFuelFromLightOil => {
  name := "solid-fuel-from-light-oil",
  inputs := [(10, .lightOil)],
  outputs := [(1, .solidFuel)],
  category := .chemistry
  time := 1
}
| .solidFuelFromPetroleumGas => {
  name := "solid-fuel-from-petroleum-gas",
  inputs := [(20, .petroleumGas)],
  outputs := [(1, .solidFuel)],
  category := .chemistry
  time := 1
}
| .solidFuelRecycling => {
  name := "solid-fuel-recycling",
  inputs := [(1, .solidFuel)],
  outputs := [(1/4, .solidFuel)],
  category := .recycling
  time := 1/32
}
| .spacePlatformFoundation => {
  name := "space-platform-foundation",
  inputs := [(20, .steelPlate), (20, .copperCable)],
  outputs := [(1, .spacePlatformFoundation)],
  category := .crafting
  time := 10
}
| .spacePlatformFoundationRecycling => {
  name := "space-platform-foundation-recycling",
  inputs := [(1, .spacePlatformFoundation)],
  outputs := [(5, .steelPlate), (5, .copperCable)],
  category := .recycling
  time := 5/8
}
| .spacePlatformHubRecycling => {
  name := "space-platform-hub-recycling",
  inputs := [(1, .spacePlatformHub)],
  outputs := [(1/4, .spacePlatformHub)],
  category := .recycling
  time := 1/32
}
| .spacePlatformStarterPack => {
  name := "space-platform-starter-pack",
  inputs := [(60, .spacePlatformFoundation), (20, .steelPlate), (20, .processingUnit)],
  outputs := [(1, .spacePlatformStarterPack)],
  category := .crafting
  time := 60
}
| .spacePlatformStarterPackRecycling => {
  name := "space-platform-starter-pack-recycling",
  inputs := [(1, .spacePlatformStarterPack)],
  outputs := [(15, .spacePlatformFoundation), (5, .steelPlate), (5, .processingUnit)],
  category := .recycling
  time := 15/4
}
| .spaceSciencePack => {
  name := "space-science-pack",
  inputs := [(2, .ironPlate), (1, .carbon), (1, .ice)],
  outputs := [(5, .spaceSciencePack)],
  category := .crafting
  time := 15
}
| .spaceSciencePackRecycling => {
  name := "space-science-pack-recycling",
  inputs := [(1, .spaceSciencePack)],
  outputs := [(1/4, .spaceSciencePack)],
  category := .recycling
  time := 15/16
}
| .speedModule => {
  name := "speed-module",
  inputs := [(5, .advancedCircuit), (5, .electronicCircuit)],
  outputs := [(1, .speedModule)],
  category := .electronics
  time := 15
}
| .speedModule2 => {
  name := "speed-module-2",
  inputs := [(4, .speedModule), (5, .advancedCircuit), (5, .processingUnit)],
  outputs := [(1, .speedModule2)],
  category := .electronics
  time := 30
}
| .speedModule2Recycling => {
  name := "speed-module-2-recycling",
  inputs := [(1, .speedModule2)],
  outputs := [(5/4, .advancedCircuit), (5/4, .processingUnit), (1, .speedModule)],
  category := .recycling
  time := 15/8
}
| .speedModule3 => {
  name := "speed-module-3",
  inputs := [(4, .speedModule2), (5, .advancedCircuit), (5, .processingUnit), (1, .tungstenCarbide)],
  outputs := [(1, .speedModule3)],
  category := .electronics
  time := 60
}
| .speedModule3Recycling => {
  name := "speed-module-3-recycling",
  inputs := [(1, .speedModule3)],
  outputs := [(5/4, .advancedCircuit), (5/4, .processingUnit), (1, .speedModule2), (1/4, .tungstenCarbide)],
  category := .recycling
  time := 15/4
}
| .speedModuleRecycling => {
  name := "speed-module-recycling",
  inputs := [(1, .speedModule)],
  outputs := [(5/4, .advancedCircuit), (5/4, .electronicCircuit)],
  category := .recycling
  time := 15/16
}
| .spidertron => {
  name := "spidertron",
  inputs := [(4, .exoskeletonEquipment), (2, .fissionReactorEquipment), (1, .rocketTurret), (2, .radar), (1, .rawFish)],
  outputs := [(1, .spidertron)],
  category := .crafting
  time := 10
}
| .spidertronRecycling => {
  name := "spidertron-recycling",
  inputs := [(1, .spidertron)],
  outputs := [(1, .exoskeletonEquipment), (1/2, .fissionReactorEquipment), (1/2, .radar), (1/4, .rocketTurret), (1/4, .rawFish)],
  category := .recycling
  time := 5/8
}
| .splitter => {
  name := "splitter",
  inputs := [(5, .electronicCircuit), (5, .ironPlate), (4, .transportBelt)],
  outputs := [(1, .splitter)],
  category := .pressing
  time := 1
}
| .splitterRecycling => {
  name := "splitter-recycling",
  inputs := [(1, .splitter)],
  outputs := [(5/4, .electronicCircuit), (5/4, .ironPlate), (1, .transportBelt)],
  category := .recycling
  time := 1/16
}
| .spoilageRecycling => {
  name := "spoilage-recycling",
  inputs := [(1, .spoilage)],
  outputs := [(1/4, .spoilage)],
  category := .recycling
  time := 1/32
}
| .stackInserter => {
  name := "stack-inserter",
  inputs := [(1, .bulkInserter), (1, .processingUnit), (2, .carbonFiber), (10, .jelly)],
  outputs := [(1, .stackInserter)],
  category := .crafting
  time := 1/2
}
| .stackInserterRecycling => {
  name := "stack-inserter-recycling",
  inputs := [(1, .stackInserter)],
  outputs := [(5/2, .jelly), (1/2, .carbonFiber), (1/4, .bulkInserter), (1/4, .processingUnit)],
  category := .recycling
  time := 1/32
}
| .steamCondensation => {
  name := "steam-condensation",
  inputs := [(1000, .steam)],
  outputs := [(90, .water)],
  category := .chemistryOrCryogenics
  time := 1
}
| .steamEngine => {
  name := "steam-engine",
  inputs := [(8, .ironGearWheel), (5, .pipe), (10, .ironPlate)],
  outputs := [(1, .steamEngine)],
  category := .crafting
  time := 1/2
}
| .steamEngineRecycling => {
  name := "steam-engine-recycling",
  inputs := [(1, .steamEngine)],
  outputs := [(5/2, .ironPlate), (2, .ironGearWheel), (5/4, .pipe)],
  category := .recycling
  time := 1/32
}
| .steamTurbine => {
  name := "steam-turbine",
  inputs := [(50, .ironGearWheel), (50, .copperPlate), (20, .pipe)],
  outputs := [(1, .steamTurbine)],
  category := .crafting
  time := 3
}
| .steamTurbineRecycling => {
  name := "steam-turbine-recycling",
  inputs := [(1, .steamTurbine)],
  outputs := [(25/2, .ironGearWheel), (25/2, .copperPlate), (5, .pipe)],
  category := .recycling
  time := 3/16
}
| .steelChest => {
  name := "steel-chest",
  inputs := [(8, .steelPlate)],
  outputs := [(1, .steelChest)],
  category := .crafting
  time := 1/2
}
| .steelChestRecycling => {
  name := "steel-chest-recycling",
  inputs := [(1, .steelChest)],
  outputs := [(2, .steelPlate)],
  category := .recycling
  time := 1/32
}
| .steelFurnace => {
  name := "steel-furnace",
  inputs := [(6, .steelPlate), (10, .stoneBrick)],
  outputs := [(1, .steelFurnace)],
  category := .crafting
  time := 3
}
| .steelFurnaceRecycling => {
  name := "steel-furnace-recycling",
  inputs := [(1, .steelFurnace)],
  outputs := [(5/2, .stoneBrick), (3/2, .steelPlate)],
  category := .recycling
  time := 3/16
}
| .steelPlate => {
  name := "steel-plate",
  inputs := [(5, .ironPlate)],
  outputs := [(1, .steelPlate)],
  category := .smelting
  time := 16
}
| .steelPlateRecycling => {
  name := "steel-plate-recycling",
  inputs := [(1, .steelPlate)],
  outputs := [(1/4, .steelPlate)],
  category := .recycling
  time := 1
}
| .stoneBrick => {
  name := "stone-brick",
  inputs := [(2, .stone)],
  outputs := [(1, .stoneBrick)],
  category := .smelting
  time := 16/5
}
| .stoneBrickRecycling => {
  name := "stone-brick-recycling",
  inputs := [(1, .stoneBrick)],
  outputs := [(1/4, .stoneBrick)],
  category := .recycling
  time := 1/5
}
| .stoneFurnace => {
  name := "stone-furnace",
  inputs := [(5, .stone)],
  outputs := [(1, .stoneFurnace)],
  category := .crafting
  time := 1/2
}
| .stoneFurnaceRecycling => {
  name := "stone-furnace-recycling",
  inputs := [(1, .stoneFurnace)],
  outputs := [(5/4, .stone)],
  category := .recycling
  time := 1/32
}
| .stoneRecycling => {
  name := "stone-recycling",
  inputs := [(1, .stone)],
  outputs := [(1/4, .stone)],
  category := .recycling
  time := 1/32
}
| .stoneWall => {
  name := "stone-wall",
  inputs := [(5, .stoneBrick)],
  outputs := [(1, .stoneWall)],
  category := .crafting
  time := 1/2
}
| .stoneWallRecycling => {
  name := "stone-wall-recycling",
  inputs := [(1, .stoneWall)],
  outputs := [(5/4, .stoneBrick)],
  category := .recycling
  time := 1/32
}
| .storageChest => {
  name := "storage-chest",
  inputs := [(1, .steelChest), (3, .electronicCircuit), (1, .advancedCircuit)],
  outputs := [(1, .storageChest)],
  category := .crafting
  time := 1/2
}
| .storageChestRecycling => {
  name := "storage-chest-recycling",
  inputs := [(1, .storageChest)],
  outputs := [(3/4, .electronicCircuit), (1/4, .steelChest), (1/4, .advancedCircuit)],
  category := .recycling
  time := 1/32
}
| .storageTank => {
  name := "storage-tank",
  inputs := [(20, .ironPlate), (5, .steelPlate)],
  outputs := [(1, .storageTank)],
  category := .crafting
  time := 3
}
| .storageTankRecycling => {
  name := "storage-tank-recycling",
  inputs := [(1, .storageTank)],
  outputs := [(5, .ironPlate), (5/4, .steelPlate)],
  category := .recycling
  time := 3/16
}
| .submachineGun => {
  name := "submachine-gun",
  inputs := [(10, .ironGearWheel), (5, .copperPlate), (10, .ironPlate)],
  outputs := [(1, .submachineGun)],
  category := .crafting
  time := 10
}
| .submachineGunRecycling => {
  name := "submachine-gun-recycling",
  inputs := [(1, .submachineGun)],
  outputs := [(5/2, .ironGearWheel), (5/2, .ironPlate), (5/4, .copperPlate)],
  category := .recycling
  time := 5/8
}
| .substation => {
  name := "substation",
  inputs := [(10, .steelPlate), (5, .advancedCircuit), (6, .copperCable)],
  outputs := [(1, .substation)],
  category := .electronics
  time := 1/2
}
| .substationRecycling => {
  name := "substation-recycling",
  inputs := [(1, .substation)],
  outputs := [(5/2, .steelPlate), (3/2, .copperCable), (5/4, .advancedCircuit)],
  category := .recycling
  time := 1/32
}
| .sulfur => {
  name := "sulfur",
  inputs := [(30, .water), (30, .petroleumGas)],
  outputs := [(2, .sulfur)],
  category := .chemistryOrCryogenics
  time := 1
}
| .sulfurRecycling => {
  name := "sulfur-recycling",
  inputs := [(1, .sulfur)],
  outputs := [(1/4, .sulfur)],
  category := .recycling
  time := 1/16
}
| .sulfuricAcid => {
  name := "sulfuric-acid",
  inputs := [(100, .water), (5, .sulfur), (1, .ironPlate)],
  outputs := [(50, .sulfuricAcid)],
  category := .chemistryOrCryogenics
  time := 1
}
| .sulfuricAcidBarrel => {
  name := "sulfuric-acid-barrel",
  inputs := [(50, .sulfuricAcid), (1, .barrel)],
  outputs := [(1, .sulfuricAcidBarrel)],
  category := .craftingWithFluid
  time := 1/5
}
| .sulfuricAcidBarrelRecycling => {
  name := "sulfuric-acid-barrel-recycling",
  inputs := [(1, .sulfuricAcidBarrel)],
  outputs := [(1/4, .barrel)],
  category := .recycling
  time := 1/80
}
| .supercapacitor => {
  name := "supercapacitor",
  inputs := [(10, .electrolyte), (2, .holmiumPlate), (2, .superconductor), (4, .electronicCircuit), (1, .battery)],
  outputs := [(1, .supercapacitor)],
  category := .electromagnetics
  time := 10
}
| .supercapacitorRecycling => {
  name := "supercapacitor-recycling",
  inputs := [(1, .supercapacitor)],
  outputs := [(1, .electronicCircuit), (1/2, .holmiumPlate), (1/2, .superconductor), (1/4, .battery)],
  category := .recycling
  time := 5/8
}
| .superconductor => {
  name := "superconductor",
  inputs := [(5, .lightOil), (1, .holmiumPlate), (1, .copperPlate), (1, .plasticBar)],
  outputs := [(2, .superconductor)],
  category := .electromagnetics
  time := 5
}
| .superconductorRecycling => {
  name := "superconductor-recycling",
  inputs := [(1, .superconductor)],
  outputs := [(1/4, .superconductor)],
  category := .recycling
  time := 5/16
}
| .tank => {
  name := "tank",
  inputs := [(32, .engineUnit), (50, .steelPlate), (15, .ironGearWheel), (10, .advancedCircuit)],
  outputs := [(1, .tank)],
  category := .crafting
  time := 5
}
| .tankRecycling => {
  name := "tank-recycling",
  inputs := [(1, .tank)],
  outputs := [(25/2, .steelPlate), (8, .engineUnit), (15/4, .ironGearWheel), (5/2, .advancedCircuit)],
  category := .recycling
  time := 5/16
}
| .teslaAmmo => {
  name := "tesla-ammo",
  inputs := [(10, .electrolyte), (1, .supercapacitor), (1, .plasticBar)],
  outputs := [(1, .teslaAmmo)],
  category := .electromagnetics
  time := 30
}
| .teslaAmmoRecycling => {
  name := "tesla-ammo-recycling",
  inputs := [(1, .teslaAmmo)],
  outputs := [(1/4, .supercapacitor), (1/4, .plasticBar)],
  category := .recycling
  time := 15/8
}
| .teslaTurret => {
  name := "tesla-turret",
  inputs := [(500, .electrolyte), (1, .teslagun), (10, .supercapacitor), (10, .processingUnit), (50, .superconductor)],
  outputs := [(1, .teslaTurret)],
  category := .electromagnetics
  time := 30
}
| .teslaTurretRecycling => {
  name := "tesla-turret-recycling",
  inputs := [(1, .teslaTurret)],
  outputs := [(25/2, .superconductor), (5/2, .supercapacitor), (5/2, .processingUnit), (1/4, .teslagun)],
  category := .recycling
  time := 15/8
}
| .teslagun => {
  name := "teslagun",
  inputs := [(100, .electrolyte), (10, .holmiumPlate), (10, .superconductor), (30, .plasticBar)],
  outputs := [(1, .teslagun)],
  category := .electromagnetics
  time := 30
}
| .teslagunRecycling => {
  name := "teslagun-recycling",
  inputs := [(1, .teslagun)],
  outputs := [(15/2, .plasticBar), (5/2, .holmiumPlate), (5/2, .superconductor)],
  category := .recycling
  time := 15/8
}
| .thruster => {
  name := "thruster",
  inputs := [(10, .steelPlate), (10, .processingUnit), (5, .electricEngineUnit)],
  outputs := [(1, .thruster)],
  category := .crafting
  time := 10
}
| .thrusterFuel => {
  name := "thruster-fuel",
  inputs := [(10, .water), (2, .carbon)],
  outputs := [(75, .thrusterFuel)],
  category := .chemistry
  time := 2
}
| .thrusterOxidizer => {
  name := "thruster-oxidizer",
  inputs := [(10, .water), (2, .ironOre)],
  outputs := [(75, .thrusterOxidizer)],
  category := .chemistry
  time := 2
}
| .thrusterRecycling => {
  name := "thruster-recycling",
  inputs := [(1, .thruster)],
  outputs := [(5/2, .steelPlate), (5/2, .processingUnit), (5/4, .electricEngineUnit)],
  category := .recycling
  time := 5/8
}
| .toolbeltEquipment => {
  name := "toolbelt-equipment",
  inputs := [(3, .advancedCircuit), (10, .carbonFiber)],
  outputs := [(1, .toolbeltEquipment)],
  category := .crafting
  time := 10
}
| .toolbeltEquipmentRecycling => {
  name := "toolbelt-equipment-recycling",
  inputs := [(1, .toolbeltEquipment)],
  outputs := [(5/2, .carbonFiber), (3/4, .advancedCircuit)],
  category := .recycling
  time := 5/8
}
| .topUpValveRecycling => {
  name := "top-up-valve-recycling",
  inputs := [(1, .topUpValve)],
  outputs := [(1/4, .topUpValve)],
  category := .recycling
  time := 1/32
}
| .trainStop => {
  name := "train-stop",
  inputs := [(5, .electronicCircuit), (6, .ironPlate), (6, .ironStick), (3, .steelPlate)],
  outputs := [(1, .trainStop)],
  category := .crafting
  time := 1/2
}
| .trainStopRecycling => {
  name := "train-stop-recycling",
  inputs := [(1, .trainStop)],
  outputs := [(3/2, .ironPlate), (3/2, .ironStick), (5/4, .electronicCircuit), (3/4, .steelPlate)],
  category := .recycling
  time := 1/32
}
| .transportBelt => {
  name := "transport-belt",
  inputs := [(1, .ironPlate), (1, .ironGearWheel)],
  outputs := [(2, .transportBelt)],
  category := .pressing
  time := 1/2
}
| .transportBeltRecycling => {
  name := "transport-belt-recycling",
  inputs := [(1, .transportBelt)],
  outputs := [(1/8, .ironPlate), (1/8, .ironGearWheel)],
  category := .recycling
  time := 1/32
}
| .treeSeedRecycling => {
  name := "tree-seed-recycling",
  inputs := [(1, .treeSeed)],
  outputs := [(1/4, .treeSeed)],
  category := .recycling
  time := 1/32
}
| .tungstenCarbide => {
  name := "tungsten-carbide",
  inputs := [(10, .sulfuricAcid), (2, .tungstenOre), (1, .carbon)],
  outputs := [(1, .tungstenCarbide)],
  category := .craftingWithFluid
  time := 1
}
| .tungstenCarbideRecycling => {
  name := "tungsten-carbide-recycling",
  inputs := [(1, .tungstenCarbide)],
  outputs := [(1/4, .tungstenCarbide)],
  category := .recycling
  time := 1/16
}
| .tungstenOreRecycling => {
  name := "tungsten-ore-recycling",
  inputs := [(1, .tungstenOre)],
  outputs := [(1/4, .tungstenOre)],
  category := .recycling
  time := 1/32
}
| .tungstenPlate => {
  name := "tungsten-plate",
  inputs := [(10, .moltenIron), (4, .tungstenOre)],
  outputs := [(1, .tungstenPlate)],
  category := .metallurgy
  time := 10
}
| .tungstenPlateRecycling => {
  name := "tungsten-plate-recycling",
  inputs := [(1, .tungstenPlate)],
  outputs := [(1/4, .tungstenPlate)],
  category := .recycling
  time := 5/8
}
| .turboLoader => {
  name := "turbo-loader",
  inputs := [(5, .turboTransportBelt), (1, .expressLoader)],
  outputs := [(1, .turboLoader)],
  category := .crafting
  time := 20
}
| .turboLoaderRecycling => {
  name := "turbo-loader-recycling",
  inputs := [(1, .turboLoader)],
  outputs := [(5/4, .turboTransportBelt), (1/4, .expressLoader)],
  category := .recycling
  time := 5/4
}
| .turboSplitter => {
  name := "turbo-splitter",
  inputs := [(80, .lubricant), (1, .expressSplitter), (15, .tungstenPlate), (2, .processingUnit)],
  outputs := [(1, .turboSplitter)],
  category := .metallurgy
  time := 2
}
| .turboSplitterRecycling => {
  name := "turbo-splitter-recycling",
  inputs := [(1, .turboSplitter)],
  outputs := [(15/4, .tungstenPlate), (1/2, .processingUnit), (1/4, .expressSplitter)],
  category := .recycling
  time := 1/8
}
| .turboTransportBelt => {
  name := "turbo-transport-belt",
  inputs := [(20, .lubricant), (5, .tungstenPlate), (1, .expressTransportBelt)],
  outputs := [(1, .turboTransportBelt)],
  category := .metallurgy
  time := 1/2
}
| .turboTransportBeltRecycling => {
  name := "turbo-transport-belt-recycling",
  inputs := [(1, .turboTransportBelt)],
  outputs := [(5/4, .tungstenPlate), (1/4, .expressTransportBelt)],
  category := .recycling
  time := 1/32
}
| .turboUndergroundBelt => {
  name := "turbo-underground-belt",
  inputs := [(40, .lubricant), (40, .tungstenPlate), (2, .expressUndergroundBelt)],
  outputs := [(2, .turboUndergroundBelt)],
  category := .metallurgy
  time := 2
}
| .turboUndergroundBeltRecycling => {
  name := "turbo-underground-belt-recycling",
  inputs := [(1, .turboUndergroundBelt)],
  outputs := [(5, .tungstenPlate), (1/4, .expressUndergroundBelt)],
  category := .recycling
  time := 1/8
}
| .undergroundBelt => {
  name := "underground-belt",
  inputs := [(10, .ironPlate), (5, .transportBelt)],
  outputs := [(2, .undergroundBelt)],
  category := .pressing
  time := 1
}
| .undergroundBeltRecycling => {
  name := "underground-belt-recycling",
  inputs := [(1, .undergroundBelt)],
  outputs := [(5/4, .ironPlate), (5/8, .transportBelt)],
  category := .recycling
  time := 1/16
}
| .upgradePlannerRecycling => {
  name := "upgrade-planner-recycling",
  inputs := [(1, .upgradePlanner)],
  outputs := [(1/4, .upgradePlanner)],
  category := .recycling
  time := 1/32
}
| .uranium235Recycling => {
  name := "uranium-235-recycling",
  inputs := [(1, .uranium235)],
  outputs := [(1/4, .uranium235)],
  category := .recycling
  time := 1/32
}
| .uranium238Recycling => {
  name := "uranium-238-recycling",
  inputs := [(1, .uranium238)],
  outputs := [(1/4, .uranium238)],
  category := .recycling
  time := 1/32
}
| .uraniumCannonShell => {
  name := "uranium-cannon-shell",
  inputs := [(1, .cannonShell), (1, .uranium238)],
  outputs := [(1, .uraniumCannonShell)],
  category := .crafting
  time := 12
}
| .uraniumCannonShellRecycling => {
  name := "uranium-cannon-shell-recycling",
  inputs := [(1, .uraniumCannonShell)],
  outputs := [(1/4, .cannonShell), (1/4, .uranium238)],
  category := .recycling
  time := 3/4
}
| .uraniumFuelCell => {
  name := "uranium-fuel-cell",
  inputs := [(10, .ironPlate), (1, .uranium235), (19, .uranium238)],
  outputs := [(10, .uraniumFuelCell)],
  category := .crafting
  time := 10
}
| .uraniumFuelCellRecycling => {
  name := "uranium-fuel-cell-recycling",
  inputs := [(1, .uraniumFuelCell)],
  outputs := [(1/4, .uraniumFuelCell)],
  category := .recycling
  time := 5/8
}
| .uraniumOreRecycling => {
  name := "uranium-ore-recycling",
  inputs := [(1, .uraniumOre)],
  outputs := [(1/4, .uraniumOre)],
  category := .recycling
  time := 1/32
}
| .uraniumProcessing => {
  name := "uranium-processing",
  inputs := [(10, .uraniumOre)],
  outputs := [(7/1000, .uranium235), (993/1000, .uranium238)],
  category := .centrifuging
  time := 12
}
| .uraniumRoundsMagazine => {
  name := "uranium-rounds-magazine",
  inputs := [(1, .piercingRoundsMagazine), (1, .uranium238)],
  outputs := [(1, .uraniumRoundsMagazine)],
  category := .crafting
  time := 10
}
| .uraniumRoundsMagazineRecycling => {
  name := "uranium-rounds-magazine-recycling",
  inputs := [(1, .uraniumRoundsMagazine)],
  outputs := [(1/4, .piercingRoundsMagazine), (1/4, .uranium238)],
  category := .recycling
  time := 5/8
}
| .utilitySciencePack => {
  name := "utility-science-pack",
  inputs := [(3, .lowDensityStructure), (2, .processingUnit), (1, .flyingRobotFrame)],
  outputs := [(3, .utilitySciencePack)],
  category := .crafting
  time := 21
}
| .utilitySciencePackRecycling => {
  name := "utility-science-pack-recycling",
  inputs := [(1, .utilitySciencePack)],
  outputs := [(1/4, .utilitySciencePack)],
  category := .recycling
  time := 21/16
}
| .waterBarrel => {
  name := "water-barrel",
  inputs := [(50, .water), (1, .barrel)],
  outputs := [(1, .waterBarrel)],
  category := .craftingWithFluid
  time := 1/5
}
| .waterBarrelRecycling => {
  name := "water-barrel-recycling",
  inputs := [(1, .waterBarrel)],
  outputs := [(1/4, .barrel)],
  category := .recycling
  time := 1/80
}
| .woodProcessing => {
  name := "wood-processing",
  inputs := [(2, .wood)],
  outputs := [(1, .treeSeed)],
  category := .organicOrAssembling
  time := 2
}
| .woodRecycling => {
  name := "wood-recycling",
  inputs := [(1, .wood)],
  outputs := [(1/4, .wood)],
  category := .recycling
  time := 1/32
}
| .woodenChest => {
  name := "wooden-chest",
  inputs := [(2, .wood)],
  outputs := [(1, .woodenChest)],
  category := .crafting
  time := 1/2
}
| .woodenChestRecycling => {
  name := "wooden-chest-recycling",
  inputs := [(1, .woodenChest)],
  outputs := [(1/2, .wood)],
  category := .recycling
  time := 1/32
}
| .yumakoMashRecycling => {
  name := "yumako-mash-recycling",
  inputs := [(1, .yumakoMash)],
  outputs := [(1/4, .yumakoMash)],
  category := .recycling
  time := 1/32
}
| .yumakoProcessing => {
  name := "yumako-processing",
  inputs := [(1, .yumako)],
  outputs := [(2, .yumakoMash), (1/50, .yumakoSeed)],
  category := .organicOrHandCrafting
  time := 1
}
| .yumakoRecycling => {
  name := "yumako-recycling",
  inputs := [(1, .yumako)],
  outputs := [(1/4, .yumako)],
  category := .recycling
  time := 1/32
}
| .yumakoSeedRecycling => {
  name := "yumako-seed-recycling",
  inputs := [(1, .yumakoSeed)],
  outputs := [(1/4, .yumakoSeed)],
  category := .recycling
  time := 1/32
}

end RecipeName

inductive Fabricator
  | assemblingMachine1
  | assemblingMachine2
  | assemblingMachine3
  | biochamber
  | captiveBiterSpawner
  | centrifuge
  | chemicalPlant
  | crusher
  | cryogenicPlant
  | electricFurnace
  | electromagneticPlant
  | foundry
  | oilRefinery
  | recycler
  | rocketSilo
  | steelFurnace
  | stoneFurnace
  deriving DecidableEq, Repr, Inhabited

namespace Fabricator

@[simp]
def details : Fabricator -> FabricatorDetails
| .assemblingMachine1 => {
  name := "assembling-machine-1"
  speedup := 1/2
  productivity := 0
  moduleSlots := 0
  width := 3
  height := 3
  fluidBoxes := [
  ]
  categories := [
    .advancedCrafting,
    .basicCrafting,
    .crafting,
    .electronics,
    .pressing,
  ]
}
| .assemblingMachine2 => {
  name := "assembling-machine-2"
  speedup := 3/4
  productivity := 0
  moduleSlots := 2
  width := 3
  height := 3
  fluidBoxes := [
    {
      offset := 1
      side := .N
      type := .input
    },
    {
      offset := 1
      side := .S
      type := .output
    },
  ]
  categories := [
    .advancedCrafting,
    .basicCrafting,
    .crafting,
    .craftingWithFluid,
    .craftingWithFluidOrMetallurgy,
    .cryogenicsOrAssembling,
    .electronics,
    .electronicsOrAssembling,
    .electronicsWithFluid,
    .metallurgyOrAssembling,
    .organicOrAssembling,
    .organicOrHandCrafting,
    .pressing,
  ]
}
| .assemblingMachine3 => {
  name := "assembling-machine-3"
  speedup := 5/4
  productivity := 0
  moduleSlots := 4
  width := 3
  height := 3
  fluidBoxes := [
    {
      offset := 1
      side := .N
      type := .input
    },
    {
      offset := 1
      side := .S
      type := .output
    },
  ]
  categories := [
    .advancedCrafting,
    .basicCrafting,
    .crafting,
    .craftingWithFluid,
    .craftingWithFluidOrMetallurgy,
    .cryogenicsOrAssembling,
    .electronics,
    .electronicsOrAssembling,
    .electronicsWithFluid,
    .metallurgyOrAssembling,
    .organicOrAssembling,
    .organicOrHandCrafting,
    .pressing,
  ]
}
| .biochamber => {
  name := "biochamber"
  speedup := 2
  productivity := 1/2
  moduleSlots := 4
  width := 3
  height := 3
  fluidBoxes := [
    {
      offset := 0
      side := .N
      type := .input
    },
    {
      offset := 2
      side := .N
      type := .input
    },
    {
      offset := 2
      side := .S
      type := .output
    },
    {
      offset := 0
      side := .S
      type := .output
    },
  ]
  categories := [
    .organic,
    .organicOrAssembling,
    .organicOrChemistry,
    .organicOrHandCrafting,
  ]
}
| .captiveBiterSpawner => {
  name := "captive-biter-spawner"
  speedup := 1
  productivity := 0
  moduleSlots := 0
  width := 5
  height := 5
  fluidBoxes := [
  ]
  categories := [
    .captiveSpawnerProcess,
  ]
}
| .centrifuge => {
  name := "centrifuge"
  speedup := 1
  productivity := 0
  moduleSlots := 2
  width := 3
  height := 3
  fluidBoxes := [
  ]
  categories := [
    .centrifuging,
  ]
}
| .chemicalPlant => {
  name := "chemical-plant"
  speedup := 1
  productivity := 0
  moduleSlots := 3
  width := 3
  height := 3
  fluidBoxes := [
    {
      offset := 0
      side := .N
      type := .input
    },
    {
      offset := 2
      side := .N
      type := .input
    },
    {
      offset := 0
      side := .S
      type := .output
    },
    {
      offset := 2
      side := .S
      type := .output
    },
  ]
  categories := [
    .chemistry,
    .chemistryOrCryogenics,
    .organicOrChemistry,
  ]
}
| .crusher => {
  name := "crusher"
  speedup := 1
  productivity := 0
  moduleSlots := 2
  width := 2
  height := 3
  fluidBoxes := [
  ]
  categories := [
    .crushing,
  ]
}
| .cryogenicPlant => {
  name := "cryogenic-plant"
  speedup := 2
  productivity := 0
  moduleSlots := 8
  width := 5
  height := 5
  fluidBoxes := [
    {
      offset := 0
      side := .S
      type := .input
    },
    {
      offset := 2
      side := .S
      type := .input
    },
    {
      offset := 4
      side := .S
      type := .input
    },
    {
      offset := 0
      side := .N
      type := .output
    },
    {
      offset := 2
      side := .N
      type := .output
    },
    {
      offset := 4
      side := .N
      type := .output
    },
  ]
  categories := [
    .chemistryOrCryogenics,
    .cryogenics,
    .cryogenicsOrAssembling,
  ]
}
| .electricFurnace => {
  name := "electric-furnace"
  speedup := 2
  productivity := 0
  moduleSlots := 2
  width := 3
  height := 3
  fluidBoxes := [
  ]
  categories := [
    .smelting,
  ]
}
| .electromagneticPlant => {
  name := "electromagnetic-plant"
  speedup := 2
  productivity := 1/2
  moduleSlots := 5
  width := 4
  height := 4
  fluidBoxes := [
    {
      offset := 2
      side := .W
      type := .inputOutput
    },
    {
      offset := 1
      side := .E
      type := .inputOutput
    },
    {
      offset := 2
      side := .S
      type := .inputOutput
    },
    {
      offset := 1
      side := .N
      type := .inputOutput
    },
  ]
  categories := [
    .electromagnetics,
    .electronics,
    .electronicsOrAssembling,
    .electronicsWithFluid,
  ]
}
| .foundry => {
  name := "foundry"
  speedup := 4
  productivity := 1/2
  moduleSlots := 4
  width := 5
  height := 5
  fluidBoxes := [
    {
      offset := 1
      side := .S
      type := .input
    },
    {
      offset := 3
      side := .S
      type := .input
    },
    {
      offset := 1
      side := .N
      type := .output
    },
    {
      offset := 3
      side := .N
      type := .output
    },
  ]
  categories := [
    .craftingWithFluidOrMetallurgy,
    .metallurgy,
    .metallurgyOrAssembling,
    .pressing,
  ]
}
| .oilRefinery => {
  name := "oil-refinery"
  speedup := 1
  productivity := 0
  moduleSlots := 3
  width := 5
  height := 5
  fluidBoxes := [
    {
      offset := 1
      side := .S
      type := .input
    },
    {
      offset := 3
      side := .S
      type := .input
    },
    {
      offset := 0
      side := .N
      type := .output
    },
    {
      offset := 2
      side := .N
      type := .output
    },
    {
      offset := 4
      side := .N
      type := .output
    },
  ]
  categories := [
    .oilProcessing,
  ]
}
| .recycler => {
  name := "recycler"
  speedup := 1/2
  productivity := 0
  moduleSlots := 4
  width := 1
  height := 3
  fluidBoxes := [
  ]
  categories := [
    .recycling,
    .recyclingOrHandCrafting,
  ]
}
| .rocketSilo => {
  name := "rocket-silo"
  speedup := 1
  productivity := 0
  moduleSlots := 4
  width := 9
  height := 9
  fluidBoxes := [
  ]
  categories := [
    .rocketBuilding,
  ]
}
| .steelFurnace => {
  name := "steel-furnace"
  speedup := 2
  productivity := 0
  moduleSlots := 0
  width := 1
  height := 2
  fluidBoxes := [
  ]
  categories := [
    .smelting,
  ]
}
| .stoneFurnace => {
  name := "stone-furnace"
  speedup := 1
  productivity := 0
  moduleSlots := 0
  width := 1
  height := 2
  fluidBoxes := [
  ]
  categories := [
    .smelting,
  ]
}

def name (f:Fabricator) := f.details.name

def width (f:Fabricator) := f.details.width

def height (f:Fabricator) := f.details.height

@[simp]
def speedup (f:Fabricator) := f.details.speedup

@[simp]
def productivity (f:Fabricator) := f.details.productivity

@[simp]
def moduleSlots (f:Fabricator) := f.details.moduleSlots

def fluidBoxes (f:Fabricator) := f.details.fluidBoxes

def handlesCategory (f:Fabricator) (c:RecipeCategory) :=
  f.details.categories.contains c

end Fabricator
